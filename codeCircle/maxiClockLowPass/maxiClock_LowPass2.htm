<!DOCTYPE HTML>
<html>
<head>
	<meta charset="utf-8">
	<title>maxiLib.js template</title>
</head>
<body><script>var mp_xhr = function(){var a=function(a){if(-1!=a.indexOf(";base64,")){var b=a.indexOf(";base64,")+8;return a.slice(b).match(/^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$/)?a.slice(b):!1}return!1},b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",c=function(a){var c=b.indexOf(a.charAt(a.length-1));return 64==c?a.substring(0,a.length-1):a},d=function(a){var d=a.length/4*3,e=new ArrayBuffer(d);a=c(c(a));var g,h,i,j,k,l,m,n,f=parseInt(a.length/4*3,10),o=0,p=0;for(g=new Uint8Array(e),a=a.replace(/[^A-Za-z0-9+/=]/g,""),o=0;f>o;o+=3)k=b.indexOf(a.charAt(p++)),l=b.indexOf(a.charAt(p++)),m=b.indexOf(a.charAt(p++)),n=b.indexOf(a.charAt(p++)),h=k<<2|l>>4,i=(15&l)<<4|m>>2,j=(3&m)<<6|n,g[o]=h,64!=m&&(g[o+1]=i),64!=n&&(g[o+2]=j);return e},e=window.XMLHttpRequest;window.XMLHttpRequest=function(){this._orig=e,this.xhr=new this._orig,this.is_b64=!1,this.responseURL="",this.response=null,this.responseXML="",this.responseType="",this.withCredentials=!1,this.status=0,this.statusText="",this.readyState=0,this.timeout=0,this.upload={onloadstart:null,onloadend:null,onprogress:null},this.onreadystatechange=null,this.onprogress=null,this.onload=null,this.upload={}},window.XMLHttpRequest.prototype.open=function(b,c,e,f,g){var h=a(c);h?(this.is_b64=!0,console.log("overriding XHR open"),this.responseURL="monkeypatched://base64",this.response=d(h),console.log(this.response)):(console.log("using normal xhr"),this.is_b64=!1,this.xhr.open.apply(this.xhr,arguments))},window.XMLHttpRequest.prototype.send=function(){if(this.is_b64){console.log("overriding XHR send");var a=new CustomEvent("load",{target:this}),b=new CustomEvent("readystatechange",{target:this});this.readyState=4,this.status=200,this.statusText="OK",this.onreadystatechange&&this.onreadystatechange(b),this.onload&&this.onload(a)}else{this.upload=this.xhr.upload,this.xhr.withCredentials=this.withCredentials,this.xhr.responseType=this.responseType;var c=this;this.xhr.onload=function(a){c.readyState=c.xhr.readyState,(""==c.responseType||"document"==c.responseType)&&(c.responseXML=c.xhr.responseXML),c.response=c.xhr.response,(""==c.responseType||"text"==c.responseType)&&(c.responseText=c.xhr.responseText),c.status=c.xhr.status,c.statusText=c.xhr.statusText,c.onload&&c.onload(a)},this.xhr.onreadystatechange=function(a){c.readyState=c.xhr.readyState,c.status=c.xhr.status,c.statusText=c.xhr.statusText,c.onreadystatechange&&c.onreadystatechange(a)},this.xhr.send.apply(this.xhr,arguments)}},window.XMLHttpRequest.prototype.abort=function(){this.xhr.abort.apply(this.xhr,arguments)},window.XMLHttpRequest.prototype.setRequestHeader=function(){this.xhr.setRequestHeader.apply(this.xhr,arguments)},window.XMLHttpRequest.prototype.getAllResponseHeaders=function(){return this.xhr.getAllResponseHeaders.apply(this.xhr,arguments)},window.XMLHttpRequest.prototype.getResponseHeader=function(){return this.xhr.getResponseHeader.apply(this.xhr,arguments)},window.XMLHttpRequest.prototype.addEventListener=function(a,b){this["on"+a]=b}}; 			mp_xhr(); 			window.parent = null; 			document.onkeydown = function (e) { 				if (e.which === 8 && !(e.target.tagName == 'INPUT') && !(e.target.tagName == 'TEXTAREA') && !(e.target.getAttribute('contenteditable'))) { 					e.preventDefault(); 				} 			};		</script>		<style>			body { 				margin: 0; 				padding: 0; 				background:white; 			}		</style><script type="text/javascript" src="data:text/javascript;base64,var Module;
if (!Module) Module = (typeof Module !== "undefined" ? Module : null) || {};
var moduleOverrides = {};
for (var key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}
var ENVIRONMENT_IS_WEB = typeof window === "object";
var ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
var ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
 if (!Module["print"]) Module["print"] = function print(x) {
  process["stdout"].write(x + "\n");
 };
 if (!Module["printErr"]) Module["printErr"] = function printErr(x) {
  process["stderr"].write(x + "\n");
 };
 var nodeFS = require("fs");
 var nodePath = require("path");
 Module["read"] = function read(filename, binary) {
  filename = nodePath["normalize"](filename);
  var ret = nodeFS["readFileSync"](filename);
  if (!ret && filename != nodePath["resolve"](filename)) {
   filename = path.join(__dirname, "..", "src", filename);
   ret = nodeFS["readFileSync"](filename);
  }
  if (ret && !binary) ret = ret.toString();
  return ret;
 };
 Module["readBinary"] = function readBinary(filename) {
  var ret = Module["read"](filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 Module["load"] = function load(f) {
  globalEval(read(f));
 };
 if (!Module["thisProgram"]) {
  if (process["argv"].length > 1) {
   Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
  } else {
   Module["thisProgram"] = "unknown-program";
  }
 }
 Module["arguments"] = process["argv"].slice(2);
 if (typeof module !== "undefined") {
  module["exports"] = Module;
 }
 process["on"]("uncaughtException", (function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 }));
 Module["inspect"] = (function() {
  return "[Emscripten Module object]";
 });
} else if (ENVIRONMENT_IS_SHELL) {
 if (!Module["print"]) Module["print"] = print;
 if (typeof printErr != "undefined") Module["printErr"] = printErr;
 if (typeof read != "undefined") {
  Module["read"] = read;
 } else {
  Module["read"] = function read() {
   throw "no read() available (jsc?)";
  };
 }
 Module["readBinary"] = function readBinary(f) {
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  var data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  Module["arguments"] = scriptArgs;
 } else if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 Module["read"] = function read(url) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, false);
  xhr.send(null);
  return xhr.responseText;
 };
 if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 if (typeof console !== "undefined") {
  if (!Module["print"]) Module["print"] = function print(x) {
   console.log(x);
  };
  if (!Module["printErr"]) Module["printErr"] = function printErr(x) {
   console.log(x);
  };
 } else {
  var TRY_USE_DUMP = false;
  if (!Module["print"]) Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? (function(x) {
   dump(x);
  }) : (function(x) {});
 }
 if (ENVIRONMENT_IS_WORKER) {
  Module["load"] = importScripts;
 }
 if (typeof Module["setWindowTitle"] === "undefined") {
  Module["setWindowTitle"] = (function(title) {
   document.title = title;
  });
 }
} else {
 throw "Unknown runtime environment. Where are we?";
}
function globalEval(x) {
 eval.call(null, x);
}
if (!Module["load"] && Module["read"]) {
 Module["load"] = function load(f) {
  globalEval(Module["read"](f));
 };
}
if (!Module["print"]) {
 Module["print"] = (function() {});
}
if (!Module["printErr"]) {
 Module["printErr"] = Module["print"];
}
if (!Module["arguments"]) {
 Module["arguments"] = [];
}
if (!Module["thisProgram"]) {
 Module["thisProgram"] = "./this.program";
}
Module.print = Module["print"];
Module.printErr = Module["printErr"];
Module["preRun"] = [];
Module["postRun"] = [];
for (var key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}
var Runtime = {
 setTempRet0: (function(value) {
  tempRet0 = value;
 }),
 getTempRet0: (function() {
  return tempRet0;
 }),
 stackSave: (function() {
  return STACKTOP;
 }),
 stackRestore: (function(stackTop) {
  STACKTOP = stackTop;
 }),
 getNativeTypeSize: (function(type) {
  switch (type) {
  case "i1":
  case "i8":
   return 1;
  case "i16":
   return 2;
  case "i32":
   return 4;
  case "i64":
   return 8;
  case "float":
   return 4;
  case "double":
   return 8;
  default:
   {
    if (type[type.length - 1] === "*") {
     return Runtime.QUANTUM_SIZE;
    } else if (type[0] === "i") {
     var bits = parseInt(type.substr(1));
     assert(bits % 8 === 0);
     return bits / 8;
    } else {
     return 0;
    }
   }
  }
 }),
 getNativeFieldSize: (function(type) {
  return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
 }),
 STACK_ALIGN: 16,
 prepVararg: (function(ptr, type) {
  if (type === "double" || type === "i64") {
   if (ptr & 7) {
    assert((ptr & 7) === 4);
    ptr += 4;
   }
  } else {
   assert((ptr & 3) === 0);
  }
  return ptr;
 }),
 getAlignSize: (function(type, size, vararg) {
  if (!vararg && (type == "i64" || type == "double")) return 8;
  if (!type) return Math.min(size, 8);
  return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
 }),
 dynCall: (function(sig, ptr, args) {
  if (args && args.length) {
   assert(args.length == sig.length - 1);
   if (!args.splice) args = Array.prototype.slice.call(args);
   args.splice(0, 0, ptr);
   assert("dynCall_" + sig in Module, "bad function pointer type - no table for sig '" + sig + "'");
   return Module["dynCall_" + sig].apply(null, args);
  } else {
   assert(sig.length == 1);
   assert("dynCall_" + sig in Module, "bad function pointer type - no table for sig '" + sig + "'");
   return Module["dynCall_" + sig].call(null, ptr);
  }
 }),
 functionPointers: [],
 addFunction: (function(func) {
  for (var i = 0; i < Runtime.functionPointers.length; i++) {
   if (!Runtime.functionPointers[i]) {
    Runtime.functionPointers[i] = func;
    return 2 * (1 + i);
   }
  }
  throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
 }),
 removeFunction: (function(index) {
  Runtime.functionPointers[(index - 2) / 2] = null;
 }),
 warnOnce: (function(text) {
  if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
  if (!Runtime.warnOnce.shown[text]) {
   Runtime.warnOnce.shown[text] = 1;
   Module.printErr(text);
  }
 }),
 funcWrappers: {},
 getFuncWrapper: (function(func, sig) {
  assert(sig);
  if (!Runtime.funcWrappers[sig]) {
   Runtime.funcWrappers[sig] = {};
  }
  var sigCache = Runtime.funcWrappers[sig];
  if (!sigCache[func]) {
   sigCache[func] = function dynCall_wrapper() {
    return Runtime.dynCall(sig, func, arguments);
   };
  }
  return sigCache[func];
 }),
 getCompilerSetting: (function(name) {
  throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
 }),
 stackAlloc: (function(size) {
  var ret = STACKTOP;
  STACKTOP = STACKTOP + size | 0;
  STACKTOP = STACKTOP + 15 & -16;
  assert((STACKTOP | 0) < (STACK_MAX | 0) | 0) | 0;
  return ret;
 }),
 staticAlloc: (function(size) {
  var ret = STATICTOP;
  STATICTOP = STATICTOP + (assert(!staticSealed), size) | 0;
  STATICTOP = STATICTOP + 15 & -16;
  return ret;
 }),
 dynamicAlloc: (function(size) {
  var ret = DYNAMICTOP;
  DYNAMICTOP = DYNAMICTOP + (assert(DYNAMICTOP > 0), size) | 0;
  DYNAMICTOP = DYNAMICTOP + 15 & -16;
  if (DYNAMICTOP >= TOTAL_MEMORY) {
   var success = enlargeMemory();
   if (!success) {
    DYNAMICTOP = ret;
    return 0;
   }
  }
  return ret;
 }),
 alignMemory: (function(size, quantum) {
  var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
  return ret;
 }),
 makeBigInt: (function(low, high, unsigned) {
  var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;
  return ret;
 }),
 GLOBAL_BASE: 8,
 QUANTUM_SIZE: 4,
 __dummy__: 0
};
Module["Runtime"] = Runtime;
var __THREW__ = 0;
var ABORT = false;
var EXITSTATUS = 0;
var undef = 0;
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}
var globalScope = this;
function getCFunc(ident) {
 var func = Module["_" + ident];
 if (!func) {
  try {
   func = eval("_" + ident);
  } catch (e) {}
 }
 assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
 return func;
}
var cwrap, ccall;
((function() {
 var JSfuncs = {
  "stackSave": (function() {
   Runtime.stackSave();
  }),
  "stackRestore": (function() {
   Runtime.stackRestore();
  }),
  "arrayToC": (function(arr) {
   var ret = Runtime.stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }),
  "stringToC": (function(str) {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    ret = Runtime.stackAlloc((str.length << 2) + 1);
    writeStringToMemory(str, ret);
   }
   return ret;
  })
 };
 var toC = {
  "string": JSfuncs["stringToC"],
  "array": JSfuncs["arrayToC"]
 };
 ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  assert(returnType !== "array", 'Return type should not be "array".');
  if (args) {
   for (var i = 0; i < args.length; i++) {
    var converter = toC[argTypes[i]];
    if (converter) {
     if (stack === 0) stack = Runtime.stackSave();
     cArgs[i] = converter(args[i]);
    } else {
     cArgs[i] = args[i];
    }
   }
  }
  var ret = func.apply(null, cArgs);
  if ((!opts || !opts.async) && typeof EmterpreterAsync === "object") {
   assert(!EmterpreterAsync.state, "cannot start async op with normal JS calling ccall");
  }
  if (opts && opts.async) assert(!returnType, "async ccalls cannot return values");
  if (returnType === "string") ret = Pointer_stringify(ret);
  if (stack !== 0) {
   if (opts && opts.async) {
    EmterpreterAsync.asyncFinalizers.push((function() {
     Runtime.stackRestore(stack);
    }));
    return;
   }
   Runtime.stackRestore(stack);
  }
  return ret;
 };
 var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
 function parseJSFunc(jsfunc) {
  var parsed = jsfunc.toString().match(sourceRegex).slice(1);
  return {
   arguments: parsed[0],
   body: parsed[1],
   returnValue: parsed[2]
  };
 }
 var JSsource = {};
 for (var fun in JSfuncs) {
  if (JSfuncs.hasOwnProperty(fun)) {
   JSsource[fun] = parseJSFunc(JSfuncs[fun]);
  }
 }
 cwrap = function cwrap(ident, returnType, argTypes) {
  argTypes = argTypes || [];
  var cfunc = getCFunc(ident);
  var numericArgs = argTypes.every((function(type) {
   return type === "number";
  }));
  var numericRet = returnType !== "string";
  if (numericRet && numericArgs) {
   return cfunc;
  }
  var argNames = argTypes.map((function(x, i) {
   return "$" + i;
  }));
  var funcstr = "(function(" + argNames.join(",") + ") {";
  var nargs = argTypes.length;
  if (!numericArgs) {
   funcstr += "var stack = " + JSsource["stackSave"].body + ";";
   for (var i = 0; i < nargs; i++) {
    var arg = argNames[i], type = argTypes[i];
    if (type === "number") continue;
    var convertCode = JSsource[type + "ToC"];
    funcstr += "var " + convertCode.arguments + " = " + arg + ";";
    funcstr += convertCode.body + ";";
    funcstr += arg + "=" + convertCode.returnValue + ";";
   }
  }
  var cfuncname = parseJSFunc((function() {
   return cfunc;
  })).returnValue;
  funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
  if (!numericRet) {
   var strgfy = parseJSFunc((function() {
    return Pointer_stringify;
   })).returnValue;
   funcstr += "ret = " + strgfy + "(ret);";
  }
  funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
  if (!numericArgs) {
   funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
  }
  funcstr += "return ret})";
  return eval(funcstr);
 };
}))();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;
function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;
 case "i8":
  HEAP8[ptr >> 0] = value;
  break;
 case "i16":
  HEAP16[ptr >> 1] = value;
  break;
 case "i32":
  HEAP32[ptr >> 2] = value;
  break;
 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;
 case "float":
  HEAPF32[ptr >> 2] = value;
  break;
 case "double":
  HEAPF64[ptr >> 3] = value;
  break;
 default:
  abort("invalid type for setValue: " + type);
 }
}
Module["setValue"] = setValue;
function getValue(ptr, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  return HEAP8[ptr >> 0];
 case "i8":
  return HEAP8[ptr >> 0];
 case "i16":
  return HEAP16[ptr >> 1];
 case "i32":
  return HEAP32[ptr >> 2];
 case "i64":
  return HEAP32[ptr >> 2];
 case "float":
  return HEAPF32[ptr >> 2];
 case "double":
  return HEAPF64[ptr >> 3];
 default:
  abort("invalid type for setValue: " + type);
 }
 return null;
}
Module["getValue"] = getValue;
var ALLOC_NORMAL = 0;
var ALLOC_STACK = 1;
var ALLOC_STATIC = 2;
var ALLOC_DYNAMIC = 3;
var ALLOC_NONE = 4;
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;
function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ _malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc ][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var ptr = ret, stop;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (; ptr < stop; ptr += 4) {
   HEAP32[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   HEAP8[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   HEAPU8.set(slab, ret);
  } else {
   HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  if (typeof curr === "function") {
   curr = Runtime.getFunctionIndex(curr);
  }
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  assert(type, "Must know what type to store in allocate!");
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = Runtime.getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}
Module["allocate"] = allocate;
function getMemory(size) {
 if (!staticSealed) return Runtime.staticAlloc(size);
 if (typeof _sbrk !== "undefined" && !_sbrk.called || !runtimeInitialized) return Runtime.dynamicAlloc(size);
 return _malloc(size);
}
Module["getMemory"] = getMemory;
function Pointer_stringify(ptr, length) {
 if (length === 0 || !ptr) return "";
 var hasUtf = 0;
 var t;
 var i = 0;
 while (1) {
  assert(ptr + i < TOTAL_MEMORY);
  t = HEAPU8[ptr + i >> 0];
  hasUtf |= t;
  if (t == 0 && !length) break;
  i++;
  if (length && i == length) break;
 }
 if (!length) length = i;
 var ret = "";
 if (hasUtf < 128) {
  var MAX_CHUNK = 1024;
  var curr;
  while (length > 0) {
   curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
   ret = ret ? ret + curr : curr;
   ptr += MAX_CHUNK;
   length -= MAX_CHUNK;
  }
  return ret;
 }
 return Module["UTF8ToString"](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;
function AsciiToString(ptr) {
 var str = "";
 while (1) {
  var ch = HEAP8[ptr++ >> 0];
  if (!ch) return str;
  str += String.fromCharCode(ch);
 }
}
Module["AsciiToString"] = AsciiToString;
function stringToAscii(str, outPtr) {
 return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;
function UTF8ArrayToString(u8Array, idx) {
 var u0, u1, u2, u3, u4, u5;
 var str = "";
 while (1) {
  u0 = u8Array[idx++];
  if (!u0) return str;
  if (!(u0 & 128)) {
   str += String.fromCharCode(u0);
   continue;
  }
  u1 = u8Array[idx++] & 63;
  if ((u0 & 224) == 192) {
   str += String.fromCharCode((u0 & 31) << 6 | u1);
   continue;
  }
  u2 = u8Array[idx++] & 63;
  if ((u0 & 240) == 224) {
   u0 = (u0 & 15) << 12 | u1 << 6 | u2;
  } else {
   u3 = u8Array[idx++] & 63;
   if ((u0 & 248) == 240) {
    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
   } else {
    u4 = u8Array[idx++] & 63;
    if ((u0 & 252) == 248) {
     u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
    } else {
     u5 = u8Array[idx++] & 63;
     u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
    }
   }
  }
  if (u0 < 65536) {
   str += String.fromCharCode(u0);
  } else {
   var ch = u0 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  }
 }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;
function UTF8ToString(ptr) {
 return UTF8ArrayToString(HEAPU8, ptr);
}
Module["UTF8ToString"] = UTF8ToString;
function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   outU8Array[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   outU8Array[outIdx++] = 192 | u >> 6;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   outU8Array[outIdx++] = 224 | u >> 12;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 2097151) {
   if (outIdx + 3 >= endIdx) break;
   outU8Array[outIdx++] = 240 | u >> 18;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 67108863) {
   if (outIdx + 4 >= endIdx) break;
   outU8Array[outIdx++] = 248 | u >> 24;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 5 >= endIdx) break;
   outU8Array[outIdx++] = 252 | u >> 30;
   outU8Array[outIdx++] = 128 | u >> 24 & 63;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  }
 }
 outU8Array[outIdx] = 0;
 return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;
function stringToUTF8(str, outPtr, maxBytesToWrite) {
 assert(typeof maxBytesToWrite == "number", "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;
function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   ++len;
  } else if (u <= 2047) {
   len += 2;
  } else if (u <= 65535) {
   len += 3;
  } else if (u <= 2097151) {
   len += 4;
  } else if (u <= 67108863) {
   len += 5;
  } else {
   len += 6;
  }
 }
 return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;
function UTF16ToString(ptr) {
 var i = 0;
 var str = "";
 while (1) {
  var codeUnit = HEAP16[ptr + i * 2 >> 1];
  if (codeUnit == 0) return str;
  ++i;
  str += String.fromCharCode(codeUnit);
 }
}
Module["UTF16ToString"] = UTF16ToString;
function stringToUTF16(str, outPtr, maxBytesToWrite) {
 assert(typeof maxBytesToWrite == "number", "stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 if (maxBytesToWrite === undefined) {
  maxBytesToWrite = 2147483647;
 }
 if (maxBytesToWrite < 2) return 0;
 maxBytesToWrite -= 2;
 var startPtr = outPtr;
 var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;
 for (var i = 0; i < numCharsToWrite; ++i) {
  var codeUnit = str.charCodeAt(i);
  HEAP16[outPtr >> 1] = codeUnit;
  outPtr += 2;
 }
 HEAP16[outPtr >> 1] = 0;
 return outPtr - startPtr;
}
Module["stringToUTF16"] = stringToUTF16;
function lengthBytesUTF16(str) {
 return str.length * 2;
}
Module["lengthBytesUTF16"] = lengthBytesUTF16;
function UTF32ToString(ptr) {
 var i = 0;
 var str = "";
 while (1) {
  var utf32 = HEAP32[ptr + i * 4 >> 2];
  if (utf32 == 0) return str;
  ++i;
  if (utf32 >= 65536) {
   var ch = utf32 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  } else {
   str += String.fromCharCode(utf32);
  }
 }
}
Module["UTF32ToString"] = UTF32ToString;
function stringToUTF32(str, outPtr, maxBytesToWrite) {
 assert(typeof maxBytesToWrite == "number", "stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");
 if (maxBytesToWrite === undefined) {
  maxBytesToWrite = 2147483647;
 }
 if (maxBytesToWrite < 4) return 0;
 var startPtr = outPtr;
 var endPtr = startPtr + maxBytesToWrite - 4;
 for (var i = 0; i < str.length; ++i) {
  var codeUnit = str.charCodeAt(i);
  if (codeUnit >= 55296 && codeUnit <= 57343) {
   var trailSurrogate = str.charCodeAt(++i);
   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;
  }
  HEAP32[outPtr >> 2] = codeUnit;
  outPtr += 4;
  if (outPtr + 4 > endPtr) break;
 }
 HEAP32[outPtr >> 2] = 0;
 return outPtr - startPtr;
}
Module["stringToUTF32"] = stringToUTF32;
function lengthBytesUTF32(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var codeUnit = str.charCodeAt(i);
  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;
  len += 4;
 }
 return len;
}
Module["lengthBytesUTF32"] = lengthBytesUTF32;
function demangle(func) {
 var hasLibcxxabi = !!Module["___cxa_demangle"];
 if (hasLibcxxabi) {
  try {
   var buf = _malloc(func.length);
   writeStringToMemory(func.substr(1), buf);
   var status = _malloc(4);
   var ret = Module["___cxa_demangle"](buf, 0, 0, status);
   if (getValue(status, "i32") === 0 && ret) {
    return Pointer_stringify(ret);
   }
  } catch (e) {} finally {
   if (buf) _free(buf);
   if (status) _free(status);
   if (ret) _free(ret);
  }
 }
 var i = 3;
 var basicTypes = {
  "v": "void",
  "b": "bool",
  "c": "char",
  "s": "short",
  "i": "int",
  "l": "long",
  "f": "float",
  "d": "double",
  "w": "wchar_t",
  "a": "signed char",
  "h": "unsigned char",
  "t": "unsigned short",
  "j": "unsigned int",
  "m": "unsigned long",
  "x": "long long",
  "y": "unsigned long long",
  "z": "..."
 };
 var subs = [];
 var first = true;
 function dump(x) {
  if (x) Module.print(x);
  Module.print(func);
  var pre = "";
  for (var a = 0; a < i; a++) pre += " ";
  Module.print(pre + "^");
 }
 function parseNested() {
  i++;
  if (func[i] === "K") i++;
  var parts = [];
  while (func[i] !== "E") {
   if (func[i] === "S") {
    i++;
    var next = func.indexOf("_", i);
    var num = func.substring(i, next) || 0;
    parts.push(subs[num] || "?");
    i = next + 1;
    continue;
   }
   if (func[i] === "C") {
    parts.push(parts[parts.length - 1]);
    i += 2;
    continue;
   }
   var size = parseInt(func.substr(i));
   var pre = size.toString().length;
   if (!size || !pre) {
    i--;
    break;
   }
   var curr = func.substr(i + pre, size);
   parts.push(curr);
   subs.push(curr);
   i += pre + size;
  }
  i++;
  return parts;
 }
 function parse(rawList, limit, allowVoid) {
  limit = limit || Infinity;
  var ret = "", list = [];
  function flushList() {
   return "(" + list.join(", ") + ")";
  }
  var name;
  if (func[i] === "N") {
   name = parseNested().join("::");
   limit--;
   if (limit === 0) return rawList ? [ name ] : name;
  } else {
   if (func[i] === "K" || first && func[i] === "L") i++;
   var size = parseInt(func.substr(i));
   if (size) {
    var pre = size.toString().length;
    name = func.substr(i + pre, size);
    i += pre + size;
   }
  }
  first = false;
  if (func[i] === "I") {
   i++;
   var iList = parse(true);
   var iRet = parse(true, 1, true);
   ret += iRet[0] + " " + name + "<" + iList.join(", ") + ">";
  } else {
   ret = name;
  }
  paramLoop : while (i < func.length && limit-- > 0) {
   var c = func[i++];
   if (c in basicTypes) {
    list.push(basicTypes[c]);
   } else {
    switch (c) {
    case "P":
     list.push(parse(true, 1, true)[0] + "*");
     break;
    case "R":
     list.push(parse(true, 1, true)[0] + "&");
     break;
    case "L":
     {
      i++;
      var end = func.indexOf("E", i);
      var size = end - i;
      list.push(func.substr(i, size));
      i += size + 2;
      break;
     }
    case "A":
     {
      var size = parseInt(func.substr(i));
      i += size.toString().length;
      if (func[i] !== "_") throw "?";
      i++;
      list.push(parse(true, 1, true)[0] + " [" + size + "]");
      break;
     }
    case "E":
     break paramLoop;
    default:
     ret += "?" + c;
     break paramLoop;
    }
   }
  }
  if (!allowVoid && list.length === 1 && list[0] === "void") list = [];
  if (rawList) {
   if (ret) {
    list.push(ret + "?");
   }
   return list;
  } else {
   return ret + flushList();
  }
 }
 var parsed = func;
 try {
  if (func == "Object._main" || func == "_main") {
   return "main()";
  }
  if (typeof func === "number") func = Pointer_stringify(func);
  if (func[0] !== "_") return func;
  if (func[1] !== "_") return func;
  if (func[2] !== "Z") return func;
  switch (func[3]) {
  case "n":
   return "operator new()";
  case "d":
   return "operator delete()";
  }
  parsed = parse();
 } catch (e) {
  parsed += "?";
 }
 if (parsed.indexOf("?") >= 0 && !hasLibcxxabi) {
  Runtime.warnOnce("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
 }
 return parsed;
}
function demangleAll(text) {
 return text.replace(/__Z[\w\d_]+/g, (function(x) {
  var y = demangle(x);
  return x === y ? x : x + " [" + y + "]";
 }));
}
function jsStackTrace() {
 var err = new Error;
 if (!err.stack) {
  try {
   throw new Error(0);
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}
function stackTrace() {
 return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
 if (x % 4096 > 0) {
  x += 4096 - x % 4096;
 }
 return x;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false;
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0;
var DYNAMIC_BASE = 0, DYNAMICTOP = 0;
function enlargeMemory() {
 assert(DYNAMICTOP >= TOTAL_MEMORY);
 assert(TOTAL_MEMORY > 4);
 var OLD_TOTAL_MEMORY = TOTAL_MEMORY;
 var LIMIT = Math.pow(2, 31);
 if (DYNAMICTOP >= LIMIT) return false;
 while (TOTAL_MEMORY <= DYNAMICTOP) {
  if (TOTAL_MEMORY < LIMIT / 2) {
   TOTAL_MEMORY = alignMemoryPage(2 * TOTAL_MEMORY);
  } else {
   var last = TOTAL_MEMORY;
   TOTAL_MEMORY = alignMemoryPage((3 * TOTAL_MEMORY + LIMIT) / 4);
   if (TOTAL_MEMORY <= last) return false;
  }
 }
 TOTAL_MEMORY = Math.max(TOTAL_MEMORY, 16 * 1024 * 1024);
 if (TOTAL_MEMORY >= LIMIT) return false;
 Module.printErr("Warning: Enlarging memory arrays, this is not fast! " + [ OLD_TOTAL_MEMORY, TOTAL_MEMORY ]);
 var start = Date.now();
 try {
  if (ArrayBuffer.transfer) {
   buffer = ArrayBuffer.transfer(buffer, TOTAL_MEMORY);
  } else {
   var oldHEAP8 = HEAP8;
   buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
 } catch (e) {
  return false;
 }
 var success = _emscripten_replace_memory(buffer);
 if (!success) return false;
 Module["buffer"] = buffer;
 Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
 Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
 Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
 if (!ArrayBuffer.transfer) {
  HEAP8.set(oldHEAP8);
 }
 Module.printErr("enlarged memory arrays from " + OLD_TOTAL_MEMORY + " to " + TOTAL_MEMORY + ", took " + (Date.now() - start) + " ms (has ArrayBuffer.transfer? " + !!ArrayBuffer.transfer + ")");
 return true;
}
var byteLength;
try {
 byteLength = Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, "byteLength").get);
 byteLength(new ArrayBuffer(4));
} catch (e) {
 byteLength = (function(buffer) {
  return buffer.byteLength;
 });
}
var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;
var totalMemory = 64 * 1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
 if (totalMemory < 16 * 1024 * 1024) {
  totalMemory *= 2;
 } else {
  totalMemory += 16 * 1024 * 1024;
 }
}
totalMemory = Math.max(totalMemory, 16 * 1024 * 1024);
if (totalMemory !== TOTAL_MEMORY) {
 Module.printErr("increasing TOTAL_MEMORY to " + totalMemory + " to be compliant with the asm.js spec (and given that TOTAL_STACK=" + TOTAL_STACK + ")");
 TOTAL_MEMORY = totalMemory;
}
assert(typeof Int32Array !== "undefined" && typeof Float64Array !== "undefined" && !!(new Int32Array(1))["subarray"] && !!(new Int32Array(1))["set"], "JS engine does not provide full typed array support");
var buffer;
buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, "Typed arrays 2 must be run on a little-endian system");
Module["HEAP"] = HEAP;
Module["buffer"] = buffer;
Module["HEAP8"] = HEAP8;
Module["HEAP16"] = HEAP16;
Module["HEAP32"] = HEAP32;
Module["HEAPU8"] = HEAPU8;
Module["HEAPU16"] = HEAPU16;
Module["HEAPU32"] = HEAPU32;
Module["HEAPF32"] = HEAPF32;
Module["HEAPF64"] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback();
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Runtime.dynCall("v", func);
   } else {
    Runtime.dynCall("vi", func, [ callback.arg ]);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}
var __ATPRERUN__ = [];
var __ATINIT__ = [];
var __ATMAIN__ = [];
var __ATEXIT__ = [];
var __ATPOSTRUN__ = [];
var runtimeInitialized = false;
var runtimeExited = false;
function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
 if (runtimeInitialized) return;
 runtimeInitialized = true;
 callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
 callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
 callRuntimeCallbacks(__ATEXIT__);
 runtimeExited = true;
}
function postRun() {
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;
function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;
function addOnPreMain(cb) {
 __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;
function addOnExit(cb) {
 __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;
function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;
function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}
Module["intArrayFromString"] = intArrayFromString;
function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   assert(false, "Character code " + chr + " (" + String.fromCharCode(chr) + ")  at offset " + i + " not in 0x00-0xFF.");
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}
Module["intArrayToString"] = intArrayToString;
function writeStringToMemory(string, buffer, dontAddNull) {
 var array = intArrayFromString(string, dontAddNull);
 var i = 0;
 while (i < array.length) {
  var chr = array[i];
  HEAP8[buffer + i >> 0] = chr;
  i = i + 1;
 }
}
Module["writeStringToMemory"] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
 for (var i = 0; i < array.length; i++) {
  HEAP8[buffer++ >> 0] = array[i];
 }
}
Module["writeArrayToMemory"] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  assert(str.charCodeAt(i) === str.charCodeAt(i) & 255);
  HEAP8[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;
function unSign(value, bits, ignore) {
 if (value >= 0) {
  return value;
 }
 return bits <= 32 ? 2 * Math.abs(1 << bits - 1) + value : Math.pow(2, bits) + value;
}
function reSign(value, bits, ignore) {
 if (value <= 0) {
  return value;
 }
 var half = bits <= 32 ? Math.abs(1 << bits - 1) : Math.pow(2, bits - 1);
 if (value >= half && (bits <= 32 || value > half)) {
  value = -2 * half + value;
 }
 return value;
}
if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5) Math["imul"] = function imul(a, b) {
 var ah = a >>> 16;
 var al = a & 65535;
 var bh = b >>> 16;
 var bl = b & 65535;
 return al * bl + (ah * bl + al * bh << 16) | 0;
};
Math.imul = Math["imul"];
if (!Math["clz32"]) Math["clz32"] = (function(x) {
 x = x >>> 0;
 for (var i = 0; i < 32; i++) {
  if (x & 1 << 31 - i) return i;
 }
 return 32;
});
Math.clz32 = Math["clz32"];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null;
var runDependencyTracking = {};
function getUniqueRunDependency(id) {
 var orig = id;
 while (1) {
  if (!runDependencyTracking[id]) return id;
  id = orig + Math.random();
 }
 return id;
}
function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(!runDependencyTracking[id]);
  runDependencyTracking[id] = 1;
  if (runDependencyWatcher === null && typeof setInterval !== "undefined") {
   runDependencyWatcher = setInterval((function() {
    if (ABORT) {
     clearInterval(runDependencyWatcher);
     runDependencyWatcher = null;
     return;
    }
    var shown = false;
    for (var dep in runDependencyTracking) {
     if (!shown) {
      shown = true;
      Module.printErr("still waiting on run dependencies:");
     }
     Module.printErr("dependency: " + dep);
    }
    if (shown) {
     Module.printErr("(end of list)");
    }
   }), 1e4);
  }
 } else {
  Module.printErr("warning: run dependency added without ID");
 }
}
Module["addRunDependency"] = addRunDependency;
function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (id) {
  assert(runDependencyTracking[id]);
  delete runDependencyTracking[id];
 } else {
  Module.printErr("warning: run dependency removed without ID");
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}
Module["removeRunDependency"] = removeRunDependency;
Module["preloadedImages"] = {};
Module["preloadedAudios"] = {};
var memoryInitializer = null;
var ASM_CONSTS = [];
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 43584;
__ATINIT__.push({
 func: (function() {
  __GLOBAL__sub_I_maxi_emscr_new_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_maxiFFT_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_maxiMFCC_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_maxiGrains_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_bind_cpp();
 })
});
allocate([ 0, 0, 0, 0, 0, 0, 0, 0, 159, 114, 76, 22, 247, 31, 137, 63, 159, 114, 76, 22, 247, 31, 153, 63, 248, 85, 185, 80, 249, 215, 162, 63, 252, 199, 66, 116, 8, 28, 169, 63, 164, 228, 213, 57, 6, 100, 175, 63, 158, 10, 184, 231, 249, 211, 178, 63, 160, 195, 124, 121, 1, 246, 181, 63, 154, 6, 69, 243, 0, 22, 185, 63, 75, 234, 4, 52, 17, 54, 188, 63, 103, 15, 180, 2, 67, 86, 191, 63, 98, 161, 214, 52, 239, 56, 193, 63, 158, 94, 41, 203, 16, 199, 194, 63, 77, 248, 165, 126, 222, 84, 196, 63, 55, 224, 243, 195, 8, 225, 197, 63, 148, 164, 107, 38, 223, 108, 199, 63, 213, 33, 55, 195, 13, 248, 200, 63, 224, 16, 170, 212, 236, 129, 202, 63, 208, 184, 112, 32, 36, 11, 204, 63, 137, 210, 222, 224, 11, 147, 205, 63, 240, 22, 72, 80, 252, 24, 207, 63, 172, 173, 216, 95, 118, 79, 208, 63, 54, 229, 10, 239, 114, 17, 209, 63, 109, 231, 251, 169, 241, 210, 209, 63, 250, 126, 106, 188, 116, 147, 210, 63, 51, 225, 151, 250, 121, 83, 211, 63, 23, 14, 132, 100, 1, 19, 212, 63, 83, 208, 237, 37, 141, 209, 212, 63, 30, 22, 106, 77, 243, 142, 213, 63, 92, 56, 16, 146, 5, 76, 214, 63, 43, 222, 200, 60, 242, 7, 215, 63, 23, 43, 106, 48, 13, 195, 215, 63, 232, 48, 95, 94, 128, 125, 216, 63, 188, 150, 144, 15, 122, 54, 217, 63, 59, 199, 128, 236, 245, 238, 217, 63, 17, 141, 238, 32, 118, 166, 218, 63, 234, 178, 152, 216, 124, 92, 219, 63, 110, 163, 1, 188, 5, 18, 220, 63, 46, 226, 59, 49, 235, 197, 220, 63, 12, 200, 94, 239, 254, 120, 221, 63, 123, 49, 148, 19, 237, 42, 222, 63, 179, 12, 113, 172, 139, 219, 222, 63, 123, 107, 96, 171, 4, 139, 223, 63, 205, 175, 230, 0, 193, 28, 224, 63, 222, 89, 187, 237, 66, 115, 224, 63, 154, 206, 78, 6, 71, 201, 224, 63, 116, 234, 202, 103, 121, 30, 225, 63, 52, 191, 154, 3, 4, 115, 225, 63, 187, 213, 115, 210, 251, 198, 225, 63, 67, 28, 235, 226, 54, 26, 226, 63, 176, 27, 182, 45, 202, 108, 226, 63, 88, 57, 180, 200, 118, 190, 226, 63, 143, 170, 38, 136, 186, 15, 227, 63, 28, 177, 22, 159, 2, 96, 227, 63, 114, 249, 15, 233, 183, 175, 227, 63, 3, 96, 60, 131, 134, 254, 227, 63, 91, 8, 114, 80, 194, 76, 228, 63, 11, 70, 37, 117, 2, 154, 228, 63, 188, 179, 118, 219, 133, 230, 228, 63, 138, 200, 176, 138, 55, 50, 229, 63, 148, 251, 29, 138, 2, 125, 229, 63, 101, 112, 148, 188, 58, 199, 229, 63, 141, 122, 136, 70, 119, 16, 230, 63, 13, 26, 250, 39, 184, 88, 230, 63, 142, 233, 9, 75, 60, 160, 230, 63, 16, 233, 183, 175, 3, 231, 230, 63, 6, 245, 45, 115, 186, 44, 231, 63, 83, 150, 33, 142, 117, 113, 231, 63, 132, 240, 104, 227, 136, 181, 231, 63, 70, 206, 194, 158, 118, 248, 231, 63, 237, 100, 112, 148, 188, 58, 232, 63, 235, 144, 155, 225, 6, 124, 232, 63, 92, 201, 142, 141, 64, 188, 232, 63, 36, 151, 255, 144, 126, 251, 232, 63, 68, 250, 237, 235, 192, 57, 233, 63, 101, 141, 122, 136, 70, 119, 233, 63, 79, 146, 174, 153, 124, 179, 233, 63, 59, 199, 128, 236, 245, 238, 233, 63, 183, 127, 101, 165, 73, 41, 234, 63, 109, 86, 125, 174, 182, 98, 234, 63, 180, 176, 167, 29, 254, 154, 234, 63, 251, 58, 112, 206, 136, 210, 234, 63, 13, 55, 224, 243, 195, 8, 235, 63, 117, 200, 205, 112, 3, 62, 235, 63, 53, 239, 56, 69, 71, 114, 235, 63, 190, 135, 75, 142, 59, 165, 235, 63, 43, 217, 177, 17, 136, 215, 235, 63, 99, 156, 191, 9, 133, 8, 236, 63, 71, 90, 42, 111, 71, 56, 236, 63, 72, 191, 125, 29, 56, 103, 236, 63, 219, 167, 227, 49, 3, 149, 236, 63, 54, 2, 241, 186, 126, 193, 236, 63, 147, 140, 156, 133, 61, 237, 236, 63, 243, 118, 132, 211, 130, 23, 237, 63, 198, 109, 52, 128, 183, 64, 237, 63, 212, 130, 23, 125, 5, 105, 237, 63, 171, 9, 162, 238, 3, 144, 237, 63, 217, 37, 170, 183, 6, 182, 237, 63, 208, 179, 89, 245, 185, 218, 237, 63, 88, 197, 27, 153, 71, 254, 237, 63, 84, 227, 165, 155, 196, 32, 238, 63, 252, 251, 140, 11, 7, 66, 238, 63, 24, 33, 60, 218, 56, 98, 238, 63, 27, 47, 221, 36, 6, 129, 238, 63, 59, 228, 102, 184, 1, 159, 238, 63, 93, 249, 44, 207, 131, 187, 238, 63, 215, 163, 112, 61, 10, 215, 238, 63, 112, 37, 59, 54, 2, 241, 238, 63, 10, 215, 163, 112, 61, 10, 239, 63, 167, 232, 72, 46, 255, 33, 239, 63, 241, 244, 74, 89, 134, 56, 239, 63, 174, 13, 21, 227, 252, 77, 239, 63, 24, 33, 60, 218, 56, 98, 239, 63, 48, 47, 192, 62, 58, 117, 239, 63, 244, 55, 161, 16, 1, 135, 239, 63, 129, 178, 41, 87, 120, 151, 239, 63, 73, 75, 229, 237, 8, 167, 239, 63, 77, 50, 114, 22, 246, 180, 239, 63, 139, 55, 50, 143, 252, 193, 239, 63, 118, 55, 79, 117, 200, 205, 239, 63, 42, 169, 19, 208, 68, 216, 239, 63, 140, 21, 53, 152, 134, 225, 239, 63, 182, 243, 253, 212, 120, 233, 239, 63, 113, 85, 217, 119, 69, 240, 239, 63, 246, 40, 92, 143, 194, 245, 239, 63, 39, 247, 59, 20, 5, 250, 239, 63, 204, 209, 227, 247, 54, 253, 239, 63, 87, 149, 125, 87, 4, 255, 239, 63, 86, 101, 223, 21, 193, 255, 239, 63, 87, 149, 125, 87, 4, 255, 239, 63, 204, 209, 227, 247, 54, 253, 239, 63, 39, 247, 59, 20, 5, 250, 239, 63, 246, 40, 92, 143, 194, 245, 239, 63, 113, 85, 217, 119, 69, 240, 239, 63, 182, 243, 253, 212, 120, 233, 239, 63, 140, 21, 53, 152, 134, 225, 239, 63, 42, 169, 19, 208, 68, 216, 239, 63, 118, 55, 79, 117, 200, 205, 239, 63, 139, 55, 50, 143, 252, 193, 239, 63, 77, 50, 114, 22, 246, 180, 239, 63, 73, 75, 229, 237, 8, 167, 239, 63, 129, 178, 41, 87, 120, 151, 239, 63, 244, 55, 161, 16, 1, 135, 239, 63, 48, 47, 192, 62, 58, 117, 239, 63, 24, 33, 60, 218, 56, 98, 239, 63, 174, 13, 21, 227, 252, 77, 239, 63, 241, 244, 74, 89, 134, 56, 239, 63, 167, 232, 72, 46, 255, 33, 239, 63, 10, 215, 163, 112, 61, 10, 239, 63, 112, 37, 59, 54, 2, 241, 238, 63, 215, 163, 112, 61, 10, 215, 238, 63, 93, 249, 44, 207, 131, 187, 238, 63, 59, 228, 102, 184, 1, 159, 238, 63, 27, 47, 221, 36, 6, 129, 238, 63, 24, 33, 60, 218, 56, 98, 238, 63, 252, 251, 140, 11, 7, 66, 238, 63, 84, 227, 165, 155, 196, 32, 238, 63, 88, 197, 27, 153, 71, 254, 237, 63, 208, 179, 89, 245, 185, 218, 237, 63, 217, 37, 170, 183, 6, 182, 237, 63, 171, 9, 162, 238, 3, 144, 237, 63, 212, 130, 23, 125, 5, 105, 237, 63, 198, 109, 52, 128, 183, 64, 237, 63, 243, 118, 132, 211, 130, 23, 237, 63, 147, 140, 156, 133, 61, 237, 236, 63, 54, 2, 241, 186, 126, 193, 236, 63, 219, 167, 227, 49, 3, 149, 236, 63, 72, 191, 125, 29, 56, 103, 236, 63, 71, 90, 42, 111, 71, 56, 236, 63, 99, 156, 191, 9, 133, 8, 236, 63, 43, 217, 177, 17, 136, 215, 235, 63, 190, 135, 75, 142, 59, 165, 235, 63, 53, 239, 56, 69, 71, 114, 235, 63, 117, 200, 205, 112, 3, 62, 235, 63, 13, 55, 224, 243, 195, 8, 235, 63, 251, 58, 112, 206, 136, 210, 234, 63, 180, 176, 167, 29, 254, 154, 234, 63, 109, 86, 125, 174, 182, 98, 234, 63, 183, 127, 101, 165, 73, 41, 234, 63, 59, 199, 128, 236, 245, 238, 233, 63, 79, 146, 174, 153, 124, 179, 233, 63, 101, 141, 122, 136, 70, 119, 233, 63, 68, 250, 237, 235, 192, 57, 233, 63, 36, 151, 255, 144, 126, 251, 232, 63, 92, 201, 142, 141, 64, 188, 232, 63, 235, 144, 155, 225, 6, 124, 232, 63, 237, 100, 112, 148, 188, 58, 232, 63, 70, 206, 194, 158, 118, 248, 231, 63, 132, 240, 104, 227, 136, 181, 231, 63, 83, 150, 33, 142, 117, 113, 231, 63, 6, 245, 45, 115, 186, 44, 231, 63, 16, 233, 183, 175, 3, 231, 230, 63, 142, 233, 9, 75, 60, 160, 230, 63, 13, 26, 250, 39, 184, 88, 230, 63, 141, 122, 136, 70, 119, 16, 230, 63, 101, 112, 148, 188, 58, 199, 229, 63, 148, 251, 29, 138, 2, 125, 229, 63, 138, 200, 176, 138, 55, 50, 229, 63, 188, 179, 118, 219, 133, 230, 228, 63, 11, 70, 37, 117, 2, 154, 228, 63, 91, 8, 114, 80, 194, 76, 228, 63, 3, 96, 60, 131, 134, 254, 227, 63, 114, 249, 15, 233, 183, 175, 227, 63, 28, 177, 22, 159, 2, 96, 227, 63, 143, 170, 38, 136, 186, 15, 227, 63, 88, 57, 180, 200, 118, 190, 226, 63, 176, 27, 182, 45, 202, 108, 226, 63, 67, 28, 235, 226, 54, 26, 226, 63, 187, 213, 115, 210, 251, 198, 225, 63, 52, 191, 154, 3, 4, 115, 225, 63, 116, 234, 202, 103, 121, 30, 225, 63, 154, 206, 78, 6, 71, 201, 224, 63, 222, 89, 187, 237, 66, 115, 224, 63, 205, 175, 230, 0, 193, 28, 224, 63, 123, 107, 96, 171, 4, 139, 223, 63, 179, 12, 113, 172, 139, 219, 222, 63, 123, 49, 148, 19, 237, 42, 222, 63, 12, 200, 94, 239, 254, 120, 221, 63, 46, 226, 59, 49, 235, 197, 220, 63, 110, 163, 1, 188, 5, 18, 220, 63, 234, 178, 152, 216, 124, 92, 219, 63, 17, 141, 238, 32, 118, 166, 218, 63, 59, 199, 128, 236, 245, 238, 217, 63, 188, 150, 144, 15, 122, 54, 217, 63, 232, 48, 95, 94, 128, 125, 216, 63, 23, 43, 106, 48, 13, 195, 215, 63, 43, 222, 200, 60, 242, 7, 215, 63, 92, 56, 16, 146, 5, 76, 214, 63, 30, 22, 106, 77, 243, 142, 213, 63, 83, 208, 237, 37, 141, 209, 212, 63, 23, 14, 132, 100, 1, 19, 212, 63, 51, 225, 151, 250, 121, 83, 211, 63, 250, 126, 106, 188, 116, 147, 210, 63, 109, 231, 251, 169, 241, 210, 209, 63, 54, 229, 10, 239, 114, 17, 209, 63, 172, 173, 216, 95, 118, 79, 208, 63, 240, 22, 72, 80, 252, 24, 207, 63, 137, 210, 222, 224, 11, 147, 205, 63, 208, 184, 112, 32, 36, 11, 204, 63, 224, 16, 170, 212, 236, 129, 202, 63, 213, 33, 55, 195, 13, 248, 200, 63, 148, 164, 107, 38, 223, 108, 199, 63, 55, 224, 243, 195, 8, 225, 197, 63, 77, 248, 165, 126, 222, 84, 196, 63, 158, 94, 41, 203, 16, 199, 194, 63, 98, 161, 214, 52, 239, 56, 193, 63, 103, 15, 180, 2, 67, 86, 191, 63, 75, 234, 4, 52, 17, 54, 188, 63, 154, 6, 69, 243, 0, 22, 185, 63, 160, 195, 124, 121, 1, 246, 181, 63, 158, 10, 184, 231, 249, 211, 178, 63, 164, 228, 213, 57, 6, 100, 175, 63, 252, 199, 66, 116, 8, 28, 169, 63, 248, 85, 185, 80, 249, 215, 162, 63, 159, 114, 76, 22, 247, 31, 153, 63, 159, 114, 76, 22, 247, 31, 137, 63, 0, 0, 0, 0, 0, 0, 0, 0, 159, 114, 76, 22, 247, 31, 137, 191, 159, 114, 76, 22, 247, 31, 153, 191, 248, 85, 185, 80, 249, 215, 162, 191, 252, 199, 66, 116, 8, 28, 169, 191, 164, 228, 213, 57, 6, 100, 175, 191, 158, 10, 184, 231, 249, 211, 178, 191, 160, 195, 124, 121, 1, 246, 181, 191, 154, 6, 69, 243, 0, 22, 185, 191, 75, 234, 4, 52, 17, 54, 188, 191, 103, 15, 180, 2, 67, 86, 191, 191, 98, 161, 214, 52, 239, 56, 193, 191, 158, 94, 41, 203, 16, 199, 194, 191, 77, 248, 165, 126, 222, 84, 196, 191, 55, 224, 243, 195, 8, 225, 197, 191, 148, 164, 107, 38, 223, 108, 199, 191, 213, 33, 55, 195, 13, 248, 200, 191, 224, 16, 170, 212, 236, 129, 202, 191, 208, 184, 112, 32, 36, 11, 204, 191, 137, 210, 222, 224, 11, 147, 205, 191, 240, 22, 72, 80, 252, 24, 207, 191, 172, 173, 216, 95, 118, 79, 208, 191, 54, 229, 10, 239, 114, 17, 209, 191, 109, 231, 251, 169, 241, 210, 209, 191, 250, 126, 106, 188, 116, 147, 210, 191, 51, 225, 151, 250, 121, 83, 211, 191, 23, 14, 132, 100, 1, 19, 212, 191, 83, 208, 237, 37, 141, 209, 212, 191, 30, 22, 106, 77, 243, 142, 213, 191, 92, 56, 16, 146, 5, 76, 214, 191, 43, 222, 200, 60, 242, 7, 215, 191, 23, 43, 106, 48, 13, 195, 215, 191, 232, 48, 95, 94, 128, 125, 216, 191, 188, 150, 144, 15, 122, 54, 217, 191, 59, 199, 128, 236, 245, 238, 217, 191, 17, 141, 238, 32, 118, 166, 218, 191, 234, 178, 152, 216, 124, 92, 219, 191, 110, 163, 1, 188, 5, 18, 220, 191, 46, 226, 59, 49, 235, 197, 220, 191, 12, 200, 94, 239, 254, 120, 221, 191, 123, 49, 148, 19, 237, 42, 222, 191, 179, 12, 113, 172, 139, 219, 222, 191, 123, 107, 96, 171, 4, 139, 223, 191, 205, 175, 230, 0, 193, 28, 224, 191, 222, 89, 187, 237, 66, 115, 224, 191, 154, 206, 78, 6, 71, 201, 224, 191, 116, 234, 202, 103, 121, 30, 225, 191, 52, 191, 154, 3, 4, 115, 225, 191, 187, 213, 115, 210, 251, 198, 225, 191, 67, 28, 235, 226, 54, 26, 226, 191, 176, 27, 182, 45, 202, 108, 226, 191, 88, 57, 180, 200, 118, 190, 226, 191, 143, 170, 38, 136, 186, 15, 227, 191, 28, 177, 22, 159, 2, 96, 227, 191, 114, 249, 15, 233, 183, 175, 227, 191, 3, 96, 60, 131, 134, 254, 227, 191, 91, 8, 114, 80, 194, 76, 228, 191, 11, 70, 37, 117, 2, 154, 228, 191, 188, 179, 118, 219, 133, 230, 228, 191, 138, 200, 176, 138, 55, 50, 229, 191, 148, 251, 29, 138, 2, 125, 229, 191, 101, 112, 148, 188, 58, 199, 229, 191, 141, 122, 136, 70, 119, 16, 230, 191, 13, 26, 250, 39, 184, 88, 230, 191, 142, 233, 9, 75, 60, 160, 230, 191, 16, 233, 183, 175, 3, 231, 230, 191, 6, 245, 45, 115, 186, 44, 231, 191, 83, 150, 33, 142, 117, 113, 231, 191, 132, 240, 104, 227, 136, 181, 231, 191, 70, 206, 194, 158, 118, 248, 231, 191, 237, 100, 112, 148, 188, 58, 232, 191, 235, 144, 155, 225, 6, 124, 232, 191, 92, 201, 142, 141, 64, 188, 232, 191, 36, 151, 255, 144, 126, 251, 232, 191, 68, 250, 237, 235, 192, 57, 233, 191, 101, 141, 122, 136, 70, 119, 233, 191, 79, 146, 174, 153, 124, 179, 233, 191, 59, 199, 128, 236, 245, 238, 233, 191, 183, 127, 101, 165, 73, 41, 234, 191, 109, 86, 125, 174, 182, 98, 234, 191, 180, 176, 167, 29, 254, 154, 234, 191, 251, 58, 112, 206, 136, 210, 234, 191, 13, 55, 224, 243, 195, 8, 235, 191, 117, 200, 205, 112, 3, 62, 235, 191, 53, 239, 56, 69, 71, 114, 235, 191, 190, 135, 75, 142, 59, 165, 235, 191, 43, 217, 177, 17, 136, 215, 235, 191, 99, 156, 191, 9, 133, 8, 236, 191, 71, 90, 42, 111, 71, 56, 236, 191, 72, 191, 125, 29, 56, 103, 236, 191, 219, 167, 227, 49, 3, 149, 236, 191, 54, 2, 241, 186, 126, 193, 236, 191, 147, 140, 156, 133, 61, 237, 236, 191, 243, 118, 132, 211, 130, 23, 237, 191, 198, 109, 52, 128, 183, 64, 237, 191, 212, 130, 23, 125, 5, 105, 237, 191, 171, 9, 162, 238, 3, 144, 237, 191, 217, 37, 170, 183, 6, 182, 237, 191, 208, 179, 89, 245, 185, 218, 237, 191, 88, 197, 27, 153, 71, 254, 237, 191, 84, 227, 165, 155, 196, 32, 238, 191, 252, 251, 140, 11, 7, 66, 238, 191, 24, 33, 60, 218, 56, 98, 238, 191, 27, 47, 221, 36, 6, 129, 238, 191, 59, 228, 102, 184, 1, 159, 238, 191, 93, 249, 44, 207, 131, 187, 238, 191, 215, 163, 112, 61, 10, 215, 238, 191, 112, 37, 59, 54, 2, 241, 238, 191, 10, 215, 163, 112, 61, 10, 239, 191, 167, 232, 72, 46, 255, 33, 239, 191, 241, 244, 74, 89, 134, 56, 239, 191, 174, 13, 21, 227, 252, 77, 239, 191, 24, 33, 60, 218, 56, 98, 239, 191, 48, 47, 192, 62, 58, 117, 239, 191, 244, 55, 161, 16, 1, 135, 239, 191, 129, 178, 41, 87, 120, 151, 239, 191, 73, 75, 229, 237, 8, 167, 239, 191, 77, 50, 114, 22, 246, 180, 239, 191, 139, 55, 50, 143, 252, 193, 239, 191, 118, 55, 79, 117, 200, 205, 239, 191, 42, 169, 19, 208, 68, 216, 239, 191, 140, 21, 53, 152, 134, 225, 239, 191, 182, 243, 253, 212, 120, 233, 239, 191, 113, 85, 217, 119, 69, 240, 239, 191, 246, 40, 92, 143, 194, 245, 239, 191, 39, 247, 59, 20, 5, 250, 239, 191, 204, 209, 227, 247, 54, 253, 239, 191, 87, 149, 125, 87, 4, 255, 239, 191, 86, 101, 223, 21, 193, 255, 239, 191, 87, 149, 125, 87, 4, 255, 239, 191, 204, 209, 227, 247, 54, 253, 239, 191, 39, 247, 59, 20, 5, 250, 239, 191, 246, 40, 92, 143, 194, 245, 239, 191, 113, 85, 217, 119, 69, 240, 239, 191, 182, 243, 253, 212, 120, 233, 239, 191, 140, 21, 53, 152, 134, 225, 239, 191, 42, 169, 19, 208, 68, 216, 239, 191, 118, 55, 79, 117, 200, 205, 239, 191, 139, 55, 50, 143, 252, 193, 239, 191, 77, 50, 114, 22, 246, 180, 239, 191, 73, 75, 229, 237, 8, 167, 239, 191, 129, 178, 41, 87, 120, 151, 239, 191, 244, 55, 161, 16, 1, 135, 239, 191, 48, 47, 192, 62, 58, 117, 239, 191, 24, 33, 60, 218, 56, 98, 239, 191, 174, 13, 21, 227, 252, 77, 239, 191, 241, 244, 74, 89, 134, 56, 239, 191, 167, 232, 72, 46, 255, 33, 239, 191, 10, 215, 163, 112, 61, 10, 239, 191, 112, 37, 59, 54, 2, 241, 238, 191, 215, 163, 112, 61, 10, 215, 238, 191, 93, 249, 44, 207, 131, 187, 238, 191, 59, 228, 102, 184, 1, 159, 238, 191, 27, 47, 221, 36, 6, 129, 238, 191, 24, 33, 60, 218, 56, 98, 238, 191, 252, 251, 140, 11, 7, 66, 238, 191, 84, 227, 165, 155, 196, 32, 238, 191, 88, 197, 27, 153, 71, 254, 237, 191, 208, 179, 89, 245, 185, 218, 237, 191, 217, 37, 170, 183, 6, 182, 237, 191, 171, 9, 162, 238, 3, 144, 237, 191, 212, 130, 23, 125, 5, 105, 237, 191, 198, 109, 52, 128, 183, 64, 237, 191, 243, 118, 132, 211, 130, 23, 237, 191, 147, 140, 156, 133, 61, 237, 236, 191, 54, 2, 241, 186, 126, 193, 236, 191, 219, 167, 227, 49, 3, 149, 236, 191, 72, 191, 125, 29, 56, 103, 236, 191, 71, 90, 42, 111, 71, 56, 236, 191, 99, 156, 191, 9, 133, 8, 236, 191, 43, 217, 177, 17, 136, 215, 235, 191, 190, 135, 75, 142, 59, 165, 235, 191, 53, 239, 56, 69, 71, 114, 235, 191, 117, 200, 205, 112, 3, 62, 235, 191, 13, 55, 224, 243, 195, 8, 235, 191, 251, 58, 112, 206, 136, 210, 234, 191, 180, 176, 167, 29, 254, 154, 234, 191, 109, 86, 125, 174, 182, 98, 234, 191, 183, 127, 101, 165, 73, 41, 234, 191, 59, 199, 128, 236, 245, 238, 233, 191, 79, 146, 174, 153, 124, 179, 233, 191, 101, 141, 122, 136, 70, 119, 233, 191, 68, 250, 237, 235, 192, 57, 233, 191, 36, 151, 255, 144, 126, 251, 232, 191, 92, 201, 142, 141, 64, 188, 232, 191, 235, 144, 155, 225, 6, 124, 232, 191, 237, 100, 112, 148, 188, 58, 232, 191, 70, 206, 194, 158, 118, 248, 231, 191, 132, 240, 104, 227, 136, 181, 231, 191, 83, 150, 33, 142, 117, 113, 231, 191, 6, 245, 45, 115, 186, 44, 231, 191, 16, 233, 183, 175, 3, 231, 230, 191, 142, 233, 9, 75, 60, 160, 230, 191, 13, 26, 250, 39, 184, 88, 230, 191, 141, 122, 136, 70, 119, 16, 230, 191, 101, 112, 148, 188, 58, 199, 229, 191, 148, 251, 29, 138, 2, 125, 229, 191, 138, 200, 176, 138, 55, 50, 229, 191, 188, 179, 118, 219, 133, 230, 228, 191, 11, 70, 37, 117, 2, 154, 228, 191, 91, 8, 114, 80, 194, 76, 228, 191, 3, 96, 60, 131, 134, 254, 227, 191, 114, 249, 15, 233, 183, 175, 227, 191, 28, 177, 22, 159, 2, 96, 227, 191, 143, 170, 38, 136, 186, 15, 227, 191, 88, 57, 180, 200, 118, 190, 226, 191, 176, 27, 182, 45, 202, 108, 226, 191, 67, 28, 235, 226, 54, 26, 226, 191, 187, 213, 115, 210, 251, 198, 225, 191, 52, 191, 154, 3, 4, 115, 225, 191, 116, 234, 202, 103, 121, 30, 225, 191, 154, 206, 78, 6, 71, 201, 224, 191, 222, 89, 187, 237, 66, 115, 224, 191, 205, 175, 230, 0, 193, 28, 224, 191, 123, 107, 96, 171, 4, 139, 223, 191, 179, 12, 113, 172, 139, 219, 222, 191, 123, 49, 148, 19, 237, 42, 222, 191, 12, 200, 94, 239, 254, 120, 221, 191, 46, 226, 59, 49, 235, 197, 220, 191, 110, 163, 1, 188, 5, 18, 220, 191, 234, 178, 152, 216, 124, 92, 219, 191, 17, 141, 238, 32, 118, 166, 218, 191, 59, 199, 128, 236, 245, 238, 217, 191, 188, 150, 144, 15, 122, 54, 217, 191, 232, 48, 95, 94, 128, 125, 216, 191, 23, 43, 106, 48, 13, 195, 215, 191, 43, 222, 200, 60, 242, 7, 215, 191, 92, 56, 16, 146, 5, 76, 214, 191, 30, 22, 106, 77, 243, 142, 213, 191, 83, 208, 237, 37, 141, 209, 212, 191, 23, 14, 132, 100, 1, 19, 212, 191, 51, 225, 151, 250, 121, 83, 211, 191, 250, 126, 106, 188, 116, 147, 210, 191, 109, 231, 251, 169, 241, 210, 209, 191, 54, 229, 10, 239, 114, 17, 209, 191, 172, 173, 216, 95, 118, 79, 208, 191, 240, 22, 72, 80, 252, 24, 207, 191, 137, 210, 222, 224, 11, 147, 205, 191, 208, 184, 112, 32, 36, 11, 204, 191, 224, 16, 170, 212, 236, 129, 202, 191, 213, 33, 55, 195, 13, 248, 200, 191, 148, 164, 107, 38, 223, 108, 199, 191, 55, 224, 243, 195, 8, 225, 197, 191, 77, 248, 165, 126, 222, 84, 196, 191, 158, 94, 41, 203, 16, 199, 194, 191, 98, 161, 214, 52, 239, 56, 193, 191, 103, 15, 180, 2, 67, 86, 191, 191, 75, 234, 4, 52, 17, 54, 188, 191, 154, 6, 69, 243, 0, 22, 185, 191, 160, 195, 124, 121, 1, 246, 181, 191, 158, 10, 184, 231, 249, 211, 178, 191, 164, 228, 213, 57, 6, 100, 175, 191, 252, 199, 66, 116, 8, 28, 169, 191, 248, 85, 185, 80, 249, 215, 162, 191, 159, 114, 76, 22, 247, 31, 153, 191, 159, 114, 76, 22, 247, 31, 137, 191, 0, 0, 0, 0, 0, 0, 0, 0, 159, 114, 76, 22, 247, 31, 137, 63, 68, 220, 156, 74, 6, 0, 224, 191, 68, 220, 156, 74, 6, 0, 224, 191, 11, 238, 7, 60, 48, 0, 224, 191, 153, 17, 222, 30, 132, 0, 224, 191, 192, 94, 97, 193, 253, 0, 224, 191, 231, 171, 228, 99, 119, 1, 224, 191, 2, 243, 144, 41, 31, 2, 224, 191, 251, 63, 135, 249, 242, 2, 224, 191, 73, 218, 141, 62, 230, 3, 224, 191, 128, 128, 181, 106, 215, 4, 224, 191, 6, 241, 129, 29, 255, 5, 224, 191, 84, 115, 185, 193, 80, 7, 224, 191, 178, 102, 100, 144, 187, 8, 224, 191, 16, 90, 15, 95, 38, 10, 224, 191, 235, 255, 28, 230, 203, 11, 224, 191, 141, 183, 149, 94, 155, 13, 224, 191, 251, 3, 229, 182, 125, 15, 224, 191, 151, 56, 242, 64, 100, 17, 224, 191, 153, 43, 131, 106, 131, 19, 224, 191, 121, 36, 94, 158, 206, 21, 224, 191, 247, 201, 81, 128, 40, 24, 224, 191, 209, 63, 193, 197, 138, 26, 224, 191, 204, 151, 23, 96, 31, 29, 224, 191, 0, 198, 51, 104, 232, 31, 224, 191, 120, 208, 236, 186, 183, 34, 224, 191, 121, 147, 223, 162, 147, 37, 224, 191, 110, 80, 251, 173, 157, 40, 224, 191, 201, 203, 154, 88, 224, 43, 224, 191, 36, 71, 58, 3, 35, 47, 224, 191, 98, 75, 143, 166, 122, 50, 224, 191, 80, 109, 112, 34, 250, 53, 224, 191, 142, 89, 246, 36, 176, 57, 224, 191, 204, 69, 124, 39, 102, 61, 224, 191, 26, 163, 117, 84, 53, 65, 224, 191, 25, 30, 251, 89, 44, 69, 224, 191, 35, 135, 136, 155, 83, 73, 224, 191, 44, 240, 21, 221, 122, 77, 224, 191, 116, 178, 212, 122, 191, 81, 224, 191, 86, 158, 64, 216, 41, 86, 224, 191, 43, 132, 213, 88, 194, 90, 224, 191, 212, 129, 172, 167, 86, 95, 224, 191, 232, 192, 114, 132, 12, 100, 224, 191, 195, 17, 164, 82, 236, 104, 224, 191, 32, 152, 163, 199, 239, 109, 224, 191, 80, 54, 229, 10, 239, 114, 224, 191, 48, 242, 178, 38, 22, 120, 224, 191, 192, 203, 12, 27, 101, 125, 224, 191, 166, 242, 118, 132, 211, 130, 224, 191, 71, 61, 68, 163, 59, 136, 224, 191, 220, 129, 58, 229, 209, 141, 224, 191, 11, 240, 221, 230, 141, 147, 224, 191, 74, 207, 244, 18, 99, 153, 224, 191, 70, 210, 110, 244, 49, 159, 224, 191, 99, 183, 207, 42, 51, 165, 224, 191, 3, 210, 254, 7, 88, 171, 224, 191, 111, 129, 4, 197, 143, 177, 224, 191, 174, 72, 76, 80, 195, 183, 224, 191, 37, 230, 89, 73, 43, 190, 224, 191, 31, 185, 53, 233, 182, 196, 224, 191, 185, 56, 42, 55, 81, 203, 224, 191, 59, 196, 63, 108, 233, 209, 224, 191, 178, 73, 126, 196, 175, 216, 224, 191, 240, 224, 39, 14, 160, 223, 224, 191, 91, 96, 143, 137, 148, 230, 224, 191, 10, 188, 147, 79, 143, 237, 224, 191, 105, 53, 36, 238, 177, 244, 224, 191, 166, 180, 254, 150, 0, 252, 224, 191, 227, 51, 217, 63, 79, 3, 225, 191, 146, 119, 14, 101, 168, 10, 225, 191, 173, 252, 50, 24, 35, 18, 225, 191, 187, 123, 128, 238, 203, 25, 225, 191, 157, 18, 16, 147, 112, 33, 225, 191, 7, 98, 217, 204, 33, 41, 225, 191, 220, 242, 145, 148, 244, 48, 225, 191, 143, 137, 148, 102, 243, 56, 225, 191, 186, 103, 93, 163, 229, 64, 225, 191, 200, 206, 219, 216, 236, 72, 225, 191, 66, 119, 73, 156, 21, 81, 225, 191, 63, 85, 133, 6, 98, 89, 225, 191, 179, 122, 135, 219, 161, 97, 225, 191, 56, 17, 253, 218, 250, 105, 225, 191, 252, 0, 164, 54, 113, 114, 225, 191, 43, 50, 58, 32, 9, 123, 225, 191, 164, 194, 216, 66, 144, 131, 225, 191, 92, 172, 168, 193, 52, 140, 225, 191, 82, 239, 169, 156, 246, 148, 225, 191, 112, 151, 253, 186, 211, 157, 225, 191, 216, 158, 89, 18, 160, 166, 225, 191, 149, 243, 197, 222, 139, 175, 225, 191, 121, 173, 132, 238, 146, 184, 225, 191, 65, 240, 248, 246, 174, 193, 225, 191, 83, 146, 117, 56, 186, 202, 225, 191, 232, 105, 192, 32, 233, 211, 225, 191, 164, 166, 93, 76, 51, 221, 225, 191, 210, 167, 85, 244, 135, 230, 225, 191, 120, 240, 19, 7, 208, 239, 225, 191, 160, 110, 160, 192, 59, 249, 225, 191, 217, 93, 160, 164, 192, 2, 226, 191, 86, 41, 61, 211, 75, 12, 226, 191, 98, 48, 127, 133, 204, 21, 226, 191, 194, 132, 209, 172, 108, 31, 226, 191, 75, 62, 118, 23, 40, 41, 226, 191, 211, 247, 26, 130, 227, 50, 226, 191, 0, 225, 67, 137, 150, 60, 226, 191, 131, 23, 125, 5, 105, 70, 226, 191, 22, 191, 41, 172, 84, 80, 226, 191, 101, 138, 57, 8, 58, 90, 226, 191, 158, 97, 106, 75, 29, 100, 226, 191, 208, 181, 47, 160, 23, 110, 226, 191, 65, 99, 38, 81, 47, 120, 226, 191, 19, 100, 4, 84, 56, 130, 226, 191, 251, 88, 193, 111, 67, 140, 226, 191, 199, 214, 51, 132, 99, 150, 226, 191, 209, 173, 215, 244, 160, 160, 226, 191, 248, 251, 197, 108, 201, 170, 226, 191, 77, 50, 114, 22, 246, 180, 226, 191, 132, 241, 211, 184, 55, 191, 226, 191, 205, 33, 169, 133, 146, 201, 226, 191, 5, 225, 10, 40, 212, 211, 226, 191, 151, 112, 232, 45, 30, 222, 226, 191, 247, 148, 156, 19, 123, 232, 226, 191, 57, 66, 6, 242, 236, 242, 226, 191, 62, 150, 62, 116, 65, 253, 226, 191, 203, 162, 176, 139, 162, 7, 227, 191, 13, 80, 26, 106, 20, 18, 227, 191, 6, 158, 123, 15, 151, 28, 227, 191, 147, 170, 237, 38, 248, 38, 227, 191, 214, 87, 87, 5, 106, 49, 227, 191, 184, 177, 217, 145, 234, 59, 227, 191, 11, 208, 182, 154, 117, 70, 227, 191, 10, 161, 131, 46, 225, 80, 227, 191, 168, 30, 105, 112, 91, 91, 227, 191, 251, 60, 70, 121, 230, 101, 227, 191, 79, 91, 35, 130, 113, 112, 227, 191, 123, 20, 174, 71, 225, 122, 227, 191, 93, 110, 48, 212, 97, 133, 227, 191, 176, 140, 13, 221, 236, 143, 227, 191, 237, 182, 11, 205, 117, 154, 227, 191, 236, 135, 216, 96, 225, 164, 227, 191, 160, 249, 156, 187, 93, 175, 227, 191, 221, 35, 155, 171, 230, 185, 227, 191, 146, 149, 95, 6, 99, 196, 227, 191, 76, 138, 143, 79, 200, 206, 227, 191, 166, 43, 216, 70, 60, 217, 227, 191, 90, 157, 156, 161, 184, 227, 227, 191, 89, 110, 105, 53, 36, 238, 227, 191, 139, 170, 95, 233, 124, 248, 227, 191, 23, 183, 209, 0, 222, 2, 228, 191, 22, 136, 158, 148, 73, 13, 228, 191, 4, 232, 247, 253, 155, 23, 228, 191, 82, 155, 56, 185, 223, 33, 228, 191, 229, 42, 22, 191, 41, 44, 228, 191, 233, 126, 78, 65, 126, 54, 228, 191, 152, 133, 118, 78, 179, 64, 228, 191, 191, 211, 100, 198, 219, 74, 228, 191, 19, 10, 17, 112, 8, 85, 228, 191, 195, 16, 57, 125, 61, 95, 228, 191, 217, 237, 179, 202, 76, 105, 228, 191, 148, 250, 178, 180, 83, 115, 228, 191, 124, 239, 111, 208, 94, 125, 228, 191, 123, 216, 11, 5, 108, 135, 228, 191, 202, 163, 27, 97, 81, 145, 228, 191, 191, 158, 175, 89, 46, 155, 228, 191, 224, 129, 1, 132, 15, 165, 228, 191, 2, 101, 83, 174, 240, 174, 228, 191, 24, 90, 157, 156, 161, 184, 228, 191, 24, 91, 8, 114, 80, 194, 228, 191, 47, 80, 82, 96, 1, 204, 228, 191, 24, 93, 222, 28, 174, 213, 228, 191, 223, 135, 131, 132, 40, 223, 228, 191, 144, 190, 73, 211, 160, 232, 228, 191, 65, 245, 15, 34, 25, 242, 228, 191, 150, 91, 90, 13, 137, 251, 228, 191, 225, 211, 156, 188, 200, 4, 229, 191, 254, 99, 33, 58, 4, 14, 229, 191, 4, 0, 199, 158, 61, 23, 229, 191, 107, 239, 83, 85, 104, 32, 229, 191, 245, 216, 150, 1, 103, 41, 229, 191, 58, 230, 60, 99, 95, 50, 229, 191, 82, 11, 37, 147, 83, 59, 229, 191, 135, 167, 87, 202, 50, 68, 229, 191, 11, 38, 254, 40, 234, 76, 229, 191, 53, 212, 40, 36, 153, 85, 229, 191, 26, 166, 182, 212, 65, 94, 229, 191, 215, 18, 242, 65, 207, 102, 229, 191, 18, 74, 95, 8, 57, 111, 229, 191, 220, 188, 113, 82, 152, 119, 229, 191, 51, 107, 41, 32, 237, 127, 229, 191, 54, 204, 208, 120, 34, 136, 229, 191, 204, 235, 136, 67, 54, 144, 229, 191, 241, 70, 230, 145, 63, 152, 229, 191, 165, 221, 232, 99, 62, 160, 229, 191, 145, 98, 128, 68, 19, 168, 229, 191, 63, 142, 230, 200, 202, 175, 229, 191, 123, 245, 241, 208, 119, 183, 229, 191, 24, 176, 228, 42, 22, 191, 229, 191, 193, 112, 174, 97, 134, 198, 229, 191, 89, 192, 4, 110, 221, 205, 229, 191, 82, 99, 66, 204, 37, 213, 229, 191, 171, 89, 103, 124, 95, 220, 229, 191, 204, 121, 198, 190, 100, 227, 229, 191, 243, 28, 145, 239, 82, 234, 229, 191, 123, 19, 67, 114, 50, 241, 229, 191, 77, 105, 253, 45, 1, 248, 229, 191, 162, 12, 85, 49, 149, 254, 229, 191, 253, 50, 24, 35, 18, 5, 230, 191, 207, 160, 161, 127, 130, 11, 230, 191, 213, 121, 84, 252, 223, 17, 230, 191, 26, 196, 7, 118, 252, 23, 230, 191, 123, 133, 5, 247, 3, 30, 230, 191, 61, 154, 234, 201, 252, 35, 230, 191, 51, 26, 249, 188, 226, 41, 230, 191, 58, 35, 74, 123, 131, 47, 230, 191, 116, 151, 196, 89, 17, 53, 230, 191, 226, 118, 104, 88, 140, 58, 230, 191, 85, 217, 119, 69, 240, 63, 230, 191, 8, 173, 135, 47, 19, 69, 230, 191, 215, 247, 225, 32, 33, 74, 230, 191, 195, 185, 134, 25, 26, 79, 230, 191, 90, 46, 27, 157, 243, 83, 230, 191, 138, 228, 43, 129, 148, 88, 230, 191, 147, 53, 234, 33, 26, 93, 230, 191, 185, 253, 242, 201, 138, 97, 230, 191, 92, 144, 45, 203, 215, 101, 230, 191, 176, 88, 195, 69, 238, 105, 230, 191, 220, 187, 6, 125, 233, 109, 230, 191, 247, 173, 214, 137, 203, 113, 230, 191, 76, 142, 59, 165, 131, 117, 230, 191, 149, 128, 152, 132, 11, 121, 230, 191, 160, 25, 196, 7, 118, 124, 230, 191, 131, 77, 157, 71, 197, 127, 230, 191, 92, 147, 110, 75, 228, 130, 230, 191, 64, 223, 22, 44, 213, 133, 230, 191, 252, 197, 108, 201, 170, 136, 230, 191, 99, 95, 178, 241, 96, 139, 230, 191, 123, 46, 83, 147, 224, 141, 230, 191, 227, 223, 103, 92, 56, 144, 230, 191, 35, 44, 42, 226, 116, 146, 230, 191, 202, 78, 63, 168, 139, 148, 230, 191, 245, 190, 241, 181, 103, 150, 230, 191, 133, 5, 247, 3, 30, 152, 230, 191, 239, 230, 169, 14, 185, 153, 230, 191, 213, 146, 142, 114, 48, 155, 230, 191, 228, 187, 148, 186, 100, 156, 230, 191, 113, 175, 204, 91, 117, 157, 230, 191, 191, 73, 211, 160, 104, 158, 230, 191, 183, 150, 201, 112, 60, 159, 230, 191, 126, 144, 101, 193, 196, 159, 230, 191, 193, 84, 51, 107, 41, 160, 230, 191, 221, 179, 174, 209, 114, 160, 230, 191, 164, 197, 25, 195, 156, 160, 230, 191, 221, 179, 174, 209, 114, 160, 230, 191, 193, 84, 51, 107, 41, 160, 230, 191, 80, 168, 167, 143, 192, 159, 230, 191, 115, 186, 44, 38, 54, 159, 230, 191, 77, 133, 120, 36, 94, 158, 230, 191, 141, 38, 23, 99, 96, 157, 230, 191, 143, 110, 132, 69, 69, 156, 230, 191, 202, 164, 134, 54, 0, 155, 230, 191, 23, 100, 203, 242, 117, 153, 230, 191, 157, 17, 165, 189, 193, 151, 230, 191, 206, 113, 110, 19, 238, 149, 230, 191, 10, 216, 14, 70, 236, 147, 230, 191, 156, 163, 142, 142, 171, 145, 230, 191, 36, 129, 6, 155, 58, 143, 230, 191, 86, 17, 110, 50, 170, 140, 230, 191, 102, 191, 238, 116, 231, 137, 230, 191, 249, 186, 12, 255, 233, 134, 230, 191, 153, 188, 1, 102, 190, 131, 230, 191, 136, 160, 106, 244, 106, 128, 230, 191, 85, 162, 236, 45, 229, 124, 230, 191, 166, 241, 11, 175, 36, 121, 230, 191, 48, 47, 192, 62, 58, 117, 230, 191, 243, 90, 9, 221, 37, 113, 230, 191, 34, 224, 16, 170, 212, 108, 230, 191, 48, 131, 49, 34, 81, 104, 230, 191, 141, 8, 198, 193, 165, 99, 230, 191, 201, 171, 115, 12, 200, 94, 230, 191, 114, 168, 223, 133, 173, 89, 230, 191, 248, 194, 100, 170, 96, 84, 230, 191, 229, 179, 60, 15, 238, 78, 230, 191, 177, 194, 45, 31, 73, 73, 230, 191, 165, 78, 64, 19, 97, 67, 230, 191, 141, 236, 74, 203, 72, 61, 230, 191, 221, 96, 168, 195, 10, 55, 230, 191, 56, 219, 220, 152, 158, 48, 230, 191, 51, 26, 249, 188, 226, 41, 230, 191, 103, 71, 170, 239, 252, 34, 230, 191, 2, 75, 174, 98, 241, 27, 230, 191, 191, 72, 104, 203, 185, 20, 230, 191, 216, 46, 109, 56, 44, 13, 230, 191, 42, 3, 7, 180, 116, 5, 230, 191, 226, 173, 243, 111, 151, 253, 229, 191, 235, 58, 84, 83, 146, 245, 229, 191, 11, 212, 98, 240, 48, 237, 229, 191, 123, 79, 229, 180, 167, 228, 229, 191, 58, 173, 219, 160, 246, 219, 229, 191, 29, 5, 136, 130, 25, 211, 229, 191, 136, 45, 61, 154, 234, 201, 229, 191, 255, 91, 201, 142, 141, 192, 229, 191, 175, 120, 234, 145, 6, 183, 229, 191, 107, 155, 226, 113, 81, 173, 229, 191, 11, 95, 95, 235, 82, 163, 229, 191, 92, 88, 55, 222, 29, 153, 229, 191, 253, 51, 131, 248, 192, 142, 229, 191, 101, 57, 9, 165, 47, 132, 229, 191, 35, 164, 110, 103, 95, 121, 229, 191, 100, 92, 113, 113, 84, 110, 229, 191, 222, 2, 9, 138, 31, 99, 229, 191, 242, 234, 28, 3, 178, 87, 229, 191, 138, 32, 206, 195, 9, 76, 229, 191, 210, 139, 218, 253, 42, 64, 229, 191, 15, 9, 223, 251, 27, 52, 229, 191, 231, 199, 95, 90, 212, 39, 229, 191, 65, 212, 125, 0, 82, 27, 229, 191, 145, 242, 147, 106, 159, 14, 229, 191, 145, 70, 5, 78, 182, 1, 229, 191, 254, 243, 52, 96, 144, 244, 228, 191, 27, 215, 191, 235, 51, 231, 228, 191, 114, 168, 223, 133, 173, 217, 228, 191, 53, 211, 189, 78, 234, 203, 228, 191, 55, 111, 156, 20, 230, 189, 228, 191, 23, 41, 148, 133, 175, 175, 228, 191, 49, 209, 32, 5, 79, 161, 228, 191, 228, 186, 41, 229, 181, 146, 228, 191, 147, 57, 150, 119, 213, 131, 228, 191, 31, 214, 27, 181, 194, 116, 228, 191, 229, 96, 54, 1, 134, 101, 228, 191, 160, 253, 72, 17, 25, 86, 228, 191, 228, 106, 100, 87, 90, 70, 228, 191, 51, 222, 86, 122, 109, 54, 228, 191, 188, 63, 222, 171, 86, 38, 228, 191, 103, 155, 27, 211, 19, 22, 228, 191, 87, 235, 196, 229, 120, 5, 228, 191, 128, 41, 3, 7, 180, 244, 227, 191, 204, 97, 247, 29, 195, 227, 227, 191, 58, 148, 161, 42, 166, 210, 227, 191, 4, 175, 150, 59, 51, 193, 227, 191, 240, 195, 65, 66, 148, 175, 227, 191, 254, 210, 162, 62, 201, 157, 227, 191, 25, 232, 218, 23, 208, 139, 227, 191, 0, 170, 184, 113, 139, 121, 227, 191, 198, 137, 175, 118, 20, 103, 227, 191, 174, 99, 92, 113, 113, 84, 227, 191, 139, 79, 1, 48, 158, 65, 227, 191, 122, 196, 232, 185, 133, 46, 227, 191, 26, 111, 43, 189, 54, 27, 227, 191, 242, 7, 3, 207, 189, 7, 227, 191, 146, 202, 20, 115, 16, 244, 226, 191, 159, 230, 228, 69, 38, 224, 226, 191, 70, 68, 49, 121, 3, 204, 226, 191, 15, 156, 51, 162, 180, 183, 226, 191, 137, 41, 145, 68, 47, 163, 226, 191, 156, 248, 106, 71, 113, 142, 226, 191, 120, 241, 126, 220, 126, 121, 226, 191, 72, 252, 138, 53, 92, 100, 226, 191, 201, 60, 242, 7, 3, 79, 226, 191, 228, 190, 213, 58, 113, 57, 226, 191, 33, 59, 111, 99, 179, 35, 226, 191, 15, 237, 99, 5, 191, 13, 226, 191, 152, 224, 212, 7, 146, 247, 225, 191, 231, 253, 127, 156, 48, 225, 225, 191, 135, 253, 158, 88, 167, 202, 225, 191, 169, 74, 91, 92, 227, 179, 225, 191, 79, 229, 180, 167, 228, 156, 225, 191, 234, 145, 6, 183, 181, 133, 225, 191, 213, 32, 204, 237, 94, 110, 225, 191, 159, 205, 170, 207, 213, 86, 225, 191, 121, 3, 204, 124, 7, 63, 225, 191, 141, 39, 130, 56, 15, 39, 225, 191, 218, 57, 205, 2, 237, 14, 225, 191, 74, 70, 206, 194, 158, 246, 224, 191, 157, 243, 83, 28, 7, 222, 224, 191, 42, 143, 110, 132, 69, 197, 224, 191, 6, 13, 253, 19, 92, 172, 224, 191, 51, 109, 255, 202, 74, 147, 224, 191, 22, 134, 200, 233, 235, 121, 224, 191, 73, 129, 5, 48, 101, 96, 224, 191, 227, 82, 149, 182, 184, 70, 224, 191, 182, 18, 186, 75, 226, 44, 224, 191, 132, 103, 66, 147, 196, 18, 224, 191, 21, 85, 191, 210, 249, 240, 223, 191, 240, 135, 159, 255, 30, 188, 223, 191, 62, 151, 169, 73, 240, 134, 223, 191, 55, 113, 114, 191, 67, 81, 223, 191, 71, 87, 233, 238, 58, 27, 223, 191, 247, 1, 72, 109, 226, 228, 222, 191, 71, 113, 142, 58, 58, 174, 222, 191, 204, 99, 205, 200, 32, 119, 222, 191, 12, 146, 62, 173, 162, 63, 222, 191, 71, 85, 19, 68, 221, 7, 222, 191, 200, 12, 84, 198, 191, 207, 221, 191, 4, 0, 199, 158, 61, 151, 221, 191, 43, 23, 42, 255, 90, 94, 221, 191, 31, 219, 50, 224, 44, 37, 221, 191, 42, 171, 233, 122, 162, 235, 220, 191, 77, 135, 78, 207, 187, 177, 220, 191, 15, 40, 155, 114, 133, 119, 220, 191, 233, 212, 149, 207, 242, 60, 220, 191, 8, 118, 252, 23, 8, 2, 220, 191, 153, 243, 140, 125, 201, 198, 219, 191, 247, 29, 195, 99, 63, 139, 219, 191, 109, 84, 167, 3, 89, 79, 219, 191, 40, 127, 247, 142, 26, 19, 219, 191, 85, 134, 113, 55, 136, 214, 218, 191, 170, 10, 13, 196, 178, 153, 218, 191, 69, 131, 20, 60, 133, 92, 218, 191, 201, 31, 12, 60, 247, 30, 218, 191, 26, 105, 169, 188, 29, 225, 217, 191, 194, 23, 38, 83, 5, 163, 217, 191, 9, 139, 138, 56, 157, 100, 217, 191, 12, 58, 33, 116, 208, 37, 217, 191, 221, 149, 93, 48, 184, 230, 216, 191, 49, 63, 55, 52, 101, 167, 216, 191, 174, 101, 50, 28, 207, 103, 216, 191, 94, 15, 38, 197, 199, 39, 216, 191, 100, 30, 249, 131, 129, 231, 215, 191, 238, 122, 105, 138, 0, 167, 215, 191, 205, 60, 185, 166, 64, 102, 215, 191, 14, 106, 191, 181, 19, 37, 215, 191, 164, 252, 164, 218, 167, 227, 214, 191, 190, 220, 39, 71, 1, 162, 214, 191, 91, 10, 72, 251, 31, 96, 214, 191, 180, 115, 154, 5, 218, 29, 214, 191, 99, 66, 204, 37, 85, 219, 213, 191, 150, 94, 155, 141, 149, 152, 213, 191, 75, 200, 7, 61, 155, 85, 213, 191, 115, 14, 158, 9, 77, 18, 213, 191, 196, 209, 85, 186, 187, 206, 212, 191, 151, 226, 170, 178, 239, 138, 212, 191, 28, 41, 91, 36, 237, 70, 212, 191, 109, 28, 177, 22, 159, 2, 212, 191, 186, 164, 106, 187, 9, 190, 211, 191, 228, 74, 61, 11, 66, 121, 211, 191, 101, 86, 239, 112, 59, 52, 211, 191, 104, 175, 62, 30, 250, 238, 210, 191, 148, 133, 175, 175, 117, 169, 210, 191, 113, 145, 123, 186, 186, 99, 210, 191, 209, 234, 228, 12, 197, 29, 210, 191, 180, 145, 235, 166, 148, 215, 209, 191, 117, 86, 11, 236, 49, 145, 209, 191, 141, 128, 10, 71, 144, 74, 209, 191, 84, 224, 100, 27, 184, 3, 209, 191, 205, 117, 26, 105, 169, 188, 208, 191, 127, 249, 100, 197, 112, 117, 208, 191, 134, 226, 142, 55, 249, 45, 208, 191, 126, 2, 40, 70, 150, 204, 207, 191, 6, 76, 224, 214, 221, 60, 207, 191, 0, 114, 194, 132, 209, 172, 206, 191, 92, 3, 91, 37, 88, 28, 206, 191, 190, 47, 46, 85, 105, 139, 205, 191, 238, 8, 167, 5, 47, 250, 204, 191, 144, 190, 73, 211, 160, 104, 204, 191, 73, 128, 154, 90, 182, 214, 203, 191, 100, 173, 161, 212, 94, 68, 203, 191, 242, 182, 210, 107, 179, 177, 202, 191, 167, 61, 37, 231, 196, 30, 202, 191, 42, 113, 29, 227, 138, 139, 201, 191, 179, 63, 80, 110, 219, 247, 200, 191, 101, 139, 164, 221, 232, 99, 200, 191, 63, 84, 26, 49, 179, 207, 199, 191, 65, 154, 177, 104, 58, 59, 199, 191, 0, 28, 123, 246, 92, 166, 198, 191, 140, 74, 234, 4, 52, 17, 198, 191, 246, 150, 114, 190, 216, 123, 197, 191, 228, 48, 152, 191, 66, 230, 196, 191, 142, 6, 240, 22, 72, 80, 196, 191, 22, 250, 96, 25, 27, 186, 195, 191, 33, 59, 111, 99, 179, 35, 195, 191, 176, 201, 26, 245, 16, 141, 194, 191, 103, 213, 231, 106, 43, 246, 193, 191, 70, 94, 214, 196, 2, 95, 193, 191, 94, 213, 89, 45, 176, 199, 192, 191, 85, 106, 246, 64, 43, 48, 192, 191, 158, 153, 96, 56, 215, 48, 191, 191, 152, 249, 14, 126, 226, 0, 190, 191, 187, 214, 222, 167, 170, 208, 188, 191, 228, 78, 233, 96, 253, 159, 187, 191, 53, 68, 21, 254, 12, 111, 186, 191, 151, 75, 244, 67, 182, 61, 185, 191, 198, 255, 120, 10, 20, 12, 184, 191, 195, 96, 163, 81, 38, 218, 182, 191, 225, 68, 244, 107, 235, 167, 181, 191, 127, 249, 100, 197, 112, 117, 180, 191, 66, 174, 121, 250, 173, 66, 179, 191, 133, 51, 174, 110, 171, 15, 178, 191, 75, 6, 128, 42, 110, 220, 176, 191, 148, 142, 205, 233, 13, 82, 175, 191, 233, 4, 217, 87, 195, 234, 172, 191, 83, 10, 21, 119, 23, 131, 170, 191, 135, 63, 121, 14, 27, 27, 168, 191, 227, 241, 254, 137, 219, 178, 165, 191, 16, 206, 167, 142, 85, 74, 163, 191, 175, 134, 122, 176, 123, 225, 160, 191, 102, 174, 194, 28, 243, 240, 156, 191, 137, 216, 187, 154, 151, 30, 152, 191, 212, 127, 214, 252, 248, 75, 147, 191, 116, 96, 57, 66, 6, 242, 140, 191, 21, 110, 191, 157, 192, 75, 131, 191, 98, 146, 29, 93, 157, 74, 115, 191, 209, 132, 242, 158, 117, 76, 196, 62, 176, 18, 28, 44, 214, 79, 115, 63, 60, 174, 62, 5, 93, 78, 131, 63, 131, 47, 241, 236, 151, 244, 140, 63, 91, 103, 50, 210, 65, 77, 147, 63, 97, 25, 27, 186, 217, 31, 152, 63, 76, 227, 23, 94, 73, 242, 156, 63, 34, 33, 37, 209, 38, 226, 160, 63, 124, 110, 87, 158, 246, 74, 163, 63, 167, 229, 172, 244, 127, 179, 165, 63, 162, 134, 37, 212, 194, 27, 168, 63, 23, 254, 194, 225, 187, 131, 170, 63, 5, 76, 133, 29, 107, 235, 172, 63, 0, 47, 125, 249, 174, 82, 175, 63, 129, 214, 87, 178, 190, 220, 176, 63, 18, 87, 132, 81, 255, 15, 178, 63, 207, 209, 79, 221, 1, 67, 179, 63, 181, 201, 60, 77, 193, 117, 180, 63, 107, 235, 76, 70, 58, 168, 181, 63, 80, 132, 121, 52, 122, 218, 182, 63, 84, 35, 79, 237, 103, 12, 184, 63, 121, 69, 75, 121, 8, 62, 185, 63, 195, 103, 235, 224, 96, 111, 186, 63, 113, 114, 191, 67, 81, 160, 187, 63, 146, 89, 189, 195, 237, 208, 188, 63, 38, 29, 229, 96, 54, 1, 190, 63, 43, 189, 54, 27, 43, 49, 191, 63, 28, 124, 97, 50, 85, 48, 192, 63, 37, 231, 196, 30, 218, 199, 192, 63, 13, 112, 65, 182, 44, 95, 193, 63, 46, 231, 82, 92, 85, 246, 193, 63, 119, 219, 133, 230, 58, 141, 194, 63, 141, 124, 94, 241, 212, 35, 195, 63, 221, 11, 204, 10, 69, 186, 195, 63, 85, 24, 91, 8, 114, 80, 196, 63, 80, 114, 135, 77, 100, 230, 196, 63, 189, 168, 221, 175, 2, 124, 197, 63, 83, 92, 85, 246, 93, 17, 198, 63, 108, 93, 106, 132, 126, 166, 198, 63, 8, 172, 28, 90, 100, 59, 199, 63, 171, 149, 9, 191, 212, 207, 199, 63, 209, 204, 147, 107, 10, 100, 200, 63, 122, 81, 187, 95, 5, 248, 200, 63, 241, 130, 136, 212, 180, 139, 201, 63, 19, 127, 20, 117, 230, 30, 202, 63, 93, 248, 193, 249, 212, 177, 202, 63, 208, 238, 144, 98, 128, 68, 203, 63, 16, 146, 5, 76, 224, 214, 203, 63, 252, 255, 56, 97, 194, 104, 204, 63, 90, 74, 150, 147, 80, 250, 204, 63, 133, 65, 153, 70, 147, 139, 205, 63, 35, 21, 198, 22, 130, 28, 206, 63, 108, 179, 177, 18, 243, 172, 206, 63, 113, 141, 207, 100, 255, 60, 207, 63, 68, 20, 147, 55, 192, 204, 207, 63, 106, 107, 68, 48, 14, 46, 208, 63, 98, 130, 26, 190, 133, 117, 208, 63, 176, 254, 207, 97, 190, 188, 208, 63, 56, 105, 26, 20, 205, 3, 209, 63, 112, 9, 192, 63, 165, 74, 209, 63, 43, 247, 2, 179, 66, 145, 209, 63, 151, 26, 161, 159, 169, 215, 209, 63, 135, 139, 220, 211, 213, 29, 210, 63, 39, 50, 115, 129, 203, 99, 210, 63, 74, 38, 167, 118, 134, 169, 210, 63, 30, 80, 54, 229, 10, 239, 210, 63, 72, 223, 164, 105, 80, 52, 211, 63, 154, 235, 52, 210, 82, 121, 211, 63, 111, 69, 98, 130, 26, 190, 211, 63, 35, 189, 168, 221, 175, 2, 212, 63, 209, 201, 82, 235, 253, 70, 212, 63, 77, 131, 162, 121, 0, 139, 212, 63, 122, 114, 77, 129, 204, 206, 212, 63, 41, 175, 149, 208, 93, 18, 213, 63, 1, 105, 255, 3, 172, 85, 213, 63, 76, 255, 146, 84, 166, 152, 213, 63, 25, 227, 195, 236, 101, 219, 213, 63, 106, 20, 146, 204, 234, 29, 214, 63, 227, 194, 129, 144, 44, 96, 214, 63, 116, 125, 31, 14, 18, 162, 214, 63, 90, 157, 156, 161, 184, 227, 214, 63, 196, 10, 183, 124, 36, 37, 215, 63, 131, 221, 176, 109, 81, 102, 215, 63, 164, 27, 97, 81, 17, 167, 215, 63, 26, 191, 240, 74, 146, 231, 215, 63, 20, 176, 29, 140, 216, 39, 216, 63, 100, 6, 42, 227, 223, 103, 216, 63, 231, 223, 46, 251, 117, 167, 216, 63, 147, 54, 85, 247, 200, 230, 216, 63, 149, 242, 90, 9, 221, 37, 217, 63, 191, 43, 130, 255, 173, 100, 217, 63, 120, 184, 29, 26, 22, 163, 217, 63, 208, 9, 161, 131, 46, 225, 217, 63, 81, 216, 69, 209, 3, 31, 218, 63, 205, 59, 78, 209, 145, 92, 218, 63, 51, 195, 70, 89, 191, 153, 218, 63, 222, 62, 171, 204, 148, 214, 218, 63, 176, 55, 49, 36, 39, 19, 219, 63, 246, 12, 225, 152, 101, 79, 219, 63, 128, 214, 252, 248, 75, 139, 219, 63, 33, 172, 198, 18, 214, 198, 219, 63, 144, 46, 54, 173, 20, 2, 220, 63, 113, 141, 207, 100, 255, 60, 220, 63, 152, 224, 212, 7, 146, 119, 220, 63, 213, 63, 136, 100, 200, 177, 220, 63, 178, 99, 35, 16, 175, 235, 220, 63, 167, 147, 108, 117, 57, 37, 221, 63, 179, 207, 99, 148, 103, 94, 221, 63, 141, 184, 0, 52, 74, 151, 221, 63, 35, 221, 207, 41, 200, 207, 221, 63, 162, 37, 143, 167, 229, 7, 222, 63, 148, 74, 120, 66, 175, 63, 222, 63, 84, 28, 7, 94, 45, 119, 222, 63, 162, 65, 10, 158, 66, 174, 222, 63, 128, 186, 129, 2, 239, 228, 222, 63, 162, 39, 101, 82, 67, 27, 223, 63, 191, 41, 172, 84, 80, 81, 223, 63, 153, 103, 37, 173, 248, 134, 223, 63, 121, 64, 217, 148, 43, 188, 223, 63, 157, 13, 249, 103, 6, 241, 223, 63, 200, 67, 223, 221, 202, 18, 224, 63, 227, 250, 119, 125, 230, 44, 224, 63, 16, 59, 83, 232, 188, 70, 224, 63, 119, 105, 195, 97, 105, 96, 224, 63, 68, 110, 134, 27, 240, 121, 224, 63, 97, 85, 189, 252, 78, 147, 224, 63, 52, 245, 186, 69, 96, 172, 224, 63, 87, 119, 44, 182, 73, 197, 224, 63, 203, 219, 17, 78, 11, 222, 224, 63, 119, 46, 140, 244, 162, 246, 224, 63, 8, 34, 139, 52, 241, 14, 225, 63, 187, 15, 64, 106, 19, 39, 225, 63, 167, 235, 137, 174, 11, 63, 225, 63, 181, 193, 137, 232, 215, 86, 225, 63, 3, 9, 138, 31, 99, 110, 225, 63, 24, 122, 196, 232, 185, 133, 225, 63, 125, 205, 114, 217, 232, 156, 225, 63, 215, 50, 25, 142, 231, 179, 225, 63, 157, 241, 125, 113, 169, 202, 225, 63, 254, 241, 94, 181, 50, 225, 225, 63, 174, 212, 179, 32, 148, 247, 225, 63, 38, 225, 66, 30, 193, 13, 226, 63, 56, 47, 78, 124, 181, 35, 226, 63, 17, 167, 147, 108, 117, 57, 226, 63, 224, 48, 209, 32, 5, 79, 226, 63, 117, 228, 72, 103, 96, 100, 226, 63, 142, 229, 93, 245, 128, 121, 226, 63, 179, 236, 73, 96, 115, 142, 226, 63, 159, 29, 112, 93, 49, 163, 226, 63, 37, 144, 18, 187, 182, 183, 226, 63, 92, 56, 16, 146, 5, 204, 226, 63, 182, 218, 195, 94, 40, 224, 226, 63, 169, 190, 243, 139, 18, 244, 226, 63, 9, 252, 225, 231, 191, 7, 227, 63, 48, 99, 10, 214, 56, 27, 227, 63, 145, 184, 199, 210, 135, 46, 227, 63, 139, 79, 1, 48, 158, 65, 227, 63, 197, 87, 59, 138, 115, 84, 227, 63, 198, 137, 175, 118, 20, 103, 227, 63, 23, 158, 151, 138, 141, 121, 227, 63, 47, 220, 185, 48, 210, 139, 227, 63, 21, 199, 129, 87, 203, 157, 227, 63, 240, 195, 65, 66, 148, 175, 227, 63, 26, 163, 117, 84, 53, 193, 227, 63, 58, 148, 161, 42, 166, 210, 227, 63, 204, 97, 247, 29, 195, 227, 227, 63, 128, 41, 3, 7, 180, 244, 227, 63, 110, 223, 163, 254, 122, 5, 228, 63, 126, 143, 250, 235, 21, 22, 228, 63, 211, 51, 189, 196, 88, 38, 228, 63, 74, 210, 53, 147, 111, 54, 228, 63, 228, 106, 100, 87, 90, 70, 228, 63, 160, 253, 72, 17, 25, 86, 228, 63, 229, 96, 54, 1, 134, 101, 228, 63, 31, 214, 27, 181, 194, 116, 228, 63, 147, 57, 150, 119, 213, 131, 228, 63, 228, 186, 41, 229, 181, 146, 228, 63, 49, 209, 32, 5, 79, 161, 228, 63, 23, 41, 148, 133, 175, 175, 228, 63, 55, 111, 156, 20, 230, 189, 228, 63, 53, 211, 189, 78, 234, 203, 228, 63, 114, 168, 223, 133, 173, 217, 228, 63, 27, 215, 191, 235, 51, 231, 228, 63, 254, 243, 52, 96, 144, 244, 228, 63, 145, 70, 5, 78, 182, 1, 229, 63, 145, 242, 147, 106, 159, 14, 229, 63, 65, 212, 125, 0, 82, 27, 229, 63, 231, 199, 95, 90, 212, 39, 229, 63, 15, 9, 223, 251, 27, 52, 229, 63, 210, 139, 218, 253, 42, 64, 229, 63, 138, 32, 206, 195, 9, 76, 229, 63, 242, 234, 28, 3, 178, 87, 229, 63, 222, 2, 9, 138, 31, 99, 229, 63, 100, 92, 113, 113, 84, 110, 229, 63, 35, 164, 110, 103, 95, 121, 229, 63, 101, 57, 9, 165, 47, 132, 229, 63, 253, 51, 131, 248, 192, 142, 229, 63, 92, 88, 55, 222, 29, 153, 229, 63, 11, 95, 95, 235, 82, 163, 229, 63, 107, 155, 226, 113, 81, 173, 229, 63, 175, 120, 234, 145, 6, 183, 229, 63, 255, 91, 201, 142, 141, 192, 229, 63, 136, 45, 61, 154, 234, 201, 229, 63, 29, 5, 136, 130, 25, 211, 229, 63, 58, 173, 219, 160, 246, 219, 229, 63, 123, 79, 229, 180, 167, 228, 229, 63, 11, 212, 98, 240, 48, 237, 229, 63, 235, 58, 84, 83, 146, 245, 229, 63, 226, 173, 243, 111, 151, 253, 229, 63, 42, 3, 7, 180, 116, 5, 230, 63, 216, 46, 109, 56, 44, 13, 230, 63, 191, 72, 104, 203, 185, 20, 230, 63, 2, 75, 174, 98, 241, 27, 230, 63, 103, 71, 170, 239, 252, 34, 230, 63, 51, 26, 249, 188, 226, 41, 230, 63, 56, 219, 220, 152, 158, 48, 230, 63, 221, 96, 168, 195, 10, 55, 230, 63, 141, 236, 74, 203, 72, 61, 230, 63, 165, 78, 64, 19, 97, 67, 230, 63, 200, 182, 12, 56, 75, 73, 230, 63, 229, 179, 60, 15, 238, 78, 230, 63, 248, 194, 100, 170, 96, 84, 230, 63, 114, 168, 223, 133, 173, 89, 230, 63, 201, 171, 115, 12, 200, 94, 230, 63, 141, 8, 198, 193, 165, 99, 230, 63, 48, 131, 49, 34, 81, 104, 230, 63, 57, 212, 239, 194, 214, 108, 230, 63, 243, 90, 9, 221, 37, 113, 230, 63, 48, 47, 192, 62, 58, 117, 230, 63, 166, 241, 11, 175, 36, 121, 230, 63, 85, 162, 236, 45, 229, 124, 230, 63, 159, 148, 73, 13, 109, 128, 230, 63, 153, 188, 1, 102, 190, 131, 230, 63, 249, 186, 12, 255, 233, 134, 230, 63, 102, 191, 238, 116, 231, 137, 230, 63, 86, 17, 110, 50, 170, 140, 230, 63, 36, 129, 6, 155, 58, 143, 230, 63, 156, 163, 142, 142, 171, 145, 230, 63, 10, 216, 14, 70, 236, 147, 230, 63, 206, 113, 110, 19, 238, 149, 230, 63, 157, 17, 165, 189, 193, 151, 230, 63, 23, 100, 203, 242, 117, 153, 230, 63, 225, 152, 101, 79, 2, 155, 230, 63, 143, 110, 132, 69, 69, 156, 230, 63, 164, 26, 246, 123, 98, 157, 230, 63, 77, 133, 120, 36, 94, 158, 230, 63, 138, 174, 11, 63, 56, 159, 230, 63, 103, 156, 134, 168, 194, 159, 230, 63, 193, 84, 51, 107, 41, 160, 230, 63, 221, 179, 174, 209, 114, 160, 230, 63, 164, 197, 25, 195, 156, 160, 230, 63, 221, 179, 174, 209, 114, 160, 230, 63, 193, 84, 51, 107, 41, 160, 230, 63, 126, 144, 101, 193, 196, 159, 230, 63, 206, 138, 168, 137, 62, 159, 230, 63, 213, 61, 178, 185, 106, 158, 230, 63, 113, 175, 204, 91, 117, 157, 230, 63, 251, 175, 115, 211, 102, 156, 230, 63, 236, 134, 109, 139, 50, 155, 230, 63, 239, 230, 169, 14, 185, 153, 230, 63, 156, 249, 213, 28, 32, 152, 230, 63, 11, 179, 208, 206, 105, 150, 230, 63, 225, 66, 30, 193, 141, 148, 230, 63, 35, 44, 42, 226, 116, 146, 230, 63, 227, 223, 103, 92, 56, 144, 230, 63, 146, 34, 50, 172, 226, 141, 230, 63 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
allocate([ 122, 83, 145, 10, 99, 139, 230, 63, 19, 186, 75, 226, 172, 136, 230, 63, 64, 223, 22, 44, 213, 133, 230, 63, 92, 147, 110, 75, 228, 130, 230, 63, 131, 77, 157, 71, 197, 127, 230, 63, 183, 13, 163, 32, 120, 124, 230, 63, 149, 128, 152, 132, 11, 121, 230, 63, 98, 130, 26, 190, 133, 117, 230, 63, 14, 162, 181, 162, 205, 113, 230, 63, 220, 187, 6, 125, 233, 109, 230, 63, 199, 76, 162, 94, 240, 105, 230, 63, 92, 144, 45, 203, 215, 101, 230, 63, 208, 241, 209, 226, 140, 97, 230, 63, 170, 41, 201, 58, 28, 93, 230, 63, 161, 216, 10, 154, 150, 88, 230, 63, 112, 34, 250, 181, 245, 83, 230, 63, 195, 185, 134, 25, 26, 79, 230, 63, 215, 247, 225, 32, 33, 74, 230, 63, 31, 161, 102, 72, 21, 69, 230, 63, 85, 217, 119, 69, 240, 63, 230, 63, 249, 106, 71, 113, 142, 58, 230, 63, 139, 139, 163, 114, 19, 53, 230, 63, 80, 23, 41, 148, 133, 47, 230, 63, 51, 26, 249, 188, 226, 41, 230, 63, 84, 142, 201, 226, 254, 35, 230, 63, 146, 121, 228, 15, 6, 30, 230, 63, 26, 196, 7, 118, 252, 23, 230, 63, 236, 109, 51, 21, 226, 17, 230, 63, 207, 160, 161, 127, 130, 11, 230, 63, 19, 39, 247, 59, 20, 5, 230, 63, 162, 12, 85, 49, 149, 254, 229, 63, 100, 93, 220, 70, 3, 248, 229, 63, 123, 19, 67, 114, 50, 241, 229, 63, 243, 28, 145, 239, 82, 234, 229, 63, 227, 109, 165, 215, 102, 227, 229, 63, 194, 77, 70, 149, 97, 220, 229, 63, 105, 87, 33, 229, 39, 213, 229, 63, 89, 192, 4, 110, 221, 205, 229, 63, 216, 100, 141, 122, 136, 198, 229, 63, 47, 164, 195, 67, 24, 191, 229, 63, 146, 233, 208, 233, 121, 183, 229, 63, 86, 130, 197, 225, 204, 175, 229, 63, 168, 86, 95, 93, 21, 168, 229, 63, 165, 221, 232, 99, 62, 160, 229, 63, 8, 59, 197, 170, 65, 152, 229, 63, 227, 223, 103, 92, 56, 144, 229, 63, 77, 192, 175, 145, 36, 136, 229, 63, 74, 95, 8, 57, 239, 127, 229, 63, 220, 188, 113, 82, 152, 119, 229, 63, 18, 74, 95, 8, 57, 111, 229, 63, 238, 6, 209, 90, 209, 102, 229, 63, 49, 154, 149, 237, 67, 94, 229, 63, 75, 200, 7, 61, 155, 85, 229, 63, 34, 26, 221, 65, 236, 76, 229, 63, 157, 155, 54, 227, 52, 68, 229, 63, 105, 255, 3, 172, 85, 59, 229, 63, 81, 218, 27, 124, 97, 50, 229, 63, 12, 205, 117, 26, 105, 41, 229, 63, 130, 227, 50, 110, 106, 32, 229, 63, 27, 244, 165, 183, 63, 23, 229, 63, 21, 88, 0, 83, 6, 14, 229, 63, 225, 211, 156, 188, 200, 4, 229, 63, 150, 91, 90, 13, 137, 251, 228, 63, 65, 245, 15, 34, 25, 242, 228, 63, 167, 178, 40, 236, 162, 232, 228, 63, 223, 135, 131, 132, 40, 223, 228, 63, 47, 81, 189, 53, 176, 213, 228, 63, 47, 80, 82, 96, 1, 204, 228, 63, 47, 79, 231, 138, 82, 194, 228, 63, 47, 78, 124, 181, 163, 184, 228, 63, 25, 89, 50, 199, 242, 174, 228, 63, 224, 129, 1, 132, 15, 165, 228, 63, 213, 146, 142, 114, 48, 155, 228, 63, 202, 163, 27, 97, 81, 145, 228, 63, 146, 204, 234, 29, 110, 135, 228, 63, 124, 239, 111, 208, 94, 125, 228, 63, 170, 238, 145, 205, 85, 115, 228, 63, 239, 225, 146, 227, 78, 105, 228, 63, 195, 16, 57, 125, 61, 95, 228, 63, 42, 254, 239, 136, 10, 85, 228, 63, 214, 199, 67, 223, 221, 74, 228, 63, 175, 121, 85, 103, 181, 64, 228, 63, 233, 126, 78, 65, 126, 54, 228, 63, 251, 30, 245, 215, 43, 44, 228, 63, 105, 143, 23, 210, 225, 33, 228, 63, 26, 220, 214, 22, 158, 23, 228, 63, 22, 136, 158, 148, 73, 13, 228, 63, 23, 183, 209, 0, 222, 2, 228, 63, 139, 170, 95, 233, 124, 248, 227, 63, 89, 110, 105, 53, 36, 238, 227, 63, 90, 157, 156, 161, 184, 227, 227, 63, 166, 43, 216, 70, 60, 217, 227, 63, 99, 126, 110, 104, 202, 206, 227, 63, 169, 137, 62, 31, 101, 196, 227, 63, 221, 35, 155, 171, 230, 185, 227, 63, 183, 237, 123, 212, 95, 175, 227, 63, 3, 124, 183, 121, 227, 164, 227, 63, 237, 182, 11, 205, 117, 154, 227, 63, 199, 128, 236, 245, 238, 143, 227, 63, 93, 110, 48, 212, 97, 133, 227, 63, 146, 8, 141, 96, 227, 122, 227, 63, 102, 79, 2, 155, 115, 112, 227, 63, 251, 60, 70, 121, 230, 101, 227, 63, 190, 18, 72, 137, 93, 91, 227, 63, 10, 161, 131, 46, 225, 80, 227, 63, 11, 208, 182, 154, 117, 70, 227, 63, 206, 165, 184, 170, 236, 59, 227, 63, 214, 87, 87, 5, 106, 49, 227, 63, 170, 158, 204, 63, 250, 38, 227, 63, 6, 158, 123, 15, 151, 28, 227, 63, 13, 80, 26, 106, 20, 18, 227, 63, 203, 162, 176, 139, 162, 7, 227, 63, 62, 150, 62, 116, 65, 253, 226, 63, 57, 66, 6, 242, 236, 242, 226, 63, 13, 137, 123, 44, 125, 232, 226, 63, 174, 100, 199, 70, 32, 222, 226, 63, 27, 213, 233, 64, 214, 211, 226, 63, 205, 33, 169, 133, 146, 201, 226, 63, 155, 229, 178, 209, 57, 191, 226, 63, 99, 38, 81, 47, 248, 180, 226, 63, 15, 240, 164, 133, 203, 170, 226, 63, 209, 173, 215, 244, 160, 160, 226, 63, 222, 202, 18, 157, 101, 150, 226, 63, 18, 77, 160, 136, 69, 140, 226, 63, 42, 88, 227, 108, 58, 130, 226, 63, 88, 87, 5, 106, 49, 120, 226, 63, 208, 181, 47, 160, 23, 110, 226, 63, 158, 97, 106, 75, 29, 100, 226, 63, 124, 126, 24, 33, 60, 90, 226, 63, 45, 179, 8, 197, 86, 80, 226, 63, 131, 23, 125, 5, 105, 70, 226, 63, 23, 213, 34, 162, 152, 60, 226, 63, 234, 235, 249, 154, 229, 50, 226, 63, 97, 50, 85, 48, 42, 41, 226, 63, 217, 120, 176, 197, 110, 31, 226, 63, 98, 48, 127, 133, 204, 21, 226, 63, 109, 29, 28, 236, 77, 12, 226, 63, 240, 81, 127, 189, 194, 2, 226, 63, 160, 110, 160, 192, 59, 249, 225, 63, 143, 228, 242, 31, 210, 239, 225, 63, 233, 155, 52, 13, 138, 230, 225, 63, 164, 166, 93, 76, 51, 221, 225, 63, 255, 93, 159, 57, 235, 211, 225, 63, 106, 134, 84, 81, 188, 202, 225, 63, 65, 240, 248, 246, 174, 193, 225, 63, 144, 161, 99, 7, 149, 184, 225, 63, 149, 243, 197, 222, 139, 175, 225, 63, 216, 158, 89, 18, 160, 166, 225, 63, 112, 151, 253, 186, 211, 157, 225, 63, 82, 239, 169, 156, 246, 148, 225, 63, 92, 172, 168, 193, 52, 140, 225, 63, 164, 194, 216, 66, 144, 131, 225, 63, 43, 50, 58, 32, 9, 123, 225, 63, 252, 0, 164, 54, 113, 114, 225, 63, 56, 17, 253, 218, 250, 105, 225, 63, 179, 122, 135, 219, 161, 97, 225, 63, 63, 85, 133, 6, 98, 89, 225, 63, 66, 119, 73, 156, 21, 81, 225, 63, 223, 194, 186, 241, 238, 72, 225, 63, 209, 91, 60, 188, 231, 64, 225, 63, 143, 137, 148, 102, 243, 56, 225, 63, 220, 242, 145, 148, 244, 48, 225, 63, 7, 98, 217, 204, 33, 41, 225, 63, 157, 18, 16, 147, 112, 33, 225, 63, 210, 111, 95, 7, 206, 25, 225, 63, 173, 252, 50, 24, 35, 18, 225, 63, 146, 119, 14, 101, 168, 10, 225, 63, 227, 51, 217, 63, 79, 3, 225, 63, 166, 180, 254, 150, 0, 252, 224, 63, 105, 53, 36, 238, 177, 244, 224, 63, 10, 188, 147, 79, 143, 237, 224, 63, 91, 96, 143, 137, 148, 230, 224, 63, 240, 224, 39, 14, 160, 223, 224, 63, 178, 73, 126, 196, 175, 216, 224, 63, 59, 196, 63, 108, 233, 209, 224, 63, 185, 56, 42, 55, 81, 203, 224, 63, 54, 173, 20, 2, 185, 196, 224, 63, 37, 230, 89, 73, 43, 190, 224, 63, 174, 72, 76, 80, 195, 183, 224, 63, 111, 129, 4, 197, 143, 177, 224, 63, 3, 210, 254, 7, 88, 171, 224, 63, 99, 183, 207, 42, 51, 165, 224, 63, 70, 210, 110, 244, 49, 159, 224, 63, 74, 207, 244, 18, 99, 153, 224, 63, 11, 240, 221, 230, 141, 147, 224, 63, 220, 129, 58, 229, 209, 141, 224, 63, 71, 61, 68, 163, 59, 136, 224, 63, 166, 242, 118, 132, 211, 130, 224, 63, 192, 203, 12, 27, 101, 125, 224, 63, 71, 230, 145, 63, 24, 120, 224, 63, 80, 54, 229, 10, 239, 114, 224, 63, 32, 152, 163, 199, 239, 109, 224, 63, 195, 17, 164, 82, 236, 104, 224, 63, 232, 192, 114, 132, 12, 100, 224, 63, 212, 129, 172, 167, 86, 95, 224, 63, 43, 132, 213, 88, 194, 90, 224, 63, 86, 158, 64, 216, 41, 86, 224, 63, 116, 178, 212, 122, 191, 81, 224, 63, 44, 240, 21, 221, 122, 77, 224, 63, 35, 135, 136, 155, 83, 73, 224, 63, 25, 30, 251, 89, 44, 69, 224, 63, 26, 163, 117, 84, 53, 65, 224, 63, 204, 69, 124, 39, 102, 61, 224, 63, 142, 89, 246, 36, 176, 57, 224, 63, 80, 109, 112, 34, 250, 53, 224, 63, 98, 75, 143, 166, 122, 50, 224, 63, 36, 71, 58, 3, 35, 47, 224, 63, 201, 203, 154, 88, 224, 43, 224, 63, 110, 80, 251, 173, 157, 40, 224, 63, 121, 147, 223, 162, 147, 37, 224, 63, 98, 220, 13, 162, 181, 34, 224, 63, 0, 198, 51, 104, 232, 31, 224, 63, 204, 151, 23, 96, 31, 29, 224, 63, 209, 63, 193, 197, 138, 26, 224, 63, 247, 201, 81, 128, 40, 24, 224, 63, 121, 36, 94, 158, 206, 21, 224, 63, 153, 43, 131, 106, 131, 19, 224, 63, 151, 56, 242, 64, 100, 17, 224, 63, 251, 3, 229, 182, 125, 15, 224, 63, 141, 183, 149, 94, 155, 13, 224, 63, 235, 255, 28, 230, 203, 11, 224, 63, 16, 90, 15, 95, 38, 10, 224, 63, 178, 102, 100, 144, 187, 8, 224, 63, 84, 115, 185, 193, 80, 7, 224, 63, 6, 241, 129, 29, 255, 5, 224, 63, 128, 128, 181, 106, 215, 4, 224, 63, 73, 218, 141, 62, 230, 3, 224, 63, 251, 63, 135, 249, 242, 2, 224, 63, 2, 243, 144, 41, 31, 2, 224, 63, 231, 171, 228, 99, 119, 1, 224, 63, 192, 94, 97, 193, 253, 0, 224, 63, 153, 17, 222, 30, 132, 0, 224, 63, 11, 238, 7, 60, 48, 0, 224, 63, 68, 220, 156, 74, 6, 0, 224, 63, 68, 220, 156, 74, 6, 0, 224, 63, 0, 0, 0, 0, 0, 0, 0, 0, 111, 183, 36, 7, 236, 82, 33, 64, 214, 54, 197, 227, 162, 90, 34, 64, 8, 118, 252, 23, 8, 114, 35, 64, 154, 153, 153, 153, 153, 153, 36, 64, 218, 113, 195, 239, 166, 211, 37, 64, 71, 114, 249, 15, 233, 31, 39, 64, 0, 0, 0, 0, 0, 128, 40, 64, 28, 64, 191, 239, 223, 244, 41, 64, 0, 0, 0, 0, 0, 128, 43, 64, 169, 78, 7, 178, 158, 34, 45, 64, 0, 139, 252, 250, 33, 222, 46, 64, 106, 78, 94, 100, 2, 90, 48, 64, 111, 183, 36, 7, 236, 82, 49, 64, 214, 54, 197, 227, 162, 90, 50, 64, 8, 118, 252, 23, 8, 114, 51, 64, 66, 64, 190, 132, 10, 154, 52, 64, 58, 122, 252, 222, 166, 211, 53, 64, 232, 105, 192, 32, 233, 31, 55, 64, 0, 0, 0, 0, 0, 128, 56, 64, 189, 55, 134, 0, 224, 244, 57, 64, 0, 0, 0, 0, 0, 128, 59, 64, 74, 70, 206, 194, 158, 34, 61, 64, 0, 139, 252, 250, 33, 222, 62, 64, 154, 210, 250, 91, 2, 90, 64, 64, 159, 59, 193, 254, 235, 82, 65, 64, 214, 54, 197, 227, 162, 90, 66, 64, 216, 241, 95, 32, 8, 114, 67, 64, 114, 196, 90, 124, 10, 154, 68, 64, 58, 122, 252, 222, 166, 211, 69, 64, 232, 105, 192, 32, 233, 31, 71, 64, 0, 0, 0, 0, 0, 128, 72, 64, 189, 55, 134, 0, 224, 244, 73, 64, 0, 0, 0, 0, 0, 128, 75, 64, 74, 70, 206, 194, 158, 34, 77, 64, 209, 6, 96, 3, 34, 222, 78, 64, 130, 144, 44, 96, 2, 90, 80, 64, 159, 59, 193, 254, 235, 82, 81, 64, 238, 120, 147, 223, 162, 90, 82, 64, 216, 241, 95, 32, 8, 114, 83, 64, 90, 130, 140, 128, 10, 154, 84, 64, 58, 122, 252, 222, 166, 211, 85, 64, 232, 105, 192, 32, 233, 31, 87, 64, 117, 90, 183, 65, 237, 127, 88, 64, 189, 55, 134, 0, 224, 244, 89, 64, 0, 0, 0, 0, 0, 128, 91, 64, 97, 136, 156, 190, 158, 34, 93, 64, 233, 72, 46, 255, 33, 222, 94, 64, 130, 144, 44, 96, 2, 90, 96, 64, 147, 26, 218, 0, 236, 82, 97, 64, 238, 120, 147, 223, 162, 90, 98, 64, 216, 241, 95, 32, 8, 114, 99, 64, 90, 130, 140, 128, 10, 154, 100, 64, 58, 122, 252, 222, 166, 211, 101, 64, 232, 105, 192, 32, 233, 31, 103, 64, 129, 123, 158, 63, 237, 127, 104, 64, 189, 55, 134, 0, 224, 244, 105, 64, 0, 0, 0, 0, 0, 128, 107, 64, 85, 103, 181, 192, 158, 34, 109, 64, 233, 72, 46, 255, 33, 222, 110, 64, 130, 144, 44, 96, 2, 90, 112, 64, 25, 171, 205, 255, 235, 82, 113, 64, 238, 120, 147, 223, 162, 90, 114, 64, 216, 241, 95, 32, 8, 114, 115, 64, 224, 18, 128, 127, 10, 154, 116, 64, 180, 233, 8, 224, 166, 211, 117, 64, 110, 250, 179, 31, 233, 31, 119, 64, 129, 123, 158, 63, 237, 127, 120, 64, 189, 55, 134, 0, 224, 244, 121, 64, 0, 0, 0, 0, 0, 128, 123, 64, 219, 247, 168, 191, 158, 34, 125, 64, 99, 184, 58, 0, 34, 222, 126, 64, 130, 144, 44, 96, 2, 90, 128, 64, 25, 171, 205, 255, 235, 82, 129, 64, 171, 176, 25, 224, 162, 90, 130, 64, 27, 186, 217, 31, 8, 114, 131, 64, 157, 74, 6, 128, 10, 154, 132, 64, 180, 233, 8, 224, 166, 211, 133, 64, 43, 50, 58, 32, 233, 31, 135, 64, 62, 179, 36, 64, 237, 127, 136, 64, 0, 0, 0, 0, 224, 244, 137, 64, 0, 0, 0, 0, 0, 128, 139, 64, 152, 47, 47, 192, 158, 34, 141, 64, 99, 184, 58, 0, 34, 222, 142, 64, 163, 116, 233, 95, 2, 90, 144, 64, 248, 198, 16, 0, 236, 82, 145, 64, 171, 176, 25, 224, 162, 90, 146, 64, 250, 213, 28, 32, 8, 114, 147, 64, 157, 74, 6, 128, 10, 154, 148, 64, 180, 233, 8, 224, 166, 211, 149, 64, 76, 22, 247, 31, 233, 31, 151, 64, 95, 151, 225, 63, 237, 127, 152, 64, 0, 0, 0, 0, 224, 244, 153, 64, 0, 0, 0, 0, 0, 128, 155, 64, 186, 19, 236, 191, 158, 34, 157, 64, 132, 156, 247, 255, 33, 222, 158, 64, 147, 2, 11, 96, 2, 90, 160, 64, 248, 198, 16, 0, 236, 82, 161, 64, 188, 34, 248, 223, 162, 90, 162, 64, 10, 72, 251, 31, 8, 114, 163, 64, 157, 74, 6, 128, 10, 154, 164, 64, 180, 233, 8, 224, 166, 211, 165, 64, 76, 22, 247, 31, 233, 31, 167, 64, 78, 37, 3, 64, 237, 127, 168, 64, 0, 0, 0, 0, 224, 244, 169, 64, 0, 0, 0, 0, 0, 128, 171, 64, 133, 235, 81, 184, 158, 34, 173, 64, 132, 156, 247, 255, 33, 222, 174, 64, 155, 59, 250, 95, 2, 90, 176, 64, 0, 0, 0, 0, 236, 82, 177, 64, 188, 34, 248, 223, 162, 90, 178, 64, 10, 72, 251, 31, 8, 114, 179, 64, 157, 74, 6, 128, 10, 154, 180, 64, 188, 34, 248, 223, 166, 211, 181, 64, 68, 221, 7, 32, 233, 31, 183, 64, 78, 37, 3, 64, 237, 127, 184, 64, 0, 0, 0, 0, 224, 244, 185, 64, 0, 0, 0, 0, 0, 128, 187, 64, 178, 218, 252, 191, 158, 34, 189, 64, 132, 156, 247, 255, 33, 222, 190, 64, 23, 159, 2, 96, 2, 90, 192, 64, 0, 0, 0, 0, 236, 82, 193, 64, 56, 134, 0, 224, 162, 90, 194, 64, 134, 171, 3, 32, 8, 114, 195, 64, 33, 231, 253, 127, 10, 154, 196, 64, 56, 134, 0, 224, 166, 211, 197, 64, 200, 121, 255, 31, 233, 31, 199, 64, 78, 37, 3, 64, 237, 127, 200, 64, 0, 0, 0, 0, 224, 244, 201, 64, 36, 92, 0, 0, 161, 101, 0, 0, 116, 92, 0, 0, 117, 101, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 104, 51, 0, 0, 0, 0, 0, 0, 116, 92, 0, 0, 81, 101, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 112, 51, 0, 0, 0, 0, 0, 0, 156, 92, 0, 0, 198, 101, 0, 0, 0, 0, 0, 0, 136, 51, 0, 0, 156, 92, 0, 0, 235, 101, 0, 0, 1, 0, 0, 0, 136, 51, 0, 0, 36, 92, 0, 0, 40, 102, 0, 0, 116, 92, 0, 0, 106, 102, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 104, 51, 0, 0, 0, 0, 0, 0, 116, 92, 0, 0, 70, 102, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 200, 51, 0, 0, 0, 0, 0, 0, 156, 92, 0, 0, 150, 102, 0, 0, 0, 0, 0, 0, 224, 51, 0, 0, 156, 92, 0, 0, 187, 102, 0, 0, 1, 0, 0, 0, 224, 51, 0, 0, 116, 92, 0, 0, 22, 103, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 104, 51, 0, 0, 0, 0, 0, 0, 116, 92, 0, 0, 242, 102, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 24, 52, 0, 0, 0, 0, 0, 0, 156, 92, 0, 0, 66, 103, 0, 0, 0, 0, 0, 0, 48, 52, 0, 0, 156, 92, 0, 0, 103, 103, 0, 0, 1, 0, 0, 0, 48, 52, 0, 0, 116, 92, 0, 0, 177, 103, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 104, 51, 0, 0, 0, 0, 0, 0, 116, 92, 0, 0, 141, 103, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 104, 52, 0, 0, 0, 0, 0, 0, 156, 92, 0, 0, 221, 103, 0, 0, 0, 0, 0, 0, 128, 52, 0, 0, 156, 92, 0, 0, 2, 104, 0, 0, 1, 0, 0, 0, 128, 52, 0, 0, 36, 92, 0, 0, 57, 104, 0, 0, 156, 92, 0, 0, 71, 104, 0, 0, 0, 0, 0, 0, 184, 52, 0, 0, 156, 92, 0, 0, 86, 104, 0, 0, 1, 0, 0, 0, 184, 52, 0, 0, 36, 92, 0, 0, 106, 104, 0, 0, 156, 92, 0, 0, 121, 104, 0, 0, 0, 0, 0, 0, 224, 52, 0, 0, 156, 92, 0, 0, 137, 104, 0, 0, 1, 0, 0, 0, 224, 52, 0, 0, 36, 92, 0, 0, 154, 104, 0, 0, 156, 92, 0, 0, 163, 104, 0, 0, 0, 0, 0, 0, 8, 53, 0, 0, 156, 92, 0, 0, 173, 104, 0, 0, 1, 0, 0, 0, 8, 53, 0, 0, 76, 92, 0, 0, 184, 104, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 133, 105, 0, 0, 76, 92, 0, 0, 166, 105, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 248, 105, 0, 0, 156, 92, 0, 0, 7, 106, 0, 0, 0, 0, 0, 0, 88, 53, 0, 0, 156, 92, 0, 0, 23, 106, 0, 0, 1, 0, 0, 0, 88, 53, 0, 0, 76, 92, 0, 0, 40, 106, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 1, 107, 0, 0, 76, 92, 0, 0, 38, 107, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 110, 107, 0, 0, 156, 92, 0, 0, 126, 107, 0, 0, 0, 0, 0, 0, 168, 53, 0, 0, 156, 92, 0, 0, 143, 107, 0, 0, 1, 0, 0, 0, 168, 53, 0, 0, 76, 92, 0, 0, 161, 107, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 124, 108, 0, 0, 76, 92, 0, 0, 162, 108, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 244, 108, 0, 0, 156, 92, 0, 0, 1, 109, 0, 0, 0, 0, 0, 0, 248, 53, 0, 0, 156, 92, 0, 0, 15, 109, 0, 0, 1, 0, 0, 0, 248, 53, 0, 0, 76, 92, 0, 0, 30, 109, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 243, 109, 0, 0, 76, 92, 0, 0, 22, 110, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 86, 110, 0, 0, 156, 92, 0, 0, 95, 110, 0, 0, 0, 0, 0, 0, 72, 54, 0, 0, 156, 92, 0, 0, 105, 110, 0, 0, 1, 0, 0, 0, 72, 54, 0, 0, 76, 92, 0, 0, 116, 110, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 65, 111, 0, 0, 76, 92, 0, 0, 96, 111, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 180, 111, 0, 0, 156, 92, 0, 0, 196, 111, 0, 0, 0, 0, 0, 0, 152, 54, 0, 0, 156, 92, 0, 0, 213, 111, 0, 0, 1, 0, 0, 0, 152, 54, 0, 0, 76, 92, 0, 0, 231, 111, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 194, 112, 0, 0, 76, 92, 0, 0, 232, 112, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 49, 113, 0, 0, 156, 92, 0, 0, 62, 113, 0, 0, 0, 0, 0, 0, 232, 54, 0, 0, 156, 92, 0, 0, 76, 113, 0, 0, 1, 0, 0, 0, 232, 54, 0, 0, 76, 92, 0, 0, 91, 113, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 48, 114, 0, 0, 76, 92, 0, 0, 83, 114, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 147, 114, 0, 0, 156, 92, 0, 0, 156, 114, 0, 0, 0, 0, 0, 0, 56, 55, 0, 0, 156, 92, 0, 0, 166, 114, 0, 0, 1, 0, 0, 0, 56, 55, 0, 0, 76, 92, 0, 0, 177, 114, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 126, 115, 0, 0, 76, 92, 0, 0, 157, 115, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 231, 115, 0, 0, 156, 92, 0, 0, 240, 115, 0, 0, 0, 0, 0, 0, 136, 55, 0, 0, 156, 92, 0, 0, 250, 115, 0, 0, 1, 0, 0, 0, 136, 55, 0, 0, 76, 92, 0, 0, 5, 116, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 210, 116, 0, 0, 76, 92, 0, 0, 241, 116, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 63, 117, 0, 0, 156, 92, 0, 0, 72, 117, 0, 0, 0, 0, 0, 0, 216, 55, 0, 0, 156, 92, 0, 0, 82, 117, 0, 0, 1, 0, 0, 0, 216, 55, 0, 0, 76, 92, 0, 0, 93, 117, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 42, 118, 0, 0, 76, 92, 0, 0, 73, 118, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 159, 118, 0, 0, 156, 92, 0, 0, 168, 118, 0, 0, 0, 0, 0, 0, 40, 56, 0, 0, 156, 92, 0, 0, 178, 118, 0, 0, 1, 0, 0, 0, 40, 56, 0, 0, 76, 92, 0, 0, 189, 118, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 138, 119, 0, 0, 76, 92, 0, 0, 169, 119, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 234, 119, 0, 0, 156, 92, 0, 0, 251, 119, 0, 0, 0, 0, 0, 0, 120, 56, 0, 0, 156, 92, 0, 0, 13, 120, 0, 0, 1, 0, 0, 0, 120, 56, 0, 0, 76, 92, 0, 0, 32, 120, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 253, 120, 0, 0, 76, 92, 0, 0, 36, 121, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 104, 121, 0, 0, 156, 92, 0, 0, 118, 121, 0, 0, 0, 0, 0, 0, 200, 56, 0, 0, 156, 92, 0, 0, 133, 121, 0, 0, 1, 0, 0, 0, 200, 56, 0, 0, 76, 92, 0, 0, 149, 121, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 108, 122, 0, 0, 76, 92, 0, 0, 144, 122, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 218, 122, 0, 0, 156, 92, 0, 0, 231, 122, 0, 0, 0, 0, 0, 0, 24, 57, 0, 0, 156, 92, 0, 0, 245, 122, 0, 0, 1, 0, 0, 0, 24, 57, 0, 0, 76, 92, 0, 0, 4, 123, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 217, 123, 0, 0, 76, 92, 0, 0, 252, 123, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 60, 124, 0, 0, 156, 92, 0, 0, 76, 124, 0, 0, 0, 0, 0, 0, 104, 57, 0, 0, 156, 92, 0, 0, 93, 124, 0, 0, 1, 0, 0, 0, 104, 57, 0, 0, 76, 92, 0, 0, 111, 124, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 74, 125, 0, 0, 76, 92, 0, 0, 112, 125, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 179, 125, 0, 0, 156, 92, 0, 0, 188, 125, 0, 0, 0, 0, 0, 0, 184, 57, 0, 0, 156, 92, 0, 0, 198, 125, 0, 0, 1, 0, 0, 0, 184, 57, 0, 0, 76, 92, 0, 0, 209, 125, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 158, 126, 0, 0, 76, 92, 0, 0, 189, 126, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 254, 126, 0, 0, 156, 92, 0, 0, 8, 127, 0, 0, 0, 0, 0, 0, 8, 58, 0, 0, 156, 92, 0, 0, 19, 127, 0, 0, 1, 0, 0, 0, 8, 58, 0, 0, 76, 92, 0, 0, 31, 127, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 238, 127, 0, 0, 76, 92, 0, 0, 14, 128, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 75, 128, 0, 0, 156, 92, 0, 0, 86, 128, 0, 0, 0, 0, 0, 0, 88, 58, 0, 0, 156, 92, 0, 0, 98, 128, 0, 0, 1, 0, 0, 0, 88, 58, 0, 0, 76, 92, 0, 0, 111, 128, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 64, 129, 0, 0, 76, 92, 0, 0, 97, 129, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 159, 129, 0, 0, 156, 92, 0, 0, 169, 129, 0, 0, 0, 0, 0, 0, 168, 58, 0, 0, 156, 92, 0, 0, 180, 129, 0, 0, 1, 0, 0, 0, 168, 58, 0, 0, 76, 92, 0, 0, 192, 129, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 143, 130, 0, 0, 76, 92, 0, 0, 175, 130, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 236, 130, 0, 0, 156, 92, 0, 0, 247, 130, 0, 0, 0, 0, 0, 0, 248, 58, 0, 0, 156, 92, 0, 0, 3, 131, 0, 0, 1, 0, 0, 0, 248, 58, 0, 0, 76, 92, 0, 0, 16, 131, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 225, 131, 0, 0, 76, 92, 0, 0, 2, 132, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 149, 138, 0, 0, 156, 92, 0, 0, 139, 138, 0, 0, 0, 0, 0, 0, 72, 59, 0, 0, 156, 92, 0, 0, 128, 138, 0, 0, 1, 0, 0, 0, 72, 59, 0, 0, 36, 92, 0, 0, 97, 138, 0, 0, 36, 92, 0, 0, 78, 137, 0, 0, 156, 92, 0, 0, 67, 137, 0, 0, 0, 0, 0, 0, 120, 59, 0, 0, 156, 92, 0, 0, 55, 137, 0, 0, 1, 0, 0, 0, 120, 59, 0, 0, 36, 92, 0, 0, 23, 137, 0, 0, 36, 92, 0, 0, 243, 135, 0, 0, 156, 92, 0, 0, 218, 135, 0, 0, 0, 0, 0, 0, 168, 59, 0, 0, 156, 92, 0, 0, 192, 135, 0, 0, 1, 0, 0, 0, 168, 59, 0, 0, 36, 92, 0, 0, 146, 135, 0, 0, 76, 92, 0, 0, 92, 134, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 3, 135, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 11, 136, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 150, 136, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 88, 137, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 225, 137, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 92, 140, 0, 0, 156, 92, 0, 0, 69, 140, 0, 0, 0, 0, 0, 0, 56, 60, 0, 0, 156, 92, 0, 0, 45, 140, 0, 0, 1, 0, 0, 0, 56, 60, 0, 0, 36, 92, 0, 0, 1, 140, 0, 0, 76, 92, 0, 0, 209, 138, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 116, 139, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 128, 147, 0, 0, 156, 92, 0, 0, 91, 147, 0, 0, 0, 0, 0, 0, 136, 60, 0, 0, 156, 92, 0, 0, 53, 147, 0, 0, 1, 0, 0, 0, 136, 60, 0, 0, 36, 92, 0, 0, 251, 146, 0, 0, 36, 92, 0, 0, 126, 145, 0, 0, 156, 92, 0, 0, 90, 145, 0, 0, 0, 0, 0, 0, 184, 60, 0, 0, 156, 92, 0, 0, 53, 145, 0, 0, 1, 0, 0, 0, 184, 60, 0, 0, 36, 92, 0, 0, 252, 144, 0, 0, 36, 92, 0, 0, 128, 143, 0, 0, 156, 92, 0, 0, 90, 143, 0, 0, 0, 0, 0, 0, 232, 60, 0, 0, 156, 92, 0, 0, 51, 143, 0, 0, 1, 0, 0, 0, 232, 60, 0, 0, 36, 92, 0, 0, 248, 142, 0, 0, 76, 92, 0, 0, 110, 141, 0, 0, 40, 61, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 139, 141, 0, 0, 76, 92, 0, 0, 155, 141, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 92, 142, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 165, 143, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 98, 144, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 161, 145, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 96, 146, 0, 0, 80, 79, 0, 0, 0, 0, 0, 0, 116, 92, 0, 0, 217, 152, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 56, 62, 0, 0, 0, 0, 0, 0, 116, 92, 0, 0, 154, 152, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 56, 62, 0, 0, 0, 0, 0, 0, 116, 92, 0, 0, 53, 152, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 56, 62, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 22, 152, 0, 0, 36, 92, 0, 0, 247, 151, 0, 0, 36, 92, 0, 0, 216, 151, 0, 0, 36, 92, 0, 0, 185, 151, 0, 0, 36, 92, 0, 0, 154, 151, 0, 0, 36, 92, 0, 0, 123, 151, 0, 0, 36, 92, 0, 0, 92, 151, 0, 0, 36, 92, 0, 0, 61, 151, 0, 0, 36, 92, 0, 0, 30, 151, 0, 0, 36, 92, 0, 0, 255, 150, 0, 0, 36, 92, 0, 0, 224, 150, 0, 0, 36, 92, 0, 0, 193, 150, 0, 0, 36, 92, 0, 0, 116, 152, 0, 0, 76, 92, 0, 0, 24, 153, 0, 0, 80, 62, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 37, 153, 0, 0, 36, 92, 0, 0, 50, 153, 0, 0, 76, 92, 0, 0, 63, 153, 0, 0, 88, 62, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 96, 153, 0, 0, 96, 62, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 166, 153, 0, 0, 96, 62, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 130, 153, 0, 0, 128, 62, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 200, 153, 0, 0, 96, 62, 0, 0, 0, 0, 0, 0, 8, 92, 0, 0, 240, 153, 0, 0, 8, 92, 0, 0, 242, 153, 0, 0, 8, 92, 0, 0, 245, 153, 0, 0, 8, 92, 0, 0, 247, 153, 0, 0, 8, 92, 0, 0, 249, 153, 0, 0, 8, 92, 0, 0, 251, 153, 0, 0, 8, 92, 0, 0, 253, 153, 0, 0, 8, 92, 0, 0, 255, 153, 0, 0, 8, 92, 0, 0, 1, 154, 0, 0, 8, 92, 0, 0, 3, 154, 0, 0, 8, 92, 0, 0, 5, 154, 0, 0, 8, 92, 0, 0, 7, 154, 0, 0, 8, 92, 0, 0, 9, 154, 0, 0, 8, 92, 0, 0, 11, 154, 0, 0, 76, 92, 0, 0, 13, 154, 0, 0, 112, 62, 0, 0, 0, 0, 0, 0, 76, 92, 0, 0, 50, 154, 0, 0, 112, 62, 0, 0, 0, 0, 0, 0, 93, 61, 127, 102, 158, 160, 230, 63, 0, 0, 0, 0, 0, 136, 57, 61, 68, 23, 117, 250, 82, 176, 230, 63, 0, 0, 0, 0, 0, 0, 216, 60, 254, 217, 11, 117, 18, 192, 230, 63, 0, 0, 0, 0, 0, 120, 40, 189, 191, 118, 212, 221, 220, 207, 230, 63, 0, 0, 0, 0, 0, 192, 30, 61, 41, 26, 101, 60, 178, 223, 230, 63, 0, 0, 0, 0, 0, 0, 216, 188, 227, 58, 89, 152, 146, 239, 230, 63, 0, 0, 0, 0, 0, 0, 188, 188, 134, 147, 81, 249, 125, 255, 230, 63, 0, 0, 0, 0, 0, 216, 47, 189, 163, 45, 244, 102, 116, 15, 231, 63, 0, 0, 0, 0, 0, 136, 44, 189, 195, 95, 236, 232, 117, 31, 231, 63, 0, 0, 0, 0, 0, 192, 19, 61, 5, 207, 234, 134, 130, 47, 231, 63, 0, 0, 0, 0, 0, 48, 56, 189, 82, 129, 165, 72, 154, 63, 231, 63, 0, 0, 0, 0, 0, 192, 0, 189, 252, 204, 215, 53, 189, 79, 231, 63, 0, 0, 0, 0, 0, 136, 47, 61, 241, 103, 66, 86, 235, 95, 231, 63, 0, 0, 0, 0, 0, 224, 3, 61, 72, 109, 171, 177, 36, 112, 231, 63, 0, 0, 0, 0, 0, 208, 39, 189, 56, 93, 222, 79, 105, 128, 231, 63, 0, 0, 0, 0, 0, 0, 221, 188, 0, 29, 172, 56, 185, 144, 231, 63, 0, 0, 0, 0, 0, 0, 227, 60, 120, 1, 235, 115, 20, 161, 231, 63, 0, 0, 0, 0, 0, 0, 237, 188, 96, 208, 118, 9, 123, 177, 231, 63, 0, 0, 0, 0, 0, 64, 32, 61, 51, 193, 48, 1, 237, 193, 231, 63, 0, 0, 0, 0, 0, 0, 160, 60, 54, 134, 255, 98, 106, 210, 231, 63, 0, 0, 0, 0, 0, 144, 38, 189, 59, 78, 207, 54, 243, 226, 231, 63, 0, 0, 0, 0, 0, 224, 2, 189, 232, 195, 145, 132, 135, 243, 231, 63, 0, 0, 0, 0, 0, 88, 36, 189, 78, 27, 62, 84, 39, 4, 232, 63, 0, 0, 0, 0, 0, 0, 51, 61, 26, 7, 209, 173, 210, 20, 232, 63, 0, 0, 0, 0, 0, 0, 15, 61, 126, 205, 76, 153, 137, 37, 232, 63, 0, 0, 0, 0, 0, 192, 33, 189, 208, 66, 185, 30, 76, 54, 232, 63, 0, 0, 0, 0, 0, 208, 41, 61, 181, 202, 35, 70, 26, 71, 232, 63, 0, 0, 0, 0, 0, 16, 71, 61, 188, 91, 159, 23, 244, 87, 232, 63, 0, 0, 0, 0, 0, 96, 34, 61, 175, 145, 68, 155, 217, 104, 232, 63, 0, 0, 0, 0, 0, 196, 50, 189, 149, 163, 49, 217, 202, 121, 232, 63, 0, 0, 0, 0, 0, 0, 35, 189, 184, 101, 138, 217, 199, 138, 232, 63, 0, 0, 0, 0, 0, 128, 42, 189, 0, 88, 120, 164, 208, 155, 232, 63, 0, 0, 0, 0, 0, 0, 237, 188, 35, 162, 42, 66, 229, 172, 232, 63, 0, 0, 0, 0, 0, 40, 51, 61, 250, 25, 214, 186, 5, 190, 232, 63, 0, 0, 0, 0, 0, 180, 66, 61, 131, 67, 181, 22, 50, 207, 232, 63, 0, 0, 0, 0, 0, 208, 46, 189, 76, 102, 8, 94, 106, 224, 232, 63, 0, 0, 0, 0, 0, 80, 32, 189, 7, 120, 21, 153, 174, 241, 232, 63, 0, 0, 0, 0, 0, 40, 40, 61, 14, 44, 40, 208, 254, 2, 233, 63, 0, 0, 0, 0, 0, 176, 28, 189, 150, 255, 145, 11, 91, 20, 233, 63, 0, 0, 0, 0, 0, 224, 5, 189, 249, 47, 170, 83, 195, 37, 233, 63, 0, 0, 0, 0, 0, 64, 245, 60, 74, 198, 205, 176, 55, 55, 233, 63, 0, 0, 0, 0, 0, 32, 23, 61, 174, 152, 95, 43, 184, 72, 233, 63, 0, 0, 0, 0, 0, 0, 9, 189, 203, 82, 200, 203, 68, 90, 233, 63, 0, 0, 0, 0, 0, 104, 37, 61, 33, 111, 118, 154, 221, 107, 233, 63, 0, 0, 0, 0, 0, 208, 54, 189, 42, 78, 222, 159, 130, 125, 233, 63, 0, 0, 0, 0, 0, 0, 1, 189, 163, 35, 122, 228, 51, 143, 233, 63, 0, 0, 0, 0, 0, 0, 45, 61, 4, 6, 202, 112, 241, 160, 233, 63, 0, 0, 0, 0, 0, 164, 56, 189, 137, 255, 83, 77, 187, 178, 233, 63, 0, 0, 0, 0, 0, 92, 53, 61, 91, 241, 163, 130, 145, 196, 233, 63, 0, 0, 0, 0, 0, 184, 38, 61, 197, 184, 75, 25, 116, 214, 233, 63, 0, 0, 0, 0, 0, 0, 236, 188, 142, 35, 227, 25, 99, 232, 233, 63, 0, 0, 0, 0, 0, 208, 23, 61, 2, 243, 7, 141, 94, 250, 233, 63, 0, 0, 0, 0, 0, 64, 22, 61, 77, 229, 93, 123, 102, 12, 234, 63, 0, 0, 0, 0, 0, 0, 245, 188, 246, 184, 142, 237, 122, 30, 234, 63, 0, 0, 0, 0, 0, 224, 9, 61, 39, 46, 74, 236, 155, 48, 234, 63, 0, 0, 0, 0, 0, 216, 42, 61, 93, 10, 70, 128, 201, 66, 234, 63, 0, 0, 0, 0, 0, 240, 26, 189, 155, 37, 62, 178, 3, 85, 234, 63, 0, 0, 0, 0, 0, 96, 11, 61, 19, 98, 244, 138, 74, 103, 234, 63, 0, 0, 0, 0, 0, 136, 56, 61, 167, 179, 48, 19, 158, 121, 234, 63, 0, 0, 0, 0, 0, 32, 17, 61, 141, 46, 193, 83, 254, 139, 234, 63, 0, 0, 0, 0, 0, 192, 6, 61, 210, 252, 121, 85, 107, 158, 234, 63, 0, 0, 0, 0, 0, 184, 41, 189, 184, 111, 53, 33, 229, 176, 234, 63, 0, 0, 0, 0, 0, 112, 43, 61, 129, 243, 211, 191, 107, 195, 234, 63, 0, 0, 0, 0, 0, 0, 217, 60, 128, 39, 60, 58, 255, 213, 234, 63, 0, 0, 0, 0, 0, 0, 228, 60, 163, 210, 90, 153, 159, 232, 234, 63, 0, 0, 0, 0, 0, 144, 44, 189, 103, 243, 34, 230, 76, 251, 234, 63, 0, 0, 0, 0, 0, 80, 22, 61, 144, 183, 141, 41, 7, 14, 235, 63, 0, 0, 0, 0, 0, 212, 47, 61, 169, 137, 154, 108, 206, 32, 235, 63, 0, 0, 0, 0, 0, 112, 18, 61, 75, 26, 79, 184, 162, 51, 235, 63, 0, 0, 0, 0, 0, 71, 77, 61, 231, 71, 183, 21, 132, 70, 235, 63, 0, 0, 0, 0, 0, 56, 56, 189, 58, 89, 229, 141, 114, 89, 235, 63, 0, 0, 0, 0, 0, 0, 152, 60, 106, 197, 241, 41, 110, 108, 235, 63, 0, 0, 0, 0, 0, 208, 10, 61, 80, 94, 251, 242, 118, 127, 235, 63, 0, 0, 0, 0, 0, 128, 222, 60, 178, 73, 39, 242, 140, 146, 235, 63, 0, 0, 0, 0, 0, 192, 4, 189, 3, 6, 161, 48, 176, 165, 235, 63, 0, 0, 0, 0, 0, 112, 13, 189, 102, 111, 154, 183, 224, 184, 235, 63, 0, 0, 0, 0, 0, 144, 13, 61, 255, 193, 75, 144, 30, 204, 235, 63, 0, 0, 0, 0, 0, 160, 2, 61, 111, 161, 243, 195, 105, 223, 235, 63, 0, 0, 0, 0, 0, 120, 31, 189, 184, 29, 215, 91, 194, 242, 235, 63, 0, 0, 0, 0, 0, 160, 16, 189, 233, 178, 65, 97, 40, 6, 236, 63, 0, 0, 0, 0, 0, 64, 17, 189, 224, 82, 133, 221, 155, 25, 236, 63, 0, 0, 0, 0, 0, 224, 11, 61, 238, 100, 250, 217, 28, 45, 236, 63, 0, 0, 0, 0, 0, 64, 9, 189, 47, 208, 255, 95, 171, 64, 236, 63, 0, 0, 0, 0, 0, 208, 14, 189, 21, 253, 250, 120, 71, 84, 236, 63, 0, 0, 0, 0, 0, 102, 57, 61, 203, 208, 87, 46, 241, 103, 236, 63, 0, 0, 0, 0, 0, 16, 26, 189, 182, 193, 136, 137, 168, 123, 236, 63, 0, 0, 0, 0, 128, 69, 88, 189, 51, 231, 6, 148, 109, 143, 236, 63, 0, 0, 0, 0, 0, 72, 26, 189, 223, 196, 81, 87, 64, 163, 236, 63, 0, 0, 0, 0, 0, 0, 203, 60, 148, 144, 239, 220, 32, 183, 236, 63, 0, 0, 0, 0, 0, 64, 1, 61, 137, 22, 109, 46, 15, 203, 236, 63, 0, 0, 0, 0, 0, 32, 240, 60, 18, 196, 93, 85, 11, 223, 236, 63, 0, 0, 0, 0, 0, 96, 243, 60, 59, 171, 91, 91, 21, 243, 236, 63, 0, 0, 0, 0, 0, 144, 6, 189, 188, 137, 7, 74, 45, 7, 237, 63, 0, 0, 0, 0, 0, 160, 9, 61, 250, 200, 8, 43, 83, 27, 237, 63, 0, 0, 0, 0, 0, 224, 21, 189, 133, 138, 13, 8, 135, 47, 237, 63, 0, 0, 0, 0, 0, 40, 29, 61, 3, 162, 202, 234, 200, 67, 237, 63, 0, 0, 0, 0, 0, 160, 1, 61, 145, 164, 251, 220, 24, 88, 237, 63, 0, 0, 0, 0, 0, 0, 223, 60, 161, 230, 98, 232, 118, 108, 237, 63, 0, 0, 0, 0, 0, 160, 3, 189, 78, 131, 201, 22, 227, 128, 237, 63, 0, 0, 0, 0, 0, 216, 12, 189, 144, 96, 255, 113, 93, 149, 237, 63, 0, 0, 0, 0, 0, 192, 244, 60, 174, 50, 219, 3, 230, 169, 237, 63, 0, 0, 0, 0, 0, 144, 255, 60, 37, 131, 58, 214, 124, 190, 237, 63, 0, 0, 0, 0, 0, 128, 233, 60, 69, 180, 1, 243, 33, 211, 237, 63, 0, 0, 0, 0, 0, 32, 245, 188, 191, 5, 28, 100, 213, 231, 237, 63, 0, 0, 0, 0, 0, 112, 29, 189, 236, 154, 123, 51, 151, 252, 237, 63, 0, 0, 0, 0, 0, 20, 22, 189, 94, 125, 25, 107, 103, 17, 238, 63, 0, 0, 0, 0, 0, 72, 11, 61, 231, 163, 245, 20, 70, 38, 238, 63, 0, 0, 0, 0, 0, 206, 64, 61, 92, 238, 22, 59, 51, 59, 238, 63, 0, 0, 0, 0, 0, 104, 12, 61, 180, 63, 139, 231, 46, 80, 238, 63, 0, 0, 0, 0, 0, 48, 9, 189, 104, 109, 103, 36, 57, 101, 238, 63, 0, 0, 0, 0, 0, 0, 229, 188, 68, 76, 199, 251, 81, 122, 238, 63, 0, 0, 0, 0, 0, 248, 7, 189, 38, 183, 205, 119, 121, 143, 238, 63, 0, 0, 0, 0, 0, 112, 243, 188, 232, 144, 164, 162, 175, 164, 238, 63, 0, 0, 0, 0, 0, 208, 229, 60, 228, 202, 124, 134, 244, 185, 238, 63, 0, 0, 0, 0, 0, 26, 22, 61, 13, 104, 142, 45, 72, 207, 238, 63, 0, 0, 0, 0, 0, 80, 245, 60, 20, 133, 24, 162, 170, 228, 238, 63, 0, 0, 0, 0, 0, 64, 198, 60, 19, 90, 97, 238, 27, 250, 238, 63, 0, 0, 0, 0, 0, 128, 238, 188, 6, 65, 182, 28, 156, 15, 239, 63, 0, 0, 0, 0, 0, 136, 250, 188, 99, 185, 107, 55, 43, 37, 239, 63, 0, 0, 0, 0, 0, 144, 44, 189, 117, 114, 221, 72, 201, 58, 239, 63, 0, 0, 0, 0, 0, 0, 170, 60, 36, 69, 110, 91, 118, 80, 239, 63, 0, 0, 0, 0, 0, 240, 244, 188, 253, 68, 136, 121, 50, 102, 239, 63, 0, 0, 0, 0, 0, 128, 202, 60, 56, 190, 156, 173, 253, 123, 239, 63, 0, 0, 0, 0, 0, 188, 250, 60, 130, 60, 36, 2, 216, 145, 239, 63, 0, 0, 0, 0, 0, 96, 212, 188, 142, 144, 158, 129, 193, 167, 239, 63, 0, 0, 0, 0, 0, 12, 11, 189, 17, 213, 146, 54, 186, 189, 239, 63, 0, 0, 0, 0, 0, 224, 192, 188, 148, 113, 143, 43, 194, 211, 239, 63, 0, 0, 0, 0, 128, 222, 16, 189, 238, 35, 42, 107, 217, 233, 239, 63, 0, 0, 0, 0, 0, 67, 238, 60, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 0, 0, 190, 188, 90, 250, 26, 11, 240, 63, 0, 0, 0, 0, 0, 64, 179, 188, 3, 51, 251, 169, 61, 22, 240, 63, 0, 0, 0, 0, 0, 23, 18, 189, 130, 2, 59, 20, 104, 33, 240, 63, 0, 0, 0, 0, 0, 64, 186, 60, 108, 128, 119, 62, 154, 44, 240, 63, 0, 0, 0, 0, 0, 152, 239, 60, 202, 187, 17, 46, 212, 55, 240, 63, 0, 0, 0, 0, 0, 64, 199, 188, 137, 127, 110, 232, 21, 67, 240, 63, 0, 0, 0, 0, 0, 48, 216, 60, 103, 84, 246, 114, 95, 78, 240, 63, 0, 0, 0, 0, 0, 63, 26, 189, 90, 133, 21, 211, 176, 89, 240, 63, 0, 0, 0, 0, 0, 132, 2, 189, 149, 31, 60, 14, 10, 101, 240, 63, 0, 0, 0, 0, 0, 96, 241, 60, 26, 247, 221, 41, 107, 112, 240, 63, 0, 0, 0, 0, 0, 36, 21, 61, 45, 168, 114, 43, 212, 123, 240, 63, 0, 0, 0, 0, 0, 160, 233, 188, 208, 155, 117, 24, 69, 135, 240, 63, 0, 0, 0, 0, 0, 64, 230, 60, 200, 7, 102, 246, 189, 146, 240, 63, 0, 0, 0, 0, 0, 120, 0, 189, 131, 243, 198, 202, 62, 158, 240, 63, 0, 0, 0, 0, 0, 0, 152, 188, 48, 57, 31, 155, 199, 169, 240, 63, 0, 0, 0, 0, 0, 160, 255, 60, 252, 136, 249, 108, 88, 181, 240, 63, 0, 0, 0, 0, 0, 200, 250, 188, 138, 108, 228, 69, 241, 192, 240, 63, 0, 0, 0, 0, 0, 192, 217, 60, 22, 72, 114, 43, 146, 204, 240, 63, 0, 0, 0, 0, 0, 32, 5, 61, 216, 93, 57, 35, 59, 216, 240, 63, 0, 0, 0, 0, 0, 208, 250, 188, 243, 209, 211, 50, 236, 227, 240, 63, 0, 0, 0, 0, 0, 172, 27, 61, 166, 169, 223, 95, 165, 239, 240, 63, 0, 0, 0, 0, 0, 232, 4, 189, 240, 210, 254, 175, 102, 251, 240, 63, 0, 0, 0, 0, 0, 48, 13, 189, 75, 35, 215, 40, 48, 7, 241, 63, 0, 0, 0, 0, 0, 80, 241, 60, 91, 91, 18, 208, 1, 19, 241, 63, 0, 0, 0, 0, 0, 0, 236, 60, 249, 42, 94, 171, 219, 30, 241, 63, 0, 0, 0, 0, 0, 188, 22, 61, 213, 49, 108, 192, 189, 42, 241, 63, 0, 0, 0, 0, 0, 64, 232, 60, 125, 4, 242, 20, 168, 54, 241, 63, 0, 0, 0, 0, 0, 208, 14, 189, 233, 45, 169, 174, 154, 66, 241, 63, 0, 0, 0, 0, 0, 224, 232, 60, 56, 49, 79, 147, 149, 78, 241, 63, 0, 0, 0, 0, 0, 64, 235, 60, 113, 142, 165, 200, 152, 90, 241, 63, 0, 0, 0, 0, 0, 48, 5, 61, 223, 195, 113, 84, 164, 102, 241, 63, 0, 0, 0, 0, 0, 56, 3, 61, 17, 82, 125, 60, 184, 114, 241, 63, 0, 0, 0, 0, 0, 212, 40, 61, 159, 187, 149, 134, 212, 126, 241, 63, 0, 0, 0, 0, 0, 208, 5, 189, 147, 141, 140, 56, 249, 138, 241, 63, 0, 0, 0, 0, 0, 136, 28, 189, 102, 93, 55, 88, 38, 151, 241, 63, 0, 0, 0, 0, 0, 240, 17, 61, 167, 203, 111, 235, 91, 163, 241, 63, 0, 0, 0, 0, 0, 72, 16, 61, 227, 135, 19, 248, 153, 175, 241, 63, 0, 0, 0, 0, 0, 57, 71, 189, 84, 93, 4, 132, 224, 187, 241, 63, 0, 0, 0, 0, 0, 228, 36, 61, 67, 28, 40, 149, 47, 200, 241, 63, 0, 0, 0, 0, 0, 32, 10, 189, 178, 185, 104, 49, 135, 212, 241, 63, 0, 0, 0, 0, 0, 128, 227, 60, 49, 64, 180, 94, 231, 224, 241, 63, 0, 0, 0, 0, 0, 192, 234, 60, 56, 217, 252, 34, 80, 237, 241, 63, 0, 0, 0, 0, 0, 144, 1, 61, 247, 205, 56, 132, 193, 249, 241, 63, 0, 0, 0, 0, 0, 120, 27, 189, 143, 141, 98, 136, 59, 6, 242, 63, 0, 0, 0, 0, 0, 148, 45, 61, 30, 168, 120, 53, 190, 18, 242, 63, 0, 0, 0, 0, 0, 0, 216, 60, 65, 221, 125, 145, 73, 31, 242, 63, 0, 0, 0, 0, 0, 52, 43, 61, 35, 19, 121, 162, 221, 43, 242, 63, 0, 0, 0, 0, 0, 248, 25, 61, 231, 97, 117, 110, 122, 56, 242, 63, 0, 0, 0, 0, 0, 200, 25, 189, 39, 20, 130, 251, 31, 69, 242, 63, 0, 0, 0, 0, 0, 48, 2, 61, 2, 166, 178, 79, 206, 81, 242, 63, 0, 0, 0, 0, 0, 72, 19, 189, 176, 206, 30, 113, 133, 94, 242, 63, 0, 0, 0, 0, 0, 112, 18, 61, 22, 125, 226, 101, 69, 107, 242, 63, 0, 0, 0, 0, 0, 208, 17, 61, 15, 224, 29, 52, 14, 120, 242, 63, 0, 0, 0, 0, 0, 238, 49, 61, 62, 99, 245, 225, 223, 132, 242, 63, 0, 0, 0, 0, 0, 192, 20, 189, 48, 187, 145, 117, 186, 145, 242, 63, 0, 0, 0, 0, 0, 216, 19, 189, 9, 223, 31, 245, 157, 158, 242, 63, 0, 0, 0, 0, 0, 176, 8, 61, 155, 14, 209, 102, 138, 171, 242, 63, 0, 0, 0, 0, 0, 124, 34, 189, 58, 218, 218, 208, 127, 184, 242, 63, 0, 0, 0, 0, 0, 52, 42, 61, 249, 26, 119, 57, 126, 197, 242, 63, 0, 0, 0, 0, 0, 128, 16, 189, 217, 2, 228, 166, 133, 210, 242, 63, 0, 0, 0, 0, 0, 208, 14, 189, 121, 21, 100, 31, 150, 223, 242, 63, 0, 0, 0, 0, 0, 32, 244, 188, 207, 46, 62, 169, 175, 236, 242, 63, 0, 0, 0, 0, 0, 152, 36, 189, 34, 136, 189, 74, 210, 249, 242, 63, 0, 0, 0, 0, 0, 48, 22, 189, 37, 182, 49, 10, 254, 6, 243, 63, 0, 0, 0, 0, 0, 54, 50, 189, 11, 165, 238, 237, 50, 20, 243, 63, 0, 0, 0, 0, 128, 223, 112, 189, 184, 215, 76, 252, 112, 33, 243, 63, 0, 0, 0, 0, 0, 72, 34, 189, 162, 233, 168, 59, 184, 46, 243, 63, 0, 0, 0, 0, 0, 152, 37, 189, 102, 23, 100, 178, 8, 60, 243, 63, 0, 0, 0, 0, 0, 208, 30, 61, 39, 250, 227, 102, 98, 73, 243, 63, 0, 0, 0, 0, 0, 0, 220, 188, 15, 159, 146, 95, 197, 86, 243, 63, 0, 0, 0, 0, 0, 216, 48, 189, 185, 136, 222, 162, 49, 100, 243, 63, 0, 0, 0, 0, 0, 200, 34, 61, 57, 170, 58, 55, 167, 113, 243, 63, 0, 0, 0, 0, 0, 96, 32, 61, 254, 116, 30, 35, 38, 127, 243, 63, 0, 0, 0, 0, 0, 96, 22, 189, 56, 216, 5, 109, 174, 140, 243, 63, 0, 0, 0, 0, 0, 224, 10, 189, 195, 62, 113, 27, 64, 154, 243, 63, 0, 0, 0, 0, 0, 114, 68, 189, 32, 160, 229, 52, 219, 167, 243, 63, 0, 0, 0, 0, 0, 32, 8, 61, 149, 110, 236, 191, 127, 181, 243, 63, 0, 0, 0, 0, 0, 128, 62, 61, 242, 168, 19, 195, 45, 195, 243, 63, 0, 0, 0, 0, 0, 128, 239, 60, 34, 225, 237, 68, 229, 208, 243, 63, 0, 0, 0, 0, 0, 160, 23, 189, 187, 52, 18, 76, 166, 222, 243, 63, 0, 0, 0, 0, 0, 48, 38, 61, 204, 78, 28, 223, 112, 236, 243, 63, 0, 0, 0, 0, 0, 166, 72, 189, 140, 126, 172, 4, 69, 250, 243, 63, 0, 0, 0, 0, 0, 220, 60, 189, 187, 160, 103, 195, 34, 8, 244, 63, 0, 0, 0, 0, 0, 184, 37, 61, 149, 46, 247, 33, 10, 22, 244, 63, 0, 0, 0, 0, 0, 192, 30, 61, 70, 70, 9, 39, 251, 35, 244, 63, 0, 0, 0, 0, 0, 96, 19, 189, 32, 169, 80, 217, 245, 49, 244, 63, 0, 0, 0, 0, 0, 152, 35, 61, 235, 185, 132, 63, 250, 63, 244, 63, 0, 0, 0, 0, 0, 0, 250, 60, 25, 137, 97, 96, 8, 78, 244, 63, 0, 0, 0, 0, 0, 192, 246, 188, 1, 210, 167, 66, 32, 92, 244, 63, 0, 0, 0, 0, 0, 192, 11, 189, 22, 0, 29, 237, 65, 106, 244, 63, 0, 0, 0, 0, 0, 128, 18, 189, 38, 51, 139, 102, 109, 120, 244, 63, 0, 0, 0, 0, 0, 224, 48, 61, 0, 60, 193, 181, 162, 134, 244, 63, 0, 0, 0, 0, 0, 64, 45, 189, 4, 175, 146, 225, 225, 148, 244, 63, 0, 0, 0, 0, 0, 32, 12, 61, 114, 211, 215, 240, 42, 163, 244, 63, 0, 0, 0, 0, 0, 80, 30, 189, 1, 184, 109, 234, 125, 177, 244, 63, 0, 0, 0, 0, 0, 128, 7, 61, 225, 41, 54, 213, 218, 191, 244, 63, 0, 0, 0, 0, 0, 128, 19, 189, 50, 193, 23, 184, 65, 206, 244, 63, 0, 0, 0, 0, 0, 128, 0, 61, 219, 221, 253, 153, 178, 220, 244, 63, 0, 0, 0, 0, 0, 112, 44, 61, 150, 171, 216, 129, 45, 235, 244, 63, 0, 0, 0, 0, 0, 224, 28, 189, 2, 45, 157, 118, 178, 249, 244, 63, 0, 0, 0, 0, 0, 32, 25, 61, 193, 49, 69, 127, 65, 8, 245, 63, 0, 0, 0, 0, 0, 192, 8, 189, 42, 102, 207, 162, 218, 22, 245, 63, 0, 0, 0, 0, 0, 0, 250, 188, 234, 81, 63, 232, 125, 37, 245, 63, 0, 0, 0, 0, 0, 8, 74, 61, 218, 78, 157, 86, 43, 52, 245, 63, 0, 0, 0, 0, 0, 216, 38, 189, 26, 172, 246, 244, 226, 66, 245, 63, 0, 0, 0, 0, 0, 68, 50, 189, 219, 148, 93, 202, 164, 81, 245, 63, 0, 0, 0, 0, 0, 60, 72, 61, 107, 17, 233, 221, 112, 96, 245, 63, 0, 0, 0, 0, 0, 176, 36, 61, 222, 41, 181, 54, 71, 111, 245, 63, 0, 0, 0, 0, 0, 90, 65, 61, 14, 196, 226, 219, 39, 126, 245, 63, 0, 0, 0, 0, 0, 224, 41, 189, 111, 199, 151, 212, 18, 141, 245, 63, 0, 0, 0, 0, 0, 8, 35, 189, 76, 11, 255, 39, 8, 156, 245, 63, 0, 0, 0, 0, 0, 236, 77, 61, 39, 84, 72, 221, 7, 171, 245, 63, 0, 0, 0, 0, 0, 0, 196, 188, 244, 122, 168, 251, 17, 186, 245, 63, 0, 0, 0, 0, 0, 8, 48, 61, 11, 70, 89, 138, 38, 201, 245, 63, 0, 0, 0, 0, 0, 200, 38, 189, 63, 142, 153, 144, 69, 216, 245, 63, 0, 0, 0, 0, 0, 154, 70, 61, 225, 32, 173, 21, 111, 231, 245, 63, 0, 0, 0, 0, 0, 64, 27, 189, 202, 235, 220, 32, 163, 246, 245, 63, 0, 0, 0, 0, 0, 112, 23, 61, 184, 220, 118, 185, 225, 5, 246, 63, 0, 0, 0, 0, 0, 248, 38, 61, 21, 247, 205, 230, 42, 21, 246, 63, 0, 0, 0, 0, 0, 0, 1, 61, 49, 85, 58, 176, 126, 36, 246, 63, 0, 0, 0, 0, 0, 208, 21, 189, 181, 41, 25, 29, 221, 51, 246, 63, 0, 0, 0, 0, 0, 208, 18, 189, 19, 195, 204, 52, 70, 67, 246, 63, 0, 0, 0, 0, 0, 128, 234, 188, 250, 142, 188, 254, 185, 82, 246, 63, 0, 0, 0, 0, 0, 96, 40, 189, 151, 51, 85, 130, 56, 98, 246, 63, 0, 0, 0, 0, 0, 254, 113, 61, 142, 50, 8, 199, 193, 113, 246, 63, 0, 0, 0, 0, 0, 32, 55, 189, 126, 169, 76, 212, 85, 129, 246, 63, 0, 0, 0, 0, 0, 128, 230, 60, 113, 148, 158, 177, 244, 144, 246, 63, 0, 0, 0, 0, 0, 120, 41, 189, 0, 0, 0, 0, 0, 0, 0, 0, 36, 92, 0, 0, 10, 170, 0, 0, 116, 92, 0, 0, 35, 170, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 72, 79, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63, 68, 172, 0, 0, 2, 0, 0, 0, 0, 4, 0, 0, 160, 51, 0, 0, 176, 62, 0, 0, 160, 51, 0, 0, 240, 62, 0, 0, 176, 62, 0, 0, 160, 51, 0, 0, 248, 62, 0, 0, 240, 62, 0, 0, 248, 62, 0, 0, 176, 51, 0, 0, 192, 51, 0, 0, 136, 51, 0, 0, 248, 62, 0, 0, 192, 62, 0, 0, 136, 51, 0, 0, 248, 62, 0, 0, 240, 62, 0, 0, 248, 51, 0, 0, 176, 62, 0, 0, 248, 51, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 248, 51, 0, 0, 248, 62, 0, 0, 24, 63, 0, 0, 248, 62, 0, 0, 8, 52, 0, 0, 192, 51, 0, 0, 224, 51, 0, 0, 248, 62, 0, 0, 192, 62, 0, 0, 224, 51, 0, 0, 248, 62, 0, 0, 24, 63, 0, 0, 72, 52, 0, 0, 176, 62 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);
allocate([ 72, 52, 0, 0, 200, 62, 0, 0, 176, 62, 0, 0, 72, 52, 0, 0, 248, 62, 0, 0, 200, 62, 0, 0, 248, 62, 0, 0, 88, 52, 0, 0, 192, 51, 0, 0, 48, 52, 0, 0, 248, 62, 0, 0, 192, 62, 0, 0, 48, 52, 0, 0, 248, 62, 0, 0, 200, 62, 0, 0, 152, 52, 0, 0, 176, 62, 0, 0, 152, 52, 0, 0, 16, 63, 0, 0, 176, 62, 0, 0, 152, 52, 0, 0, 248, 62, 0, 0, 16, 63, 0, 0, 248, 62, 0, 0, 168, 52, 0, 0, 192, 51, 0, 0, 128, 52, 0, 0, 248, 62, 0, 0, 192, 62, 0, 0, 128, 52, 0, 0, 248, 62, 0, 0, 16, 63, 0, 0, 192, 52, 0, 0, 176, 62, 0, 0, 224, 51, 0, 0, 176, 62, 0, 0, 128, 52, 0, 0, 232, 52, 0, 0, 176, 62, 0, 0, 240, 62, 0, 0, 240, 62, 0, 0, 240, 62, 0, 0, 0, 0, 0, 0, 48, 53, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 64, 53, 0, 0, 0, 0, 0, 0, 72, 53, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 24, 63, 0, 0, 16, 53, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 16, 53, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 16, 53, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 16, 53, 0, 0, 176, 62, 0, 0, 16, 53, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 128, 53, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 3, 0, 0, 0, 12, 0, 0, 0, 144, 53, 0, 0, 0, 0, 0, 0, 152, 53, 0, 0, 5, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 24, 63, 0, 0, 96, 53, 0, 0, 240, 62, 0, 0, 224, 51, 0, 0, 176, 62, 0, 0, 96, 53, 0, 0, 240, 62, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 208, 53, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 4, 0, 0, 0, 19, 0, 0, 0, 224, 53, 0, 0, 0, 0, 0, 0, 232, 53, 0, 0, 5, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 2, 0, 0, 0, 22, 0, 0, 0, 24, 63, 0, 0, 176, 53, 0, 0, 24, 63, 0, 0, 240, 62, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 176, 53, 0, 0, 24, 63, 0, 0, 240, 62, 0, 0, 24, 63, 0, 0, 240, 62, 0, 0, 0, 0, 0, 0, 32, 54, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 5, 0, 0, 0, 26, 0, 0, 0, 48, 54, 0, 0, 0, 0, 0, 0, 56, 54, 0, 0, 5, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 2, 0, 0, 0, 29, 0, 0, 0, 24, 63, 0, 0, 0, 54, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 54, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 112, 54, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 6, 0, 0, 0, 33, 0, 0, 0, 128, 54, 0, 0, 0, 0, 0, 0, 136, 54, 0, 0, 5, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 2, 0, 0, 0, 36, 0, 0, 0, 176, 62, 0, 0, 80, 54, 0, 0, 24, 63, 0, 0, 224, 51, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 80, 54, 0, 0, 24, 63, 0, 0, 224, 51, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 80, 54, 0, 0, 24, 63, 0, 0, 224, 51, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 192, 54, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 7, 0, 0, 0, 40, 0, 0, 0, 208, 54, 0, 0, 0, 0, 0, 0, 216, 54, 0, 0, 5, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 2, 0, 0, 0, 43, 0, 0, 0, 176, 62, 0, 0, 160, 54, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 160, 54, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 176, 54, 0, 0, 0, 0, 0, 0, 16, 55, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 8, 0, 0, 0, 47, 0, 0, 0, 32, 55, 0, 0, 0, 0, 0, 0, 40, 55, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 2, 0, 0, 0, 51, 0, 0, 0, 176, 62, 0, 0, 240, 54, 0, 0, 176, 62, 0, 0, 240, 54, 0, 0, 224, 51, 0, 0, 176, 62, 0, 0, 240, 54, 0, 0, 224, 51, 0, 0, 240, 62, 0, 0, 192, 62, 0, 0, 240, 54, 0, 0, 24, 63, 0, 0, 240, 54, 0, 0, 24, 63, 0, 0, 240, 54, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 240, 54, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 96, 55, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 9, 0, 0, 0, 55, 0, 0, 0, 112, 55, 0, 0, 0, 0, 0, 0, 120, 55, 0, 0, 5, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 2, 0, 0, 0, 58, 0, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 176, 55, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 10, 0, 0, 0, 62, 0, 0, 0, 192, 55, 0, 0, 0, 0, 0, 0, 200, 55, 0, 0, 5, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 2, 0, 0, 0, 65, 0, 0, 0, 24, 63, 0, 0, 144, 55, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 144, 55, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 144, 55, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 144, 55, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 11, 0, 0, 0, 69, 0, 0, 0, 16, 56, 0, 0, 0, 0, 0, 0, 24, 56, 0, 0, 5, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 2, 0, 0, 0, 72, 0, 0, 0, 24, 63, 0, 0, 224, 55, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 63, 0, 0, 240, 62, 0, 0, 24, 63, 0, 0, 224, 55, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 63, 0, 0, 240, 62, 0, 0, 24, 63, 0, 0, 224, 55, 0, 0, 24, 63, 0, 0, 240, 62, 0, 0, 176, 62, 0, 0, 224, 55, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 80, 56, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 12, 0, 0, 0, 76, 0, 0, 0, 96, 56, 0, 0, 0, 0, 0, 0, 104, 56, 0, 0, 5, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 2, 0, 0, 0, 79, 0, 0, 0, 24, 63, 0, 0, 48, 56, 0, 0, 240, 62, 0, 0, 0, 0, 0, 0, 160, 56, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 13, 0, 0, 0, 83, 0, 0, 0, 176, 56, 0, 0, 0, 0, 0, 0, 184, 56, 0, 0, 5, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 2, 0, 0, 0, 86, 0, 0, 0, 24, 63, 0, 0, 128, 56, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 128, 56, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 240, 56, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 14, 0, 0, 0, 90, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 8, 57, 0, 0, 5, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 2, 0, 0, 0, 93, 0, 0, 0, 24, 63, 0, 0, 208, 56, 0, 0, 24, 63, 0, 0, 248, 62, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 64, 57, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 15, 0, 0, 0, 97, 0, 0, 0, 80, 57, 0, 0, 0, 0, 0, 0, 88, 57, 0, 0, 5, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 2, 0, 0, 0, 100, 0, 0, 0, 24, 63, 0, 0, 32, 57, 0, 0, 24, 63, 0, 0, 248, 62, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 144, 57, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 16, 0, 0, 0, 104, 0, 0, 0, 160, 57, 0, 0, 0, 0, 0, 0, 168, 57, 0, 0, 5, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 2, 0, 0, 0, 107, 0, 0, 0, 24, 63, 0, 0, 112, 57, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 224, 57, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 17, 0, 0, 0, 111, 0, 0, 0, 240, 57, 0, 0, 0, 0, 0, 0, 248, 57, 0, 0, 5, 0, 0, 0, 112, 0, 0, 0, 113, 0, 0, 0, 2, 0, 0, 0, 114, 0, 0, 0, 184, 57, 0, 0, 192, 57, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 192, 57, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 48, 58, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 18, 0, 0, 0, 118, 0, 0, 0, 64, 58, 0, 0, 0, 0, 0, 0, 72, 58, 0, 0, 5, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 2, 0, 0, 0, 121, 0, 0, 0, 24, 63, 0, 0, 16, 58, 0, 0, 176, 62, 0, 0, 16, 58, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 16, 58, 0, 0, 0, 0, 0, 0, 128, 58, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 19, 0, 0, 0, 125, 0, 0, 0, 144, 58, 0, 0, 0, 0, 0, 0, 152, 58, 0, 0, 5, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 2, 0, 0, 0, 128, 0, 0, 0, 24, 63, 0, 0, 96, 58, 0, 0, 176, 62, 0, 0, 96, 58, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 96, 58, 0, 0, 0, 0, 0, 0, 208, 58, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 131, 0, 0, 0, 20, 0, 0, 0, 132, 0, 0, 0, 224, 58, 0, 0, 0, 0, 0, 0, 232, 58, 0, 0, 5, 0, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 2, 0, 0, 0, 135, 0, 0, 0, 24, 63, 0, 0, 176, 58, 0, 0, 176, 62, 0, 0, 176, 58, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 176, 58, 0, 0, 0, 0, 0, 0, 32, 59, 0, 0, 136, 0, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 21, 0, 0, 0, 139, 0, 0, 0, 48, 59, 0, 0, 0, 0, 0, 0, 56, 59, 0, 0, 5, 0, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 2, 0, 0, 0, 142, 0, 0, 0, 176, 62, 0, 0, 0, 59, 0, 0, 176, 62, 0, 0, 0, 59, 0, 0, 24, 63, 0, 0, 176, 62, 0, 0, 0, 59, 0, 0, 240, 62, 0, 0, 192, 62, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 112, 59, 0, 0, 176, 62, 0, 0, 80, 59, 0, 0, 240, 62, 0, 0, 240, 62, 0, 0, 240, 62, 0, 0, 192, 62, 0, 0, 80, 59, 0, 0, 16, 63, 0, 0, 16, 63, 0, 0, 80, 59, 0, 0, 16, 63, 0, 0, 80, 59, 0, 0, 240, 62, 0, 0, 160, 59, 0, 0, 176, 62, 0, 0, 128, 59, 0, 0, 240, 62, 0, 0, 240, 62, 0, 0, 240, 62, 0, 0, 16, 63, 0, 0, 128, 59, 0, 0, 128, 52, 0, 0, 128, 52, 0, 0, 208, 59, 0, 0, 176, 62, 0, 0, 176, 59, 0, 0, 16, 63, 0, 0, 240, 62, 0, 0, 240, 62, 0, 0, 176, 62, 0, 0, 176, 59, 0, 0, 128, 52, 0, 0, 16, 63, 0, 0, 192, 59, 0, 0, 240, 62, 0, 0, 240, 62, 0, 0, 192, 59, 0, 0, 240, 62, 0, 0, 0, 0, 0, 0, 216, 59, 0, 0, 5, 0, 0, 0, 143, 0, 0, 0, 144, 0, 0, 0, 2, 0, 0, 0, 145, 0, 0, 0, 0, 0, 0, 0, 232, 59, 0, 0, 146, 0, 0, 0, 147, 0, 0, 0, 148, 0, 0, 0, 22, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 248, 59, 0, 0, 150, 0, 0, 0, 151, 0, 0, 0, 152, 0, 0, 0, 2, 0, 0, 0, 153, 0, 0, 0, 0, 0, 0, 0, 8, 60, 0, 0, 154, 0, 0, 0, 155, 0, 0, 0, 156, 0, 0, 0, 23, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 24, 60, 0, 0, 158, 0, 0, 0, 159, 0, 0, 0, 160, 0, 0, 0, 2, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 40, 60, 0, 0, 162, 0, 0, 0, 163, 0, 0, 0, 164, 0, 0, 0, 24, 0, 0, 0, 165, 0, 0, 0, 96, 60, 0, 0, 176, 62, 0, 0, 64, 60, 0, 0, 248, 62, 0, 0, 248, 62, 0, 0, 248, 62, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 248, 62, 0, 0, 176, 62, 0, 0, 64, 60, 0, 0, 128, 52, 0, 0, 224, 51, 0, 0, 0, 0, 0, 0, 104, 60, 0, 0, 166, 0, 0, 0, 167, 0, 0, 0, 168, 0, 0, 0, 2, 0, 0, 0, 169, 0, 0, 0, 0, 0, 0, 0, 120, 60, 0, 0, 170, 0, 0, 0, 171, 0, 0, 0, 172, 0, 0, 0, 25, 0, 0, 0, 173, 0, 0, 0, 176, 60, 0, 0, 176, 62, 0, 0, 144, 60, 0, 0, 240, 54, 0, 0, 24, 63, 0, 0, 144, 60, 0, 0, 176, 62, 0, 0, 144, 60, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 144, 60, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 240, 62, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 144, 60, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 240, 62, 0, 0, 224, 60, 0, 0, 176, 62, 0, 0, 192, 60, 0, 0, 240, 54, 0, 0, 24, 63, 0, 0, 192, 60, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 240, 62, 0, 0, 24, 63, 0, 0, 16, 61, 0, 0, 176, 62, 0, 0, 240, 60, 0, 0, 240, 54, 0, 0, 24, 63, 0, 0, 240, 60, 0, 0, 176, 62, 0, 0, 240, 60, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 240, 60, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 24, 63, 0, 0, 240, 62, 0, 0, 24, 63, 0, 0, 0, 0, 0, 0, 24, 61, 0, 0, 1, 0, 0, 0, 174, 0, 0, 0, 175, 0, 0, 0, 0, 0, 0, 0, 48, 61, 0, 0, 176, 0, 0, 0, 177, 0, 0, 0, 178, 0, 0, 0, 2, 0, 0, 0, 179, 0, 0, 0, 0, 0, 0, 0, 64, 61, 0, 0, 180, 0, 0, 0, 181, 0, 0, 0, 182, 0, 0, 0, 26, 0, 0, 0, 183, 0, 0, 0, 0, 0, 0, 0, 80, 61, 0, 0, 184, 0, 0, 0, 185, 0, 0, 0, 186, 0, 0, 0, 2, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 96, 61, 0, 0, 188, 0, 0, 0, 189, 0, 0, 0, 190, 0, 0, 0, 27, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 0, 112, 61, 0, 0, 192, 0, 0, 0, 193, 0, 0, 0, 194, 0, 0, 0, 2, 0, 0, 0, 195, 0, 0, 0, 0, 0, 0, 0, 128, 61, 0, 0, 196, 0, 0, 0, 197, 0, 0, 0, 198, 0, 0, 0, 28, 0, 0, 0, 199, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 64, 62, 0, 0, 200, 0, 0, 0, 201, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 62, 0, 0, 202, 0, 0, 0, 203, 0, 0, 0, 204, 0, 0, 0, 205, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 112, 62, 0, 0, 202, 0, 0, 0, 206, 0, 0, 0, 204, 0, 0, 0, 205, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 32, 63, 0, 0, 202, 0, 0, 0, 207, 0, 0, 0, 204, 0, 0, 0, 205, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 48, 63, 0, 0, 202, 0, 0, 0, 208, 0, 0, 0, 204, 0, 0, 0, 205, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 144, 62, 0, 0, 202, 0, 0, 0, 209, 0, 0, 0, 204, 0, 0, 0, 205, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 92, 0, 0, 104, 93, 0, 0, 104, 93, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 244, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 236, 163, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 101, 99, 116, 111, 114, 73, 110, 116, 0, 86, 101, 99, 116, 111, 114, 68, 111, 117, 98, 108, 101, 0, 86, 101, 99, 116, 111, 114, 67, 104, 97, 114, 0, 86, 101, 99, 116, 111, 114, 70, 108, 111, 97, 116, 0, 118, 101, 99, 116, 111, 114, 84, 111, 111, 108, 115, 0, 99, 108, 101, 97, 114, 86, 101, 99, 116, 111, 114, 68, 98, 108, 0, 99, 108, 101, 97, 114, 86, 101, 99, 116, 111, 114, 70, 108, 111, 97, 116, 0, 109, 97, 120, 105, 83, 101, 116, 116, 105, 110, 103, 115, 0, 115, 97, 109, 112, 108, 101, 82, 97, 116, 101, 0, 99, 104, 97, 110, 110, 101, 108, 115, 0, 98, 117, 102, 102, 101, 114, 83, 105, 122, 101, 0, 109, 97, 120, 105, 79, 115, 99, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 79, 115, 99, 62, 0, 115, 105, 110, 101, 119, 97, 118, 101, 0, 99, 111, 115, 119, 97, 118, 101, 0, 112, 104, 97, 115, 111, 114, 0, 115, 97, 119, 0, 116, 114, 105, 97, 110, 103, 108, 101, 0, 115, 113, 117, 97, 114, 101, 0, 112, 117, 108, 115, 101, 0, 110, 111, 105, 115, 101, 0, 115, 105, 110, 101, 98, 117, 102, 0, 115, 105, 110, 101, 98, 117, 102, 52, 0, 115, 97, 119, 110, 0, 114, 101, 99, 116, 0, 112, 104, 97, 115, 101, 82, 101, 115, 101, 116, 0, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 62, 0, 108, 105, 110, 101, 0, 116, 114, 105, 103, 103, 101, 114, 0, 97, 109, 112, 108, 105, 116, 117, 100, 101, 0, 118, 97, 108, 105, 110, 100, 101, 120, 0, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 62, 0, 100, 108, 0, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 62, 0, 108, 111, 114, 101, 115, 0, 104, 105, 114, 101, 115, 0, 98, 97, 110, 100, 112, 97, 115, 115, 0, 108, 111, 112, 97, 115, 115, 0, 104, 105, 112, 97, 115, 115, 0, 99, 117, 116, 111, 102, 102, 0, 114, 101, 115, 111, 110, 97, 110, 99, 101, 0, 109, 97, 120, 105, 77, 105, 120, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 77, 105, 120, 62, 0, 115, 116, 101, 114, 101, 111, 0, 113, 117, 97, 100, 0, 97, 109, 98, 105, 115, 111, 110, 105, 99, 0, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 60, 100, 111, 117, 98, 108, 101, 62, 62, 0, 105, 110, 105, 116, 0, 97, 100, 100, 83, 97, 109, 112, 108, 101, 0, 118, 97, 108, 117, 101, 0, 97, 108, 112, 104, 97, 0, 97, 108, 112, 104, 97, 82, 101, 99, 105, 112, 114, 111, 99, 97, 108, 0, 118, 97, 108, 0, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 62, 0, 103, 101, 116, 76, 101, 110, 103, 116, 104, 0, 105, 115, 82, 101, 97, 100, 121, 0, 112, 108, 97, 121, 79, 110, 99, 101, 0, 112, 108, 97, 121, 52, 0, 99, 108, 101, 97, 114, 0, 109, 97, 120, 105, 77, 97, 112, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 77, 97, 112, 62, 0, 108, 105, 110, 108, 105, 110, 0, 108, 105, 110, 101, 120, 112, 0, 101, 120, 112, 108, 105, 110, 0, 99, 108, 97, 109, 112, 0, 109, 97, 120, 105, 68, 121, 110, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 68, 121, 110, 62, 0, 103, 97, 116, 101, 0, 99, 111, 109, 112, 114, 101, 115, 115, 111, 114, 0, 99, 111, 109, 112, 114, 101, 115, 115, 0, 115, 101, 116, 65, 116, 116, 97, 99, 107, 0, 115, 101, 116, 82, 101, 108, 101, 97, 115, 101, 0, 115, 101, 116, 84, 104, 114, 101, 115, 104, 111, 108, 100, 0, 115, 101, 116, 82, 97, 116, 105, 111, 0, 109, 97, 120, 105, 69, 110, 118, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 69, 110, 118, 62, 0, 97, 114, 0, 97, 100, 115, 114, 0, 115, 101, 116, 68, 101, 99, 97, 121, 0, 115, 101, 116, 83, 117, 115, 116, 97, 105, 110, 0, 99, 111, 110, 118, 101, 114, 116, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 99, 111, 110, 118, 101, 114, 116, 62, 0, 109, 116, 111, 102, 0, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114, 116, 105, 111, 110, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114, 116, 105, 111, 110, 62, 0, 102, 97, 115, 116, 65, 116, 97, 110, 0, 97, 116, 97, 110, 68, 105, 115, 116, 0, 102, 97, 115, 116, 65, 116, 97, 110, 68, 105, 115, 116, 0, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 62, 0, 102, 108, 97, 110, 103, 101, 0, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 62, 0, 99, 104, 111, 114, 117, 115, 0, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 62, 0, 109, 97, 120, 105, 83, 86, 70, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 83, 86, 70, 62, 0, 115, 101, 116, 67, 117, 116, 111, 102, 102, 0, 115, 101, 116, 82, 101, 115, 111, 110, 97, 110, 99, 101, 0, 109, 97, 120, 105, 75, 105, 99, 107, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 75, 105, 99, 107, 62, 0, 115, 101, 116, 80, 105, 116, 99, 104, 0, 109, 97, 120, 105, 83, 110, 97, 114, 101, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 83, 110, 97, 114, 101, 62, 0, 109, 97, 120, 105, 72, 97, 116, 115, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 72, 97, 116, 115, 62, 0, 109, 97, 120, 105, 67, 108, 111, 99, 107, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 67, 108, 111, 99, 107, 62, 0, 116, 105, 99, 107, 101, 114, 0, 115, 101, 116, 84, 101, 109, 112, 111, 0, 115, 101, 116, 84, 105, 99, 107, 115, 80, 101, 114, 66, 101, 97, 116, 0, 105, 115, 84, 105, 99, 107, 0, 99, 117, 114, 114, 101, 110, 116, 67, 111, 117, 110, 116, 0, 112, 108, 97, 121, 72, 101, 97, 100, 0, 98, 112, 115, 0, 98, 112, 109, 0, 116, 105, 99, 107, 0, 116, 105, 99, 107, 115, 0, 102, 114, 101, 101, 105, 110, 103, 32, 83, 97, 109, 112, 108, 101, 68, 97, 116, 97, 0, 112, 117, 115, 104, 95, 98, 97, 99, 107, 0, 114, 101, 115, 105, 122, 101, 0, 115, 105, 122, 101, 0, 103, 101, 116, 0, 115, 101, 116, 0, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 105, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 105, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 95, 95, 118, 101, 99, 116, 111, 114, 95, 98, 97, 115, 101, 73, 105, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 105, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 118, 101, 99, 116, 111, 114, 95, 98, 97, 115, 101, 95, 99, 111, 109, 109, 111, 110, 73, 76, 98, 49, 69, 69, 69, 0, 80, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 105, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 105, 69, 69, 69, 69, 0, 80, 75, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 105, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 105, 69, 69, 69, 69, 0, 105, 105, 0, 118, 0, 118, 105, 0, 118, 105, 105, 105, 0, 118, 105, 105, 105, 105, 0, 105, 105, 105, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 51, 118, 97, 108, 69, 0, 105, 105, 105, 105, 0, 105, 105, 105, 105, 105, 0, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 100, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 100, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 95, 95, 118, 101, 99, 116, 111, 114, 95, 98, 97, 115, 101, 73, 100, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 100, 69, 69, 69, 69, 0, 80, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 100, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 100, 69, 69, 69, 69, 0, 80, 75, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 100, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 100, 69, 69, 69, 69, 0, 118, 105, 105, 100, 0, 118, 105, 105, 105, 100, 0, 105, 105, 105, 105, 100, 0, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 99, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 95, 95, 118, 101, 99, 116, 111, 114, 95, 98, 97, 115, 101, 73, 99, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 80, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 99, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 80, 75, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 99, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 102, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 102, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 95, 95, 118, 101, 99, 116, 111, 114, 95, 98, 97, 115, 101, 73, 102, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 102, 69, 69, 69, 69, 0, 80, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 102, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 102, 69, 69, 69, 69, 0, 80, 75, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 102, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 102, 69, 69, 69, 69, 0, 118, 105, 105, 102, 0, 118, 105, 105, 105, 102, 0, 105, 105, 105, 105, 102, 0, 49, 49, 118, 101, 99, 116, 111, 114, 84, 111, 111, 108, 115, 0, 80, 49, 49, 118, 101, 99, 116, 111, 114, 84, 111, 111, 108, 115, 0, 80, 75, 49, 49, 118, 101, 99, 116, 111, 114, 84, 111, 111, 108, 115, 0, 118, 105, 105, 0, 49, 50, 109, 97, 120, 105, 83, 101, 116, 116, 105, 110, 103, 115, 0, 80, 49, 50, 109, 97, 120, 105, 83, 101, 116, 116, 105, 110, 103, 115, 0, 80, 75, 49, 50, 109, 97, 120, 105, 83, 101, 116, 116, 105, 110, 103, 115, 0, 55, 109, 97, 120, 105, 79, 115, 99, 0, 80, 55, 109, 97, 120, 105, 79, 115, 99, 0, 80, 75, 55, 109, 97, 120, 105, 79, 115, 99, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 55, 109, 97, 120, 105, 79, 115, 99, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 79, 115, 99, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 79, 115, 99, 69, 69, 0, 105, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 55, 109, 97, 120, 105, 79, 115, 99, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 100, 105, 105, 100, 0, 100, 105, 105, 100, 100, 100, 0, 100, 105, 105, 100, 100, 0, 100, 105, 105, 0, 49, 50, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 0, 80, 49, 50, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 0, 80, 75, 49, 50, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 50, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 50, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 50, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 50, 109, 97, 120, 105, 69, 110, 118, 101, 108, 111, 112, 101, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 100, 105, 105, 105, 105, 0, 49, 51, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 0, 80, 49, 51, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 0, 80, 75, 49, 51, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 51, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 51, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 51, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 51, 109, 97, 120, 105, 68, 101, 108, 97, 121, 108, 105, 110, 101, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 100, 105, 105, 100, 105, 100, 0, 100, 105, 105, 100, 105, 100, 105, 0, 49, 48, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 0, 80, 49, 48, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 0, 80, 75, 49, 48, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 48, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 48, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 48, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 48, 109, 97, 120, 105, 70, 105, 108, 116, 101, 114, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 55, 109, 97, 120, 105, 77, 105, 120, 0, 80, 55, 109, 97, 120, 105, 77, 105, 120, 0, 80, 75, 55, 109, 97, 120, 105, 77, 105, 120, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 55, 109, 97, 120, 105, 77, 105, 120, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 77, 105, 120, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 77, 105, 120, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 55, 109, 97, 120, 105, 77, 105, 120, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 118, 105, 105, 100, 105, 100, 0, 118, 105, 105, 100, 105, 100, 100, 0, 118, 105, 105, 100, 105, 100, 100, 100, 0, 49, 48, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 73, 100, 69, 0, 80, 49, 48, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 73, 100, 69, 0, 80, 75, 49, 48, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 73, 100, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 48, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 73, 100, 69, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 50, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 50, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 48, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 73, 100, 69, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 48, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 73, 100, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 48, 109, 97, 120, 105, 76, 97, 103, 69, 120, 112, 73, 100, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 50, 95, 69, 69, 69, 69, 0, 118, 105, 105, 100, 100, 0, 49, 48, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 0, 80, 49, 48, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 0, 80, 75, 49, 48, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 48, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 48, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 48, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 48, 109, 97, 120, 105, 83, 97, 109, 112, 108, 101, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 55, 109, 97, 120, 105, 77, 97, 112, 0, 80, 55, 109, 97, 120, 105, 77, 97, 112, 0, 80, 75, 55, 109, 97, 120, 105, 77, 97, 112, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 55, 109, 97, 120, 105, 77, 97, 112, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 77, 97, 112, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 77, 97, 112, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 55, 109, 97, 120, 105, 77, 97, 112, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 100, 105, 100, 100, 100, 100, 100, 0, 100, 105, 100, 100, 100, 0, 55, 109, 97, 120, 105, 68, 121, 110, 0, 80, 55, 109, 97, 120, 105, 68, 121, 110, 0, 80, 75, 55, 109, 97, 120, 105, 68, 121, 110, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 55, 109, 97, 120, 105, 68, 121, 110, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 68, 121, 110, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 68, 121, 110, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 55, 109, 97, 120, 105, 68, 121, 110, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 100, 105, 105, 100, 100, 105, 100, 100, 0, 100, 105, 105, 100, 100, 100, 100, 100, 0, 55, 109, 97, 120, 105, 69, 110, 118, 0, 80, 55, 109, 97, 120, 105, 69, 110, 118, 0, 80, 75, 55, 109, 97, 120, 105, 69, 110, 118, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 55, 109, 97, 120, 105, 69, 110, 118, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 69, 110, 118, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 69, 110, 118, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 55, 109, 97, 120, 105, 69, 110, 118, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 100, 105, 105, 100, 100, 100, 105, 105, 0, 100, 105, 105, 100, 100, 100, 100, 100, 105, 105, 0, 100, 105, 105, 100, 105, 0, 55, 99, 111, 110, 118, 101, 114, 116, 0, 80, 55, 99, 111, 110, 118, 101, 114, 116, 0, 80, 75, 55, 99, 111, 110, 118, 101, 114, 116, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 55, 99, 111, 110, 118, 101, 114, 116, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 99, 111, 110, 118, 101, 114, 116, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 99, 111, 110, 118, 101, 114, 116, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 55, 99, 111, 110, 118, 101, 114, 116, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 100, 105, 105, 105, 0, 49, 52, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114, 116, 105, 111, 110, 0, 80, 49, 52, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 20480);
allocate([ 116, 105, 111, 110, 0, 80, 75, 49, 52, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114, 116, 105, 111, 110, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 52, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114, 116, 105, 111, 110, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 52, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114, 116, 105, 111, 110, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 52, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114, 116, 105, 111, 110, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 52, 109, 97, 120, 105, 68, 105, 115, 116, 111, 114, 116, 105, 111, 110, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 49, 49, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 0, 80, 49, 49, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 0, 80, 75, 49, 49, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 49, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 49, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 49, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 49, 109, 97, 120, 105, 70, 108, 97, 110, 103, 101, 114, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 100, 105, 105, 100, 105, 100, 100, 100, 0, 49, 48, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 0, 80, 49, 48, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 0, 80, 75, 49, 48, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 48, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 48, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 48, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 48, 109, 97, 120, 105, 67, 104, 111, 114, 117, 115, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 49, 51, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 0, 80, 49, 51, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 0, 80, 75, 49, 51, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 51, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 51, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 51, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 51, 109, 97, 120, 105, 68, 67, 66, 108, 111, 99, 107, 101, 114, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 55, 109, 97, 120, 105, 83, 86, 70, 0, 80, 55, 109, 97, 120, 105, 83, 86, 70, 0, 80, 75, 55, 109, 97, 120, 105, 83, 86, 70, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 55, 109, 97, 120, 105, 83, 86, 70, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 83, 86, 70, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 83, 86, 70, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 55, 109, 97, 120, 105, 83, 86, 70, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 105, 105, 105, 100, 0, 56, 109, 97, 120, 105, 75, 105, 99, 107, 0, 80, 56, 109, 97, 120, 105, 75, 105, 99, 107, 0, 80, 75, 56, 109, 97, 120, 105, 75, 105, 99, 107, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 56, 109, 97, 120, 105, 75, 105, 99, 107, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 56, 109, 97, 120, 105, 75, 105, 99, 107, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 56, 109, 97, 120, 105, 75, 105, 99, 107, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 56, 109, 97, 120, 105, 75, 105, 99, 107, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 57, 109, 97, 120, 105, 83, 110, 97, 114, 101, 0, 80, 57, 109, 97, 120, 105, 83, 110, 97, 114, 101, 0, 80, 75, 57, 109, 97, 120, 105, 83, 110, 97, 114, 101, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 57, 109, 97, 120, 105, 83, 110, 97, 114, 101, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 57, 109, 97, 120, 105, 83, 110, 97, 114, 101, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 57, 109, 97, 120, 105, 83, 110, 97, 114, 101, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 57, 109, 97, 120, 105, 83, 110, 97, 114, 101, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 56, 109, 97, 120, 105, 72, 97, 116, 115, 0, 80, 56, 109, 97, 120, 105, 72, 97, 116, 115, 0, 80, 75, 56, 109, 97, 120, 105, 72, 97, 116, 115, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 56, 109, 97, 120, 105, 72, 97, 116, 115, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 56, 109, 97, 120, 105, 72, 97, 116, 115, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 56, 109, 97, 120, 105, 72, 97, 116, 115, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 56, 109, 97, 120, 105, 72, 97, 116, 115, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 57, 109, 97, 120, 105, 67, 108, 111, 99, 107, 0, 80, 57, 109, 97, 120, 105, 67, 108, 111, 99, 107, 0, 80, 75, 57, 109, 97, 120, 105, 67, 108, 111, 99, 107, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 57, 109, 97, 120, 105, 67, 108, 111, 99, 107, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 57, 109, 97, 120, 105, 67, 108, 111, 99, 107, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 57, 109, 97, 120, 105, 67, 108, 111, 99, 107, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 57, 109, 97, 120, 105, 67, 108, 111, 99, 107, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 37, 100, 32, 105, 115, 32, 110, 111, 116, 32, 97, 32, 112, 111, 119, 101, 114, 32, 111, 102, 32, 116, 119, 111, 10, 0, 109, 97, 120, 105, 70, 70, 84, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 70, 70, 84, 62, 0, 118, 105, 105, 105, 105, 105, 0, 112, 114, 111, 99, 101, 115, 115, 0, 105, 105, 105, 102, 0, 109, 97, 103, 115, 84, 111, 68, 66, 0, 102, 105, 105, 0, 115, 112, 101, 99, 116, 114, 97, 108, 70, 108, 97, 116, 110, 101, 115, 115, 0, 115, 112, 101, 99, 116, 114, 97, 108, 67, 101, 110, 116, 114, 111, 105, 100, 0, 103, 101, 116, 77, 97, 103, 110, 105, 116, 117, 100, 101, 0, 102, 105, 105, 105, 0, 103, 101, 116, 77, 97, 103, 110, 105, 116, 117, 100, 101, 68, 66, 0, 103, 101, 116, 80, 104, 97, 115, 101, 0, 119, 105, 110, 100, 111, 119, 83, 105, 122, 101, 0, 104, 111, 112, 83, 105, 122, 101, 0, 98, 105, 110, 115, 0, 109, 97, 103, 110, 105, 116, 117, 100, 101, 115, 0, 112, 104, 97, 115, 101, 115, 0, 109, 97, 120, 105, 73, 70, 70, 84, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 73, 70, 70, 84, 62, 0, 102, 105, 105, 105, 105, 0, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 62, 0, 118, 105, 105, 102, 105, 105, 0, 99, 97, 108, 99, 117, 108, 97, 116, 101, 0, 115, 97, 109, 112, 108, 105, 110, 103, 82, 97, 116, 101, 0, 110, 83, 112, 101, 99, 116, 114, 117, 109, 0, 110, 65, 118, 101, 114, 97, 103, 101, 115, 0, 110, 65, 118, 101, 114, 97, 103, 101, 115, 80, 101, 114, 79, 99, 116, 97, 118, 101, 0, 115, 112, 101, 99, 116, 114, 117, 109, 70, 114, 101, 113, 117, 101, 110, 99, 121, 83, 112, 97, 110, 0, 102, 105, 114, 115, 116, 79, 99, 116, 97, 118, 101, 70, 114, 101, 113, 117, 101, 110, 99, 121, 0, 97, 118, 101, 114, 97, 103, 101, 70, 114, 101, 113, 117, 101, 110, 99, 121, 73, 110, 99, 114, 101, 109, 101, 110, 116, 0, 103, 101, 116, 65, 118, 101, 114, 97, 103, 101, 0, 103, 101, 116, 80, 101, 97, 107, 0, 103, 101, 116, 80, 101, 97, 107, 72, 111, 108, 100, 84, 105, 109, 101, 0, 112, 101, 97, 107, 72, 111, 108, 100, 84, 105, 109, 101, 0, 112, 101, 97, 107, 68, 101, 99, 97, 121, 82, 97, 116, 101, 0, 103, 101, 116, 83, 112, 101, 50, 65, 118, 103, 0, 108, 105, 110, 101, 97, 114, 69, 81, 83, 108, 111, 112, 101, 0, 108, 105, 110, 101, 97, 114, 69, 81, 73, 110, 116, 101, 114, 99, 101, 112, 116, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 50, 49, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 50, 49, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 50, 49, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 50, 49, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 69, 69, 0, 80, 75, 50, 49, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 0, 80, 50, 49, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 0, 50, 49, 109, 97, 120, 105, 70, 70, 84, 79, 99, 116, 97, 118, 101, 65, 110, 97, 108, 121, 122, 101, 114, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 56, 109, 97, 120, 105, 73, 70, 70, 84, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 56, 109, 97, 120, 105, 73, 70, 70, 84, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 56, 109, 97, 120, 105, 73, 70, 70, 84, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 56, 109, 97, 120, 105, 73, 70, 70, 84, 69, 69, 0, 80, 75, 56, 109, 97, 120, 105, 73, 70, 70, 84, 0, 80, 56, 109, 97, 120, 105, 73, 70, 70, 84, 0, 56, 109, 97, 120, 105, 73, 70, 70, 84, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 55, 109, 97, 120, 105, 70, 70, 84, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 70, 70, 84, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 55, 109, 97, 120, 105, 70, 70, 84, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 49, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 49, 95, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 55, 109, 97, 120, 105, 70, 70, 84, 69, 69, 0, 80, 75, 55, 109, 97, 120, 105, 70, 70, 84, 0, 80, 55, 109, 97, 120, 105, 70, 70, 84, 0, 55, 109, 97, 120, 105, 70, 70, 84, 0, 109, 97, 120, 105, 77, 70, 67, 67, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 77, 70, 67, 67, 62, 0, 115, 101, 116, 117, 112, 0, 118, 105, 105, 105, 105, 105, 100, 100, 105, 0, 109, 102, 99, 99, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 54, 109, 97, 120, 105, 77, 70, 67, 67, 65, 110, 97, 108, 121, 115, 101, 114, 73, 100, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 50, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 54, 109, 97, 120, 105, 77, 70, 67, 67, 65, 110, 97, 108, 121, 115, 101, 114, 73, 100, 69, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 54, 109, 97, 120, 105, 77, 70, 67, 67, 65, 110, 97, 108, 121, 115, 101, 114, 73, 100, 69, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 50, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 50, 95, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 54, 109, 97, 120, 105, 77, 70, 67, 67, 65, 110, 97, 108, 121, 115, 101, 114, 73, 100, 69, 69, 69, 0, 80, 75, 49, 54, 109, 97, 120, 105, 77, 70, 67, 67, 65, 110, 97, 108, 121, 115, 101, 114, 73, 100, 69, 0, 80, 49, 54, 109, 97, 120, 105, 77, 70, 67, 67, 65, 110, 97, 108, 121, 115, 101, 114, 73, 100, 69, 0, 49, 54, 109, 97, 120, 105, 77, 70, 67, 67, 65, 110, 97, 108, 121, 115, 101, 114, 73, 100, 69, 0, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 60, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 62, 32, 62, 0, 115, 101, 116, 83, 97, 109, 112, 108, 101, 0, 103, 101, 116, 78, 111, 114, 109, 97, 108, 105, 115, 101, 100, 80, 111, 115, 105, 116, 105, 111, 110, 0, 103, 101, 116, 80, 111, 115, 105, 116, 105, 111, 110, 0, 115, 101, 116, 80, 111, 115, 105, 116, 105, 111, 110, 0, 112, 108, 97, 121, 0, 100, 105, 105, 100, 100, 105, 100, 0, 112, 108, 97, 121, 50, 0, 100, 105, 105, 100, 100, 105, 0, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 0, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 60, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 60, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 62, 32, 62, 0, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 116, 114, 101, 116, 99, 104, 0, 115, 101, 116, 76, 111, 111, 112, 83, 116, 97, 114, 116, 0, 115, 101, 116, 76, 111, 111, 112, 69, 110, 100, 0, 100, 105, 105, 100, 100, 100, 105, 100, 0, 57, 109, 97, 120, 105, 71, 114, 97, 105, 110, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 49, 51, 109, 97, 120, 105, 71, 114, 97, 105, 110, 66, 97, 115, 101, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 54, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 51, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 54, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 54, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 51, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 51, 95, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 54, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 69, 69, 0, 80, 75, 49, 54, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 80, 49, 54, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 49, 54, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 52, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 51, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 52, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 52, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 51, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 51, 95, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 52, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 69, 69, 0, 80, 75, 49, 52, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 80, 49, 52, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 49, 52, 109, 97, 120, 105, 80, 105, 116, 99, 104, 83, 104, 105, 102, 116, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 101, 109, 112, 108, 97, 99, 101, 73, 49, 53, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 51, 95, 69, 69, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 53, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 95, 112, 111, 105, 110, 116, 101, 114, 73, 80, 49, 53, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 53, 115, 109, 97, 114, 116, 95, 112, 116, 114, 95, 116, 114, 97, 105, 116, 73, 78, 83, 95, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 83, 51, 95, 69, 69, 69, 49, 49, 118, 97, 108, 95, 100, 101, 108, 101, 116, 101, 114, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 51, 95, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 115, 104, 97, 114, 101, 100, 95, 112, 116, 114, 73, 49, 53, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 69, 69, 0, 80, 75, 49, 53, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 80, 49, 53, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 49, 53, 109, 97, 120, 105, 84, 105, 109, 101, 115, 116, 114, 101, 116, 99, 104, 73, 49, 52, 104, 97, 110, 110, 87, 105, 110, 70, 117, 110, 99, 116, 111, 114, 69, 0, 118, 111, 105, 100, 0, 98, 111, 111, 108, 0, 99, 104, 97, 114, 0, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 115, 104, 111, 114, 116, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 115, 104, 111, 114, 116, 0, 105, 110, 116, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0, 108, 111, 110, 103, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 0, 102, 108, 111, 97, 116, 0, 100, 111, 117, 98, 108, 101, 0, 115, 116, 100, 58, 58, 115, 116, 114, 105, 110, 103, 0, 115, 116, 100, 58, 58, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 62, 0, 115, 116, 100, 58, 58, 119, 115, 116, 114, 105, 110, 103, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 118, 97, 108, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 115, 104, 111, 114, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 115, 104, 111, 114, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 108, 111, 110, 103, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 56, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 56, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 49, 54, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 49, 54, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 51, 50, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 51, 50, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 102, 108, 111, 97, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 100, 111, 117, 98, 108, 101, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 108, 111, 110, 103, 32, 100, 111, 117, 98, 108, 101, 62, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 101, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 100, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 102, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 109, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 108, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 106, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 105, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 116, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 115, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 104, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 97, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 99, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 119, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 49, 95, 95, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 95, 99, 111, 109, 109, 111, 110, 73, 76, 98, 49, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 104, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 104, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 104, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 83, 116, 57, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 83, 116, 57, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 83, 116, 57, 116, 121, 112, 101, 95, 105, 110, 102, 111, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 54, 95, 95, 115, 104, 105, 109, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 57, 95, 95, 112, 111, 105, 110, 116, 101, 114, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 112, 98, 97, 115, 101, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 51, 95, 95, 102, 117, 110, 100, 97, 109, 101, 110, 116, 97, 108, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 118, 0, 68, 110, 0, 98, 0, 99, 0, 104, 0, 97, 0, 115, 0, 116, 0, 105, 0, 106, 0, 108, 0, 109, 0, 102, 0, 100, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 48, 95, 95, 115, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 49, 95, 95, 118, 109, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 33, 34, 118, 101, 99, 116, 111, 114, 32, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 34, 0, 47, 85, 115, 101, 114, 115, 47, 68, 97, 110, 47, 68, 111, 99, 117, 109, 101, 110, 116, 115, 47, 80, 114, 111, 103, 114, 97, 109, 109, 105, 110, 103, 47, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 47, 101, 109, 115, 100, 107, 95, 112, 111, 114, 116, 97, 98, 108, 101, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 47, 49, 46, 51, 53, 46, 48, 47, 115, 121, 115, 116, 101, 109, 47, 105, 110, 99, 108, 117, 100, 101, 47, 108, 105, 98, 99, 120, 120, 47, 118, 101, 99, 116, 111, 114, 0, 95, 95, 116, 104, 114, 111, 119, 95, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 0, 112, 116, 104, 114, 101, 97, 100, 95, 111, 110, 99, 101, 32, 102, 97, 105, 108, 117, 114, 101, 32, 105, 110, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 95, 102, 97, 115, 116, 40, 41, 0, 115, 116, 100, 58, 58, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 116, 101, 114, 109, 105, 110, 97, 116, 101, 95, 104, 97, 110, 100, 108, 101, 114, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 108, 121, 32, 114, 101, 116, 117, 114, 110, 101, 100, 0, 116, 101, 114, 109, 105, 110, 97, 116, 101, 95, 104, 97, 110, 100, 108, 101, 114, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 108, 121, 32, 116, 104, 114, 101, 119, 32, 97, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 99, 97, 110, 110, 111, 116, 32, 99, 114, 101, 97, 116, 101, 32, 112, 116, 104, 114, 101, 97, 100, 32, 107, 101, 121, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 99, 97, 110, 110, 111, 116, 32, 122, 101, 114, 111, 32, 111, 117, 116, 32, 116, 104, 114, 101, 97, 100, 32, 118, 97, 108, 117, 101, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 58, 32, 37, 115, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 102, 111, 114, 101, 105, 103, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 0, 117, 110, 99, 97, 117, 103, 104, 116, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 30720);
allocate([ 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116, 32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 40960);
allocate([ 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 46, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 95, 95, 115, 104, 97, 114, 101, 100, 95, 99, 111, 117, 110, 116, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 57, 95, 95, 115, 104, 97, 114, 101, 100, 95, 119, 101, 97, 107, 95, 99, 111, 117, 110, 116, 69, 0 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 42988);
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) {
 HEAP8[tempDoublePtr] = HEAP8[ptr];
 HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];
 HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];
 HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];
}
function copyTempDouble(ptr) {
 HEAP8[tempDoublePtr] = HEAP8[ptr];
 HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];
 HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];
 HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];
 HEAP8[tempDoublePtr + 4] = HEAP8[ptr + 4];
 HEAP8[tempDoublePtr + 5] = HEAP8[ptr + 5];
 HEAP8[tempDoublePtr + 6] = HEAP8[ptr + 6];
 HEAP8[tempDoublePtr + 7] = HEAP8[ptr + 7];
}
var registeredTypes = {};
function _free() {}
Module["_free"] = _free;
function embind_init_charCodes() {
 var codes = new Array(256);
 for (var i = 0; i < 256; ++i) {
  codes[i] = String.fromCharCode(i);
 }
 embind_charCodes = codes;
}
var embind_charCodes = undefined;
function readLatin1String(ptr) {
 var ret = "";
 var c = ptr;
 while (HEAPU8[c]) {
  ret += embind_charCodes[HEAPU8[c++]];
 }
 return ret;
}
function getTypeName(type) {
 var ptr = ___getTypeName(type);
 var rv = readLatin1String(ptr);
 _free(ptr);
 return rv;
}
var char_0 = 48;
var char_9 = 57;
function makeLegalFunctionName(name) {
 if (undefined === name) {
  return "_unknown";
 }
 name = name.replace(/[^a-zA-Z0-9_]/g, "$");
 var f = name.charCodeAt(0);
 if (f >= char_0 && f <= char_9) {
  return "_" + name;
 } else {
  return name;
 }
}
function createNamedFunction(name, body) {
 name = makeLegalFunctionName(name);
 return (new Function("body", "return function " + name + "() {\n" + '    "use strict";' + "    return body.apply(this, arguments);\n" + "};\n"))(body);
}
function extendError(baseErrorType, errorName) {
 var errorClass = createNamedFunction(errorName, (function(message) {
  this.name = errorName;
  this.message = message;
  var stack = (new Error(message)).stack;
  if (stack !== undefined) {
   this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
  }
 }));
 errorClass.prototype = Object.create(baseErrorType.prototype);
 errorClass.prototype.constructor = errorClass;
 errorClass.prototype.toString = (function() {
  if (this.message === undefined) {
   return this.name;
  } else {
   return this.name + ": " + this.message;
  }
 });
 return errorClass;
}
var BindingError = undefined;
function throwBindingError(message) {
 throw new BindingError(message);
}
function requireRegisteredType(rawType, humanName) {
 var impl = registeredTypes[rawType];
 if (undefined === impl) {
  throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
 }
 return impl;
}
function __emval_lookupTypes(argCount, argTypes, argWireTypes) {
 var a = new Array(argCount);
 for (var i = 0; i < argCount; ++i) {
  a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i], "parameter " + i);
 }
 return a;
}
var emval_free_list = [];
var emval_handle_array = [ {}, {
 value: undefined
}, {
 value: null
}, {
 value: true
}, {
 value: false
} ];
function count_emval_handles() {
 var count = 0;
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   ++count;
  }
 }
 return count;
}
function get_first_emval() {
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   return emval_handle_array[i];
  }
 }
 return null;
}
function init_emval() {
 Module["count_emval_handles"] = count_emval_handles;
 Module["get_first_emval"] = get_first_emval;
}
function __emval_register(value) {
 switch (value) {
 case undefined:
  {
   return 1;
  }
 case null:
  {
   return 2;
  }
 case true:
  {
   return 3;
  }
 case false:
  {
   return 4;
  }
 default:
  {
   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
   emval_handle_array[handle] = {
    refcount: 1,
    value: value
   };
   return handle;
  }
 }
}
function requireHandle(handle) {
 if (!handle) {
  throwBindingError("Cannot use deleted val. handle = " + handle);
 }
 return emval_handle_array[handle].value;
}
function __emval_call(handle, argCount, argTypes, argv) {
 handle = requireHandle(handle);
 var types = __emval_lookupTypes(argCount, argTypes);
 var args = new Array(argCount);
 for (var i = 0; i < argCount; ++i) {
  var type = types[i];
  args[i] = type["readValueFromPointer"](argv);
  argv += type["argPackAdvance"];
 }
 var rv = handle.apply(undefined, args);
 return __emval_register(rv);
}
Module["_i64Subtract"] = _i64Subtract;
var _fabsf = Math_abs;
Module["_i64Add"] = _i64Add;
function __ZSt18uncaught_exceptionv() {
 return !!__ZSt18uncaught_exceptionv.uncaught_exception;
}
var EXCEPTIONS = {
 last: 0,
 caught: [],
 infos: {},
 deAdjust: (function(adjusted) {
  if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
  for (var ptr in EXCEPTIONS.infos) {
   var info = EXCEPTIONS.infos[ptr];
   if (info.adjusted === adjusted) {
    return ptr;
   }
  }
  return adjusted;
 }),
 addRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount++;
 }),
 decRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  assert(info.refcount > 0);
  info.refcount--;
  if (info.refcount === 0) {
   if (info.destructor) {
    Runtime.dynCall("vi", info.destructor, [ ptr ]);
   }
   delete EXCEPTIONS.infos[ptr];
   ___cxa_free_exception(ptr);
  }
 }),
 clearRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount = 0;
 })
};
function ___resumeException(ptr) {
 if (!EXCEPTIONS.last) {
  EXCEPTIONS.last = ptr;
 }
 EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));
 throw ptr;
}
function ___cxa_find_matching_catch() {
 var thrown = EXCEPTIONS.last;
 if (!thrown) {
  return (asm["setTempRet0"](0), 0) | 0;
 }
 var info = EXCEPTIONS.infos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (asm["setTempRet0"](0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = Module["___cxa_is_pointer_type"](throwntype);
 if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
 HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
 thrown = ___cxa_find_matching_catch.buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
   thrown = HEAP32[thrown >> 2];
   info.adjusted = thrown;
   return (asm["setTempRet0"](typeArray[i]), thrown) | 0;
  }
 }
 thrown = HEAP32[thrown >> 2];
 return (asm["setTempRet0"](throwntype), thrown) | 0;
}
function ___cxa_throw(ptr, type, destructor) {
 EXCEPTIONS.infos[ptr] = {
  ptr: ptr,
  adjusted: ptr,
  type: type,
  destructor: destructor,
  refcount: 0
 };
 EXCEPTIONS.last = ptr;
 if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
  __ZSt18uncaught_exceptionv.uncaught_exception = 1;
 } else {
  __ZSt18uncaught_exceptionv.uncaught_exception++;
 }
 throw ptr;
}
var _emscripten_resume = true;
var _emscripten_landingpad = true;
function ___cxa_free_exception(ptr) {
 try {
  return _free(ptr);
 } catch (e) {
  Module.printErr("exception during cxa_free_exception: " + e);
 }
}
function ___cxa_end_catch() {
 if (___cxa_end_catch.rethrown) {
  ___cxa_end_catch.rethrown = false;
  return;
 }
 asm["setThrew"](0);
 var ptr = EXCEPTIONS.caught.pop();
 if (ptr) {
  EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
  EXCEPTIONS.last = 0;
 }
}
function _malloc(bytes) {
 var ptr = Runtime.dynamicAlloc(bytes + 8);
 return ptr + 8 & 4294967288;
}
Module["_malloc"] = _malloc;
var awaitingDependencies = {};
var typeDependencies = {};
var InternalError = undefined;
function throwInternalError(message) {
 throw new InternalError(message);
}
function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
 myTypes.forEach((function(type) {
  typeDependencies[type] = dependentTypes;
 }));
 function onComplete(typeConverters) {
  var myTypeConverters = getTypeConverters(typeConverters);
  if (myTypeConverters.length !== myTypes.length) {
   throwInternalError("Mismatched type converter count");
  }
  for (var i = 0; i < myTypes.length; ++i) {
   registerType(myTypes[i], myTypeConverters[i]);
  }
 }
 var typeConverters = new Array(dependentTypes.length);
 var unregisteredTypes = [];
 var registered = 0;
 dependentTypes.forEach((function(dt, i) {
  if (registeredTypes.hasOwnProperty(dt)) {
   typeConverters[i] = registeredTypes[dt];
  } else {
   unregisteredTypes.push(dt);
   if (!awaitingDependencies.hasOwnProperty(dt)) {
    awaitingDependencies[dt] = [];
   }
   awaitingDependencies[dt].push((function() {
    typeConverters[i] = registeredTypes[dt];
    ++registered;
    if (registered === unregisteredTypes.length) {
     onComplete(typeConverters);
    }
   }));
  }
 }));
 if (0 === unregisteredTypes.length) {
  onComplete(typeConverters);
 }
}
function registerType(rawType, registeredInstance, options) {
 options = options || {};
 if (!("argPackAdvance" in registeredInstance)) {
  throw new TypeError("registerType registeredInstance requires argPackAdvance");
 }
 var name = registeredInstance.name;
 if (!rawType) {
  throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
 }
 if (registeredTypes.hasOwnProperty(rawType)) {
  if (options.ignoreDuplicateRegistrations) {
   return;
  } else {
   throwBindingError("Cannot register type '" + name + "' twice");
  }
 }
 registeredTypes[rawType] = registeredInstance;
 delete typeDependencies[rawType];
 if (awaitingDependencies.hasOwnProperty(rawType)) {
  var callbacks = awaitingDependencies[rawType];
  delete awaitingDependencies[rawType];
  callbacks.forEach((function(cb) {
   cb();
  }));
 }
}
function simpleReadValueFromPointer(pointer) {
 return this["fromWireType"](HEAPU32[pointer >> 2]);
}
function __embind_register_std_wstring(rawType, charSize, name) {
 name = readLatin1String(name);
 var getHeap, shift;
 if (charSize === 2) {
  getHeap = (function() {
   return HEAPU16;
  });
  shift = 1;
 } else if (charSize === 4) {
  getHeap = (function() {
   return HEAPU32;
  });
  shift = 2;
 }
 registerType(rawType, {
  name: name,
  "fromWireType": (function(value) {
   var HEAP = getHeap();
   var length = HEAPU32[value >> 2];
   var a = new Array(length);
   var start = value + 4 >> shift;
   for (var i = 0; i < length; ++i) {
    a[i] = String.fromCharCode(HEAP[start + i]);
   }
   _free(value);
   return a.join("");
  }),
  "toWireType": (function(destructors, value) {
   var HEAP = getHeap();
   var length = value.length;
   var ptr = _malloc(4 + length * charSize);
   HEAPU32[ptr >> 2] = length;
   var start = ptr + 4 >> shift;
   for (var i = 0; i < length; ++i) {
    HEAP[start + i] = value.charCodeAt(i);
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: (function(ptr) {
   _free(ptr);
  })
 });
}
var _sqrtf = Math_sqrt;
function __emval_decref(handle) {
 if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
  emval_handle_array[handle] = undefined;
  emval_free_list.push(handle);
 }
}
var _log = Math_log;
var _emscripten_postinvoke = true;
var PTHREAD_SPECIFIC = {};
var PTHREAD_SPECIFIC_NEXT_KEY = 1;
var ERRNO_CODES = {
 EPERM: 1,
 ENOENT: 2,
 ESRCH: 3,
 EINTR: 4,
 EIO: 5,
 ENXIO: 6,
 E2BIG: 7,
 ENOEXEC: 8,
 EBADF: 9,
 ECHILD: 10,
 EAGAIN: 11,
 EWOULDBLOCK: 11,
 ENOMEM: 12,
 EACCES: 13,
 EFAULT: 14,
 ENOTBLK: 15,
 EBUSY: 16,
 EEXIST: 17,
 EXDEV: 18,
 ENODEV: 19,
 ENOTDIR: 20,
 EISDIR: 21,
 EINVAL: 22,
 ENFILE: 23,
 EMFILE: 24,
 ENOTTY: 25,
 ETXTBSY: 26,
 EFBIG: 27,
 ENOSPC: 28,
 ESPIPE: 29,
 EROFS: 30,
 EMLINK: 31,
 EPIPE: 32,
 EDOM: 33,
 ERANGE: 34,
 ENOMSG: 42,
 EIDRM: 43,
 ECHRNG: 44,
 EL2NSYNC: 45,
 EL3HLT: 46,
 EL3RST: 47,
 ELNRNG: 48,
 EUNATCH: 49,
 ENOCSI: 50,
 EL2HLT: 51,
 EDEADLK: 35,
 ENOLCK: 37,
 EBADE: 52,
 EBADR: 53,
 EXFULL: 54,
 ENOANO: 55,
 EBADRQC: 56,
 EBADSLT: 57,
 EDEADLOCK: 35,
 EBFONT: 59,
 ENOSTR: 60,
 ENODATA: 61,
 ETIME: 62,
 ENOSR: 63,
 ENONET: 64,
 ENOPKG: 65,
 EREMOTE: 66,
 ENOLINK: 67,
 EADV: 68,
 ESRMNT: 69,
 ECOMM: 70,
 EPROTO: 71,
 EMULTIHOP: 72,
 EDOTDOT: 73,
 EBADMSG: 74,
 ENOTUNIQ: 76,
 EBADFD: 77,
 EREMCHG: 78,
 ELIBACC: 79,
 ELIBBAD: 80,
 ELIBSCN: 81,
 ELIBMAX: 82,
 ELIBEXEC: 83,
 ENOSYS: 38,
 ENOTEMPTY: 39,
 ENAMETOOLONG: 36,
 ELOOP: 40,
 EOPNOTSUPP: 95,
 EPFNOSUPPORT: 96,
 ECONNRESET: 104,
 ENOBUFS: 105,
 EAFNOSUPPORT: 97,
 EPROTOTYPE: 91,
 ENOTSOCK: 88,
 ENOPROTOOPT: 92,
 ESHUTDOWN: 108,
 ECONNREFUSED: 111,
 EADDRINUSE: 98,
 ECONNABORTED: 103,
 ENETUNREACH: 101,
 ENETDOWN: 100,
 ETIMEDOUT: 110,
 EHOSTDOWN: 112,
 EHOSTUNREACH: 113,
 EINPROGRESS: 115,
 EALREADY: 114,
 EDESTADDRREQ: 89,
 EMSGSIZE: 90,
 EPROTONOSUPPORT: 93,
 ESOCKTNOSUPPORT: 94,
 EADDRNOTAVAIL: 99,
 ENETRESET: 102,
 EISCONN: 106,
 ENOTCONN: 107,
 ETOOMANYREFS: 109,
 EUSERS: 87,
 EDQUOT: 122,
 ESTALE: 116,
 ENOTSUP: 95,
 ENOMEDIUM: 123,
 EILSEQ: 84,
 EOVERFLOW: 75,
 ECANCELED: 125,
 ENOTRECOVERABLE: 131,
 EOWNERDEAD: 130,
 ESTRPIPE: 86
};
function _pthread_key_create(key, destructor) {
 if (key == 0) {
  return ERRNO_CODES.EINVAL;
 }
 HEAP32[key >> 2] = PTHREAD_SPECIFIC_NEXT_KEY;
 PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
 PTHREAD_SPECIFIC_NEXT_KEY++;
 return 0;
}
function getShiftFromSize(size) {
 switch (size) {
 case 1:
  return 0;
 case 2:
  return 1;
 case 4:
  return 2;
 case 8:
  return 3;
 default:
  throw new TypeError("Unknown type size: " + size);
 }
}
function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": (function(wt) {
   return !!wt;
  }),
  "toWireType": (function(destructors, o) {
   return o ? trueValue : falseValue;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": (function(pointer) {
   var heap;
   if (size === 1) {
    heap = HEAP8;
   } else if (size === 2) {
    heap = HEAP16;
   } else if (size === 4) {
    heap = HEAP32;
   } else {
    throw new TypeError("Unknown boolean type size: " + name);
   }
   return this["fromWireType"](heap[pointer >> shift]);
  }),
  destructorFunction: null
 });
}
function __emval_take_value(type, argv) {
 type = requireRegisteredType(type, "_emval_take_value");
 var v = type["readValueFromPointer"](argv);
 return __emval_register(v);
}
function __exit(status) {
 Module["exit"](status);
}
function _exit(status) {
 __exit(status);
}
var ERRNO_MESSAGES = {
 0: "Success",
 1: "Not super-user",
 2: "No such file or directory",
 3: "No such process",
 4: "Interrupted system call",
 5: "I/O error",
 6: "No such device or address",
 7: "Arg list too long",
 8: "Exec format error",
 9: "Bad file number",
 10: "No children",
 11: "No more processes",
 12: "Not enough core",
 13: "Permission denied",
 14: "Bad address",
 15: "Block device required",
 16: "Mount device busy",
 17: "File exists",
 18: "Cross-device link",
 19: "No such device",
 20: "Not a directory",
 21: "Is a directory",
 22: "Invalid argument",
 23: "Too many open files in system",
 24: "Too many open files",
 25: "Not a typewriter",
 26: "Text file busy",
 27: "File too large",
 28: "No space left on device",
 29: "Illegal seek",
 30: "Read only file system",
 31: "Too many links",
 32: "Broken pipe",
 33: "Math arg out of domain of func",
 34: "Math result not representable",
 35: "File locking deadlock error",
 36: "File or path name too long",
 37: "No record locks available",
 38: "Function not implemented",
 39: "Directory not empty",
 40: "Too many symbolic links",
 42: "No message of desired type",
 43: "Identifier removed",
 44: "Channel number out of range",
 45: "Level 2 not synchronized",
 46: "Level 3 halted",
 47: "Level 3 reset",
 48: "Link number out of range",
 49: "Protocol driver not attached",
 50: "No CSI structure available",
 51: "Level 2 halted",
 52: "Invalid exchange",
 53: "Invalid request descriptor",
 54: "Exchange full",
 55: "No anode",
 56: "Invalid request code",
 57: "Invalid slot",
 59: "Bad font file fmt",
 60: "Device not a stream",
 61: "No data (for no delay io)",
 62: "Timer expired",
 63: "Out of streams resources",
 64: "Machine is not on the network",
 65: "Package not installed",
 66: "The object is remote",
 67: "The link has been severed",
 68: "Advertise error",
 69: "Srmount error",
 70: "Communication error on send",
 71: "Protocol error",
 72: "Multihop attempted",
 73: "Cross mount point (not really error)",
 74: "Trying to read unreadable message",
 75: "Value too large for defined data type",
 76: "Given log. name not unique",
 77: "f.d. invalid for this operation",
 78: "Remote address changed",
 79: "Can   access a needed shared lib",
 80: "Accessing a corrupted shared lib",
 81: ".lib section in a.out corrupted",
 82: "Attempting to link in too many libs",
 83: "Attempting to exec a shared library",
 84: "Illegal byte sequence",
 86: "Streams pipe error",
 87: "Too many users",
 88: "Socket operation on non-socket",
 89: "Destination address required",
 90: "Message too long",
 91: "Protocol wrong type for socket",
 92: "Protocol not available",
 93: "Unknown protocol",
 94: "Socket type not supported",
 95: "Not supported",
 96: "Protocol family not supported",
 97: "Address family not supported by protocol family",
 98: "Address already in use",
 99: "Address not available",
 100: "Network interface is not configured",
 101: "Network is unreachable",
 102: "Connection reset by network",
 103: "Connection aborted",
 104: "Connection reset by peer",
 105: "No buffer space available",
 106: "Socket is already connected",
 107: "Socket is not connected",
 108: "Can't send after socket shutdown",
 109: "Too many references",
 110: "Connection timed out",
 111: "Connection refused",
 112: "Host is down",
 113: "Host is unreachable",
 114: "Socket already connected",
 115: "Connection already in progress",
 116: "Stale file handle",
 122: "Quota exceeded",
 123: "No medium (in tape drive)",
 125: "Operation canceled",
 130: "Previous owner died",
 131: "State not recoverable"
};
function ___setErrNo(value) {
 if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value; else Module.printErr("failed to set errno from JS");
 return value;
}
var PATH = {
 splitPath: (function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 }),
 normalizeArray: (function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (; up--; up) {
    parts.unshift("..");
   }
  }
  return parts;
 }),
 normalize: (function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 }),
 dirname: (function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 }),
 basename: (function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 }),
 extname: (function(path) {
  return PATH.splitPath(path)[3];
 }),
 join: (function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 }),
 join2: (function(l, r) {
  return PATH.normalize(l + "/" + r);
 }),
 resolve: (function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((function(p) {
   return !!p;
  })), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 }),
 relative: (function(from, to) {
  from = PATH.resolve(from).substr(1);
  to = PATH.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (; start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (; end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 })
};
var TTY = {
 ttys: [],
 init: (function() {}),
 shutdown: (function() {}),
 register: (function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 }),
 stream_ops: {
  open: (function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   stream.tty = tty;
   stream.seekable = false;
  }),
  close: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  flush: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  read: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  }),
  write: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   for (var i = 0; i < length; i++) {
    try {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  })
 },
 default_tty_ops: {
  get_char: (function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = new Buffer(BUFSIZE);
     var bytesRead = 0;
     var fd = process.stdin.fd;
     var usingDevice = false;
     try {
      fd = fs.openSync("/dev/stdin", "r");
      usingDevice = true;
     } catch (e) {}
     bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
     if (usingDevice) {
      fs.closeSync(fd);
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  }),
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 },
 default_tty1_ops: {
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 }
};
var MEMFS = {
 ops_table: null,
 mount: (function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 getFileDataAsRegularArray: (function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 }),
 getFileDataAsTypedArray: (function(node) {
  if (!node.contents) return new Uint8Array;
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 }),
 expandFileStorage: (function(node, newCapacity) {
  if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
   node.contents = MEMFS.getFileDataAsRegularArray(node);
   node.usedBytes = node.contents.length;
  }
  if (!node.contents || node.contents.subarray) {
   var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
   if (prevCapacity >= newCapacity) return;
   var CAPACITY_DOUBLING_MAX = 1024 * 1024;
   newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
   if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
   var oldContents = node.contents;
   node.contents = new Uint8Array(newCapacity);
   if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
   return;
  }
  if (!node.contents && newCapacity > 0) node.contents = [];
  while (node.contents.length < newCapacity) node.contents.push(0);
 }),
 resizeFileStorage: (function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(new ArrayBuffer(newSize));
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 }),
 node_ops: {
  getattr: (function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  }),
  lookup: (function(parent, name) {
   throw FS.genericErrors[ERRNO_CODES.ENOENT];
  }),
  mknod: (function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  }),
  rename: (function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  }),
  unlink: (function(parent, name) {
   delete parent.contents[name];
  }),
  rmdir: (function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
   }
   delete parent.contents[name];
  }),
  readdir: (function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  }),
  symlink: (function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  }),
  readlink: (function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return node.link;
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  }),
  write: (function(stream, buffer, offset, length, position, canOwn) {
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     assert(position === 0, "canOwn must imply no weird position inside the file");
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  }),
  allocate: (function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  }),
  mmap: (function(stream, buffer, offset, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < stream.node.usedBytes) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = _malloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
    }
    buffer.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  }),
  msync: (function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  })
 }
};
var IDBFS = {
 dbs: {},
 indexedDB: (function() {
  if (typeof indexedDB !== "undefined") return indexedDB;
  var ret = null;
  if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 }),
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: (function(mount) {
  return MEMFS.mount.apply(null, arguments);
 }),
 syncfs: (function(mount, populate, callback) {
  IDBFS.getLocalSet(mount, (function(err, local) {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, (function(err, remote) {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   }));
  }));
 }),
 getDB: (function(name, callback) {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  req.onupgradeneeded = (function(e) {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  });
  req.onsuccess = (function() {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 getLocalSet: (function(mount, callback) {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return (function(p) {
    return PATH.join2(root, p);
   });
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    timestamp: stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 }),
 getRemoteSet: (function(mount, callback) {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, (function(err, db) {
   if (err) return callback(err);
   var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
   transaction.onerror = (function(e) {
    callback(this.error);
    e.preventDefault();
   });
   var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
   var index = store.index("timestamp");
   index.openKeyCursor().onsuccess = (function(event) {
    var cursor = event.target.result;
    if (!cursor) {
     return callback(null, {
      type: "remote",
      db: db,
      entries: entries
     });
    }
    entries[cursor.primaryKey] = {
     timestamp: cursor.key
    };
    cursor.continue();
   });
  }));
 }),
 loadLocalEntry: (function(path, callback) {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode,
    contents: node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 }),
 storeLocalEntry: (function(path, entry, callback) {
  try {
   if (FS.isDir(entry.mode)) {
    FS.mkdir(path, entry.mode);
   } else if (FS.isFile(entry.mode)) {
    FS.writeFile(path, entry.contents, {
     encoding: "binary",
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry.mode);
   FS.utime(path, entry.timestamp, entry.timestamp);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 removeLocalEntry: (function(path, callback) {
  try {
   var lookup = FS.lookupPath(path);
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 loadRemoteEntry: (function(store, path, callback) {
  var req = store.get(path);
  req.onsuccess = (function(event) {
   callback(null, event.target.result);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 storeRemoteEntry: (function(store, path, entry, callback) {
  var req = store.put(entry, path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 removeRemoteEntry: (function(store, path, callback) {
  var req = store.delete(path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 reconcile: (function(src, dst, callback) {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach((function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e.timestamp > e2.timestamp) {
    create.push(key);
    total++;
   }
  }));
  var remove = [];
  Object.keys(dst.entries).forEach((function(key) {
   var e = dst.entries[key];
   var e2 = src.entries[key];
   if (!e2) {
    remove.push(key);
    total++;
   }
  }));
  if (!total) {
   return callback(null);
  }
  var errored = false;
  var completed = 0;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= total) {
    return callback(null);
   }
  }
  transaction.onerror = (function(e) {
   done(this.error);
   e.preventDefault();
  });
  create.sort().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    }));
   } else {
    IDBFS.loadLocalEntry(path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    }));
   }
  }));
  remove.sort().reverse().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  }));
 })
};
var NODEFS = {
 isWindows: false,
 staticInit: (function() {
  NODEFS.isWindows = !!process.platform.match(/^win/);
 }),
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_NODE);
  return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = FS.createNode(parent, name, mode);
  node.node_ops = NODEFS.node_ops;
  node.stream_ops = NODEFS.stream_ops;
  return node;
 }),
 getMode: (function(path) {
  var stat;
  try {
   stat = fs.lstatSync(path);
   if (NODEFS.isWindows) {
    stat.mode = stat.mode | (stat.mode & 146) >> 1;
   }
  } catch (e) {
   if (!e.code) throw e;
   throw new FS.ErrnoError(ERRNO_CODES[e.code]);
  }
  return stat.mode;
 }),
 realPath: (function(node) {
  var parts = [];
  while (node.parent !== node) {
   parts.push(node.name);
   node = node.parent;
  }
  parts.push(node.mount.opts.root);
  parts.reverse();
  return PATH.join.apply(null, parts);
 }),
 flagsToPermissionStringMap: {
  0: "r",
  1: "r+",
  2: "r+",
  64: "r",
  65: "r+",
  66: "r+",
  129: "rx+",
  193: "rx+",
  514: "w+",
  577: "w",
  578: "w+",
  705: "wx",
  706: "wx+",
  1024: "a",
  1025: "a",
  1026: "a+",
  1089: "a",
  1090: "a+",
  1153: "ax",
  1154: "ax+",
  1217: "ax",
  1218: "ax+",
  4096: "rs",
  4098: "rs+"
 },
 flagsToPermissionString: (function(flags) {
  flags &= ~32768;
  if (flags in NODEFS.flagsToPermissionStringMap) {
   return NODEFS.flagsToPermissionStringMap[flags];
  } else {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
 }),
 node_ops: {
  getattr: (function(node) {
   var path = NODEFS.realPath(node);
   var stat;
   try {
    stat = fs.lstatSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (NODEFS.isWindows && !stat.blksize) {
    stat.blksize = 4096;
   }
   if (NODEFS.isWindows && !stat.blocks) {
    stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
   }
   return {
    dev: stat.dev,
    ino: stat.ino,
    mode: stat.mode,
    nlink: stat.nlink,
    uid: stat.uid,
    gid: stat.gid,
    rdev: stat.rdev,
    size: stat.size,
    atime: stat.atime,
    mtime: stat.mtime,
    ctime: stat.ctime,
    blksize: stat.blksize,
    blocks: stat.blocks
   };
  }),
  setattr: (function(node, attr) {
   var path = NODEFS.realPath(node);
   try {
    if (attr.mode !== undefined) {
     fs.chmodSync(path, attr.mode);
     node.mode = attr.mode;
    }
    if (attr.timestamp !== undefined) {
     var date = new Date(attr.timestamp);
     fs.utimesSync(path, date, date);
    }
    if (attr.size !== undefined) {
     fs.truncateSync(path, attr.size);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  lookup: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   var mode = NODEFS.getMode(path);
   return NODEFS.createNode(parent, name, mode);
  }),
  mknod: (function(parent, name, mode, dev) {
   var node = NODEFS.createNode(parent, name, mode, dev);
   var path = NODEFS.realPath(node);
   try {
    if (FS.isDir(node.mode)) {
     fs.mkdirSync(path, node.mode);
    } else {
     fs.writeFileSync(path, "", {
      mode: node.mode
     });
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return node;
  }),
  rename: (function(oldNode, newDir, newName) {
   var oldPath = NODEFS.realPath(oldNode);
   var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
   try {
    fs.renameSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  unlink: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.unlinkSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  rmdir: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.rmdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readdir: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    return fs.readdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  symlink: (function(parent, newName, oldPath) {
   var newPath = PATH.join2(NODEFS.realPath(parent), newName);
   try {
    fs.symlinkSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readlink: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    path = fs.readlinkSync(path);
    path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
    return path;
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  })
 },
 stream_ops: {
  open: (function(stream) {
   var path = NODEFS.realPath(stream.node);
   try {
    if (FS.isFile(stream.node.mode)) {
     stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  close: (function(stream) {
   try {
    if (FS.isFile(stream.node.mode) && stream.nfd) {
     fs.closeSync(stream.nfd);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  read: (function(stream, buffer, offset, length, position) {
   if (length === 0) return 0;
   var nbuffer = new Buffer(length);
   var res;
   try {
    res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (res > 0) {
    for (var i = 0; i < res; i++) {
     buffer[offset + i] = nbuffer[i];
    }
   }
   return res;
  }),
  write: (function(stream, buffer, offset, length, position) {
   var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
   var res;
   try {
    res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return res;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     try {
      var stat = fs.fstatSync(stream.nfd);
      position += stat.size;
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES[e.code]);
     }
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
var WORKERFS = {
 DIR_MODE: 16895,
 FILE_MODE: 33279,
 reader: null,
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_WORKER);
  if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync;
  var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
  var createdParents = {};
  function ensureParent(path) {
   var parts = path.split("/");
   var parent = root;
   for (var i = 0; i < parts.length - 1; i++) {
    var curr = parts.slice(0, i + 1).join("/");
    if (!createdParents[curr]) {
     createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
    }
    parent = createdParents[curr];
   }
   return parent;
  }
  function base(path) {
   var parts = path.split("/");
   return parts[parts.length - 1];
  }
  Array.prototype.forEach.call(mount.opts["files"] || [], (function(file) {
   WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
  }));
  (mount.opts["blobs"] || []).forEach((function(obj) {
   WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
  }));
  (mount.opts["packages"] || []).forEach((function(pack) {
   pack["metadata"].files.forEach((function(file) {
    var name = file.filename.substr(1);
    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
   }));
  }));
  return root;
 }),
 createNode: (function(parent, name, mode, dev, contents, mtime) {
  var node = FS.createNode(parent, name, mode);
  node.mode = mode;
  node.node_ops = WORKERFS.node_ops;
  node.stream_ops = WORKERFS.stream_ops;
  node.timestamp = (mtime || new Date).getTime();
  assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
  if (mode === WORKERFS.FILE_MODE) {
   node.size = contents.size;
   node.contents = contents;
  } else {
   node.size = 4096;
   node.contents = {};
  }
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 node_ops: {
  getattr: (function(node) {
   return {
    dev: 1,
    ino: undefined,
    mode: node.mode,
    nlink: 1,
    uid: 0,
    gid: 0,
    rdev: undefined,
    size: node.size,
    atime: new Date(node.timestamp),
    mtime: new Date(node.timestamp),
    ctime: new Date(node.timestamp),
    blksize: 4096,
    blocks: Math.ceil(node.size / 4096)
   };
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
  }),
  lookup: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }),
  mknod: (function(parent, name, mode, dev) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rename: (function(oldNode, newDir, newName) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  unlink: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rmdir: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readdir: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  symlink: (function(parent, newName, oldPath) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readlink: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   if (position >= stream.node.size) return 0;
   var chunk = stream.node.contents.slice(position, position + length);
   var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
   buffer.set(new Uint8Array(ab), offset);
   return chunk.size;
  }),
  write: (function(stream, buffer, offset, length, position) {
   throw new FS.ErrnoError(ERRNO_CODES.EIO);
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.size;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
var _stdin = allocate(1, "i32*", ALLOC_STATIC);
var _stdout = allocate(1, "i32*", ALLOC_STATIC);
var _stderr = allocate(1, "i32*", ALLOC_STATIC);
var FS = {
 root: null,
 mounts: [],
 devices: [ null ],
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 handleFSError: (function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return ___setErrNo(e.errno);
 }),
 lookupPath: (function(path, opts) {
  path = PATH.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
  }
  var parts = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 }),
 getPath: (function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 }),
 hashName: (function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 }),
 hashAddNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 }),
 hashRemoveNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 }),
 lookupNode: (function(parent, name) {
  var err = FS.mayLookup(parent);
  if (err) {
   throw new FS.ErrnoError(err, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 }),
 createNode: (function(parent, name, mode, rdev) {
  if (!FS.FSNode) {
   FS.FSNode = (function(parent, name, mode, rdev) {
    if (!parent) {
     parent = this;
    }
    this.parent = parent;
    this.mount = parent.mount;
    this.mounted = null;
    this.id = FS.nextInode++;
    this.name = name;
    this.mode = mode;
    this.node_ops = {};
    this.stream_ops = {};
    this.rdev = rdev;
   });
   FS.FSNode.prototype = {};
   var readMode = 292 | 73;
   var writeMode = 146;
   Object.defineProperties(FS.FSNode.prototype, {
    read: {
     get: (function() {
      return (this.mode & readMode) === readMode;
     }),
     set: (function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
     })
    },
    write: {
     get: (function() {
      return (this.mode & writeMode) === writeMode;
     }),
     set: (function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
     })
    },
    isFolder: {
     get: (function() {
      return FS.isDir(this.mode);
     })
    },
    isDevice: {
     get: (function() {
      return FS.isChrdev(this.mode);
     })
    }
   });
  }
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 }),
 destroyNode: (function(node) {
  FS.hashRemoveNode(node);
 }),
 isRoot: (function(node) {
  return node === node.parent;
 }),
 isMountpoint: (function(node) {
  return !!node.mounted;
 }),
 isFile: (function(mode) {
  return (mode & 61440) === 32768;
 }),
 isDir: (function(mode) {
  return (mode & 61440) === 16384;
 }),
 isLink: (function(mode) {
  return (mode & 61440) === 40960;
 }),
 isChrdev: (function(mode) {
  return (mode & 61440) === 8192;
 }),
 isBlkdev: (function(mode) {
  return (mode & 61440) === 24576;
 }),
 isFIFO: (function(mode) {
  return (mode & 61440) === 4096;
 }),
 isSocket: (function(mode) {
  return (mode & 49152) === 49152;
 }),
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: (function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 }),
 flagsToPermissionString: (function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 }),
 nodePermissions: (function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 mayLookup: (function(dir) {
  var err = FS.nodePermissions(dir, "x");
  if (err) return err;
  if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
  return 0;
 }),
 mayCreate: (function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return ERRNO_CODES.EEXIST;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 }),
 mayDelete: (function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var err = FS.nodePermissions(dir, "wx");
  if (err) {
   return err;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return ERRNO_CODES.ENOTDIR;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return ERRNO_CODES.EBUSY;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return 0;
 }),
 mayOpen: (function(node, flags) {
  if (!node) {
   return ERRNO_CODES.ENOENT;
  }
  if (FS.isLink(node.mode)) {
   return ERRNO_CODES.ELOOP;
  } else if (FS.isDir(node.mode)) {
   if ((flags & 2097155) !== 0 || flags & 512) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 }),
 MAX_OPEN_FDS: 4096,
 nextfd: (function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
 }),
 getStream: (function(fd) {
  return FS.streams[fd];
 }),
 createStream: (function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = (function() {});
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: (function() {
      return this.node;
     }),
     set: (function(val) {
      this.node = val;
     })
    },
    isRead: {
     get: (function() {
      return (this.flags & 2097155) !== 1;
     })
    },
    isWrite: {
     get: (function() {
      return (this.flags & 2097155) !== 0;
     })
    },
    isAppend: {
     get: (function() {
      return this.flags & 1024;
     })
    }
   });
  }
  var newStream = new FS.FSStream;
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 }),
 closeStream: (function(fd) {
  FS.streams[fd] = null;
 }),
 chrdev_stream_ops: {
  open: (function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  }),
  llseek: (function() {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  })
 },
 major: (function(dev) {
  return dev >> 8;
 }),
 minor: (function(dev) {
  return dev & 255;
 }),
 makedev: (function(ma, mi) {
  return ma << 8 | mi;
 }),
 registerDevice: (function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 }),
 getDevice: (function(dev) {
  return FS.devices[dev];
 }),
 getMounts: (function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 }),
 syncfs: (function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= mounts.length) {
    callback(null);
   }
  }
  mounts.forEach((function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  }));
 }),
 mount: (function(type, opts, mountpoint) {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 }),
 unmount: (function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach((function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  }));
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 }),
 lookup: (function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 }),
 mknod: (function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.mayCreate(parent, name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 }),
 create: (function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 }),
 mkdir: (function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 }),
 mkdev: (function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 }),
 symlink: (function(oldpath, newpath) {
  if (!PATH.resolve(oldpath)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var newname = PATH.basename(newpath);
  var err = FS.mayCreate(parent, newname);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 }),
 rename: (function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  relative = PATH.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var err = FS.mayDelete(old_dir, old_name, isdir);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (new_dir !== old_dir) {
   err = FS.nodePermissions(old_dir, "w");
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 }),
 rmdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, true);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  return node.node_ops.readdir(node);
 }),
 unlink: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, false);
  if (err) {
   if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readlink: (function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 }),
 stat: (function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return node.node_ops.getattr(node);
 }),
 lstat: (function(path) {
  return FS.stat(path, true);
 }),
 chmod: (function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 }),
 lchmod: (function(path, mode) {
  FS.chmod(path, mode, true);
 }),
 fchmod: (function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chmod(stream.node, mode);
 }),
 chown: (function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 }),
 lchown: (function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 }),
 fchown: (function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chown(stream.node, uid, gid);
 }),
 truncate: (function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.nodePermissions(node, "w");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 }),
 ftruncate: (function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  FS.truncate(stream.node, len);
 }),
 utime: (function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 }),
 open: (function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  if (!created) {
   var err = FS.mayOpen(node, flags);
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    Module["printErr"]("read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 }),
 close: (function(stream) {
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
 }),
 llseek: (function(stream, offset, whence) {
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 }),
 read: (function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 }),
 write: (function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if (stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 }),
 allocate: (function(stream, offset, length) {
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
  }
  stream.stream_ops.allocate(stream, offset, length);
 }),
 mmap: (function(stream, buffer, offset, length, position, prot, flags) {
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EACCES);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
 }),
 msync: (function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 }),
 munmap: (function(stream) {
  return 0;
 }),
 ioctl: (function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 }),
 readFile: (function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 }),
 writeFile: (function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  opts.encoding = opts.encoding || "utf8";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var stream = FS.open(path, opts.flags, opts.mode);
  if (opts.encoding === "utf8") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
  } else if (opts.encoding === "binary") {
   FS.write(stream, data, 0, data.length, 0, opts.canOwn);
  }
  FS.close(stream);
 }),
 cwd: (function() {
  return FS.currentPath;
 }),
 chdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  var err = FS.nodePermissions(lookup.node, "x");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  FS.currentPath = lookup.path;
 }),
 createDefaultDirectories: (function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 }),
 createDefaultDevices: (function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: (function() {
    return 0;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    return length;
   })
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto !== "undefined") {
   var randomBuffer = new Uint8Array(1);
   random_device = (function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   });
  } else if (ENVIRONMENT_IS_NODE) {
   random_device = (function() {
    return require("crypto").randomBytes(1)[0];
   });
  } else {
   random_device = (function() {
    return Math.random() * 256 | 0;
   });
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 }),
 createSpecialDirectories: (function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: (function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: (function() {
         return stream.path;
        })
       }
      };
      ret.parent = ret;
      return ret;
     })
    };
    return node;
   })
  }, {}, "/proc/self/fd");
 }),
 createStandardStreams: (function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  var stdout = FS.open("/dev/stdout", "w");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 }),
 ensureErrnoError: (function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = (function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   });
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
   if (this.stack) this.stack = demangleAll(this.stack);
  };
  FS.ErrnoError.prototype = new Error;
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ ERRNO_CODES.ENOENT ].forEach((function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  }));
 }),
 staticInit: (function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS,
   "NODEFS": NODEFS,
   "WORKERFS": WORKERFS
  };
 }),
 init: (function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 }),
 quit: (function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 }),
 getMode: (function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 }),
 joinPath: (function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 }),
 absolutePath: (function(relative, base) {
  return PATH.resolve(base, relative);
 }),
 standardizePath: (function(path) {
  return PATH.normalize(path);
 }),
 findObject: (function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   ___setErrNo(ret.error);
   return null;
  }
 }),
 analyzePath: (function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 }),
 createFolder: (function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 }),
 createPath: (function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 }),
 createFile: (function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 }),
 createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 }),
 createDevice: (function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: (function(stream) {
    stream.seekable = false;
   }),
   close: (function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   }),
   read: (function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   })
  });
  return FS.mkdev(path, mode, dev);
 }),
 createLink: (function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 }),
 forceLoadFile: (function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (Module["read"]) {
   try {
    obj.contents = intArrayFromString(Module["read"](obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) ___setErrNo(ERRNO_CODES.EIO);
  return success;
 }),
 createLazyFile: (function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest;
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   });
   var lazyArray = this;
   lazyArray.setDataGetter((function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   }));
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array;
   Object.defineProperty(lazyArray, "length", {
    get: (function() {
     if (!this.lengthKnown) {
      this.cacheLength();
     }
     return this._length;
    })
   });
   Object.defineProperty(lazyArray, "chunkSize", {
    get: (function() {
     if (!this.lengthKnown) {
      this.cacheLength();
     }
     return this._chunkSize;
    })
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperty(node, "usedBytes", {
   get: (function() {
    return this.contents.length;
   })
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach((function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    return fn.apply(null, arguments);
   };
  }));
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EIO);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 }),
 createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach((function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, (function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     }));
     handled = true;
    }
   }));
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, (function(byteArray) {
    processData(byteArray);
   }), onerror);
  } else {
   processData(url);
  }
 }),
 indexedDB: (function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 }),
 DB_NAME: (function() {
  return "EM_FS_" + window.location.pathname;
 }),
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   console.log("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }),
 loadFilesFromDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 })
};
var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 mappings: {},
 umask: 511,
 calculateAt: (function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 }),
 doStat: (function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -ERRNO_CODES.ENOTDIR;
   }
   throw e;
  }
  HEAP32[buf >> 2] = stat.dev;
  HEAP32[buf + 4 >> 2] = 0;
  HEAP32[buf + 8 >> 2] = stat.ino;
  HEAP32[buf + 12 >> 2] = stat.mode;
  HEAP32[buf + 16 >> 2] = stat.nlink;
  HEAP32[buf + 20 >> 2] = stat.uid;
  HEAP32[buf + 24 >> 2] = stat.gid;
  HEAP32[buf + 28 >> 2] = stat.rdev;
  HEAP32[buf + 32 >> 2] = 0;
  HEAP32[buf + 36 >> 2] = stat.size;
  HEAP32[buf + 40 >> 2] = 4096;
  HEAP32[buf + 44 >> 2] = stat.blocks;
  HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
  HEAP32[buf + 52 >> 2] = 0;
  HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  HEAP32[buf + 60 >> 2] = 0;
  HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  HEAP32[buf + 68 >> 2] = 0;
  HEAP32[buf + 72 >> 2] = stat.ino;
  return 0;
 }),
 doMsync: (function(addr, stream, len, flags) {
  var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
  FS.msync(stream, buffer, 0, len, flags);
 }),
 doMkdir: (function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 }),
 doMknod: (function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;
  default:
   return -ERRNO_CODES.EINVAL;
  }
  FS.mknod(path, mode, dev);
  return 0;
 }),
 doReadlink: (function(path, buf, bufsize) {
  if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
  var ret = FS.readlink(path);
  ret = ret.slice(0, Math.max(0, bufsize));
  writeStringToMemory(ret, buf, true);
  return ret.length;
 }),
 doAccess: (function(path, amode) {
  if (amode & ~7) {
   return -ERRNO_CODES.EINVAL;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 doDup: (function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 }),
 doReadv: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 }),
 doWritev: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 }),
 varargs: 0,
 get: (function(varargs) {
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
  return ret;
 }),
 getStr: (function() {
  var ret = Pointer_stringify(SYSCALLS.get());
  return ret;
 }),
 getStreamFromFD: (function() {
  var stream = FS.getStream(SYSCALLS.get());
  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return stream;
 }),
 getSocketFromFD: (function() {
  var socket = SOCKFS.getSocket(SYSCALLS.get());
  if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return socket;
 }),
 getSocketAddress: (function(allowNull) {
  var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
  if (allowNull && addrp === 0) return null;
  var info = __read_sockaddr(addrp, addrlen);
  if (info.errno) throw new FS.ErrnoError(info.errno);
  info.addr = DNS.lookup_addr(info.addr) || info.addr;
  return info;
 }),
 get64: (function() {
  var low = SYSCALLS.get(), high = SYSCALLS.get();
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 }),
 getZero: (function() {
  assert(SYSCALLS.get() === 0);
 })
};
function ___syscall54(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
  switch (op) {
  case 21505:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21506:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21519:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    var argp = SYSCALLS.get();
    HEAP32[argp >> 2] = 0;
    return 0;
   }
  case 21520:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return -ERRNO_CODES.EINVAL;
   }
  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }
  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _sysconf(name) {
 switch (name) {
 case 30:
  return PAGE_SIZE;
 case 85:
  return totalMemory / PAGE_SIZE;
 case 132:
 case 133:
 case 12:
 case 137:
 case 138:
 case 15:
 case 235:
 case 16:
 case 17:
 case 18:
 case 19:
 case 20:
 case 149:
 case 13:
 case 10:
 case 236:
 case 153:
 case 9:
 case 21:
 case 22:
 case 159:
 case 154:
 case 14:
 case 77:
 case 78:
 case 139:
 case 80:
 case 81:
 case 82:
 case 68:
 case 67:
 case 164:
 case 11:
 case 29:
 case 47:
 case 48:
 case 95:
 case 52:
 case 51:
 case 46:
  return 200809;
 case 79:
  return 0;
 case 27:
 case 246:
 case 127:
 case 128:
 case 23:
 case 24:
 case 160:
 case 161:
 case 181:
 case 182:
 case 242:
 case 183:
 case 184:
 case 243:
 case 244:
 case 245:
 case 165:
 case 178:
 case 179:
 case 49:
 case 50:
 case 168:
 case 169:
 case 175:
 case 170:
 case 171:
 case 172:
 case 97:
 case 76:
 case 32:
 case 173:
 case 35:
  return -1;
 case 176:
 case 177:
 case 7:
 case 155:
 case 8:
 case 157:
 case 125:
 case 126:
 case 92:
 case 93:
 case 129:
 case 130:
 case 131:
 case 94:
 case 91:
  return 1;
 case 74:
 case 60:
 case 69:
 case 70:
 case 4:
  return 1024;
 case 31:
 case 42:
 case 72:
  return 32;
 case 87:
 case 26:
 case 33:
  return 2147483647;
 case 34:
 case 1:
  return 47839;
 case 38:
 case 36:
  return 99;
 case 43:
 case 37:
  return 2048;
 case 0:
  return 2097152;
 case 3:
  return 65536;
 case 28:
  return 32768;
 case 44:
  return 32767;
 case 75:
  return 16384;
 case 39:
  return 1e3;
 case 89:
  return 700;
 case 71:
  return 256;
 case 40:
  return 255;
 case 2:
  return 100;
 case 180:
  return 64;
 case 25:
  return 20;
 case 5:
  return 16;
 case 6:
  return 6;
 case 73:
  return 4;
 case 84:
  {
   if (typeof navigator === "object") return navigator["hardwareConcurrency"] || 1;
   return 1;
  }
 }
 ___setErrNo(ERRNO_CODES.EINVAL);
 return -1;
}
Module["_bitshift64Lshr"] = _bitshift64Lshr;
function upcastPointer(ptr, ptrClass, desiredClass) {
 while (ptrClass !== desiredClass) {
  if (!ptrClass.upcast) {
   throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
  }
  ptr = ptrClass.upcast(ptr);
  ptrClass = ptrClass.baseClass;
 }
 return ptr;
}
function constNoSmartPtrRawPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  return 0;
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 return ptr;
}
function genericPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  if (this.isSmartPointer) {
   var ptr = this.rawConstructor();
   if (destructors !== null) {
    destructors.push(this.rawDestructor, ptr);
   }
   return ptr;
  } else {
   return 0;
  }
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 if (!this.isConst && handle.$$.ptrType.isConst) {
  throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 if (this.isSmartPointer) {
  if (undefined === handle.$$.smartPtr) {
   throwBindingError("Passing raw pointer to smart pointer is illegal");
  }
  switch (this.sharingPolicy) {
  case 0:
   if (handle.$$.smartPtrType === this) {
    ptr = handle.$$.smartPtr;
   } else {
    throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
   }
   break;
  case 1:
   ptr = handle.$$.smartPtr;
   break;
  case 2:
   if (handle.$$.smartPtrType === this) {
    ptr = handle.$$.smartPtr;
   } else {
    var clonedHandle = handle["clone"]();
    ptr = this.rawShare(ptr, __emval_register((function() {
     clonedHandle["delete"]();
    })));
    if (destructors !== null) {
     destructors.push(this.rawDestructor, ptr);
    }
   }
   break;
  default:
   throwBindingError("Unsupporting sharing policy");
  }
 }
 return ptr;
}
function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  return 0;
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 if (handle.$$.ptrType.isConst) {
  throwBindingError("Cannot convert argument of type " + handle.$$.ptrType.name + " to parameter type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 return ptr;
}
function RegisteredPointer_getPointee(ptr) {
 if (this.rawGetPointee) {
  ptr = this.rawGetPointee(ptr);
 }
 return ptr;
}
function RegisteredPointer_destructor(ptr) {
 if (this.rawDestructor) {
  this.rawDestructor(ptr);
 }
}
function RegisteredPointer_deleteObject(handle) {
 if (handle !== null) {
  handle["delete"]();
 }
}
function downcastPointer(ptr, ptrClass, desiredClass) {
 if (ptrClass === desiredClass) {
  return ptr;
 }
 if (undefined === desiredClass.baseClass) {
  return null;
 }
 var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
 if (rv === null) {
  return null;
 }
 return desiredClass.downcast(rv);
}
var registeredPointers = {};
function getInheritedInstanceCount() {
 return Object.keys(registeredInstances).length;
}
function getLiveInheritedInstances() {
 var rv = [];
 for (var k in registeredInstances) {
  if (registeredInstances.hasOwnProperty(k)) {
   rv.push(registeredInstances[k]);
  }
 }
 return rv;
}
var deletionQueue = [];
function flushPendingDeletes() {
 while (deletionQueue.length) {
  var obj = deletionQueue.pop();
  obj.$$.deleteScheduled = false;
  obj["delete"]();
 }
}
var delayFunction = undefined;
function setDelayFunction(fn) {
 delayFunction = fn;
 if (deletionQueue.length && delayFunction) {
  delayFunction(flushPendingDeletes);
 }
}
function init_embind() {
 Module["getInheritedInstanceCount"] = getInheritedInstanceCount;
 Module["getLiveInheritedInstances"] = getLiveInheritedInstances;
 Module["flushPendingDeletes"] = flushPendingDeletes;
 Module["setDelayFunction"] = setDelayFunction;
}
var registeredInstances = {};
function getBasestPointer(class_, ptr) {
 if (ptr === undefined) {
  throwBindingError("ptr should not be undefined");
 }
 while (class_.baseClass) {
  ptr = class_.upcast(ptr);
  class_ = class_.baseClass;
 }
 return ptr;
}
function getInheritedInstance(class_, ptr) {
 ptr = getBasestPointer(class_, ptr);
 return registeredInstances[ptr];
}
var _throwInternalError = undefined;
function makeClassHandle(prototype, record) {
 if (!record.ptrType || !record.ptr) {
  throwInternalError("makeClassHandle requires ptr and ptrType");
 }
 var hasSmartPtrType = !!record.smartPtrType;
 var hasSmartPtr = !!record.smartPtr;
 if (hasSmartPtrType !== hasSmartPtr) {
  throwInternalError("Both smartPtrType and smartPtr must be specified");
 }
 record.count = {
  value: 1
 };
 return Object.create(prototype, {
  $$: {
   value: record
  }
 });
}
function RegisteredPointer_fromWireType(ptr) {
 var rawPointer = this.getPointee(ptr);
 if (!rawPointer) {
  this.destructor(ptr);
  return null;
 }
 var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);
 if (undefined !== registeredInstance) {
  if (0 === registeredInstance.$$.count.value) {
   registeredInstance.$$.ptr = rawPointer;
   registeredInstance.$$.smartPtr = ptr;
   return registeredInstance["clone"]();
  } else {
   var rv = registeredInstance["clone"]();
   this.destructor(ptr);
   return rv;
  }
 }
 function makeDefaultHandle() {
  if (this.isSmartPointer) {
   return makeClassHandle(this.registeredClass.instancePrototype, {
    ptrType: this.pointeeType,
    ptr: rawPointer,
    smartPtrType: this,
    smartPtr: ptr
   });
  } else {
   return makeClassHandle(this.registeredClass.instancePrototype, {
    ptrType: this,
    ptr: ptr
   });
  }
 }
 var actualType = this.registeredClass.getActualType(rawPointer);
 var registeredPointerRecord = registeredPointers[actualType];
 if (!registeredPointerRecord) {
  return makeDefaultHandle.call(this);
 }
 var toType;
 if (this.isConst) {
  toType = registeredPointerRecord.constPointerType;
 } else {
  toType = registeredPointerRecord.pointerType;
 }
 var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);
 if (dp === null) {
  return makeDefaultHandle.call(this);
 }
 if (this.isSmartPointer) {
  return makeClassHandle(toType.registeredClass.instancePrototype, {
   ptrType: toType,
   ptr: dp,
   smartPtrType: this,
   smartPtr: ptr
  });
 } else {
  return makeClassHandle(toType.registeredClass.instancePrototype, {
   ptrType: toType,
   ptr: dp
  });
 }
}
function init_RegisteredPointer() {
 RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
 RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
 RegisteredPointer.prototype["argPackAdvance"] = 8;
 RegisteredPointer.prototype["readValueFromPointer"] = simpleReadValueFromPointer;
 RegisteredPointer.prototype["deleteObject"] = RegisteredPointer_deleteObject;
 RegisteredPointer.prototype["fromWireType"] = RegisteredPointer_fromWireType;
}
function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {
 this.name = name;
 this.registeredClass = registeredClass;
 this.isReference = isReference;
 this.isConst = isConst;
 this.isSmartPointer = isSmartPointer;
 this.pointeeType = pointeeType;
 this.sharingPolicy = sharingPolicy;
 this.rawGetPointee = rawGetPointee;
 this.rawConstructor = rawConstructor;
 this.rawShare = rawShare;
 this.rawDestructor = rawDestructor;
 if (!isSmartPointer && registeredClass.baseClass === undefined) {
  if (isConst) {
   this["toWireType"] = constNoSmartPtrRawPointerToWireType;
   this.destructorFunction = null;
  } else {
   this["toWireType"] = nonConstNoSmartPtrRawPointerToWireType;
   this.destructorFunction = null;
  }
 } else {
  this["toWireType"] = genericPointerToWireType;
 }
}
function requireFunction(signature, rawFunction) {
 signature = readLatin1String(signature);
 function makeDynCaller(dynCall) {
  var args = [];
  for (var i = 1; i < signature.length; ++i) {
   args.push("a" + i);
  }
  var name = "dynCall_" + signature + "_" + rawFunction;
  var body = "return function " + name + "(" + args.join(", ") + ") {\n";
  body += "    return dynCall(rawFunction" + (args.length ? ", " : "") + args.join(", ") + ");\n";
  body += "};\n";
  return (new Function("dynCall", "rawFunction", body))(dynCall, rawFunction);
 }
 var fp;
 if (Module["FUNCTION_TABLE_" + signature] !== undefined) {
  fp = Module["FUNCTION_TABLE_" + signature][rawFunction];
 } else if (typeof FUNCTION_TABLE !== "undefined") {
  fp = FUNCTION_TABLE[rawFunction];
 } else {
  var dc = asm["dynCall_" + signature];
  if (dc === undefined) {
   dc = asm["dynCall_" + signature.replace(/f/g, "d")];
   if (dc === undefined) {
    throwBindingError("No dynCall invoker for signature: " + signature);
   }
  }
  fp = makeDynCaller(dc);
 }
 if (typeof fp !== "function") {
  throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
 }
 return fp;
}
function __embind_register_smart_ptr(rawType, rawPointeeType, name, sharingPolicy, getPointeeSignature, rawGetPointee, constructorSignature, rawConstructor, shareSignature, rawShare, destructorSignature, rawDestructor) {
 name = readLatin1String(name);
 rawGetPointee = requireFunction(getPointeeSignature, rawGetPointee);
 rawConstructor = requireFunction(constructorSignature, rawConstructor);
 rawShare = requireFunction(shareSignature, rawShare);
 rawDestructor = requireFunction(destructorSignature, rawDestructor);
 whenDependentTypesAreResolved([ rawType ], [ rawPointeeType ], (function(pointeeType) {
  pointeeType = pointeeType[0];
  var registeredPointer = new RegisteredPointer(name, pointeeType.registeredClass, false, false, true, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor);
  return [ registeredPointer ];
 }));
}
var _BDtoIHigh = true;
function _pthread_cleanup_push(routine, arg) {
 __ATEXIT__.push((function() {
  Runtime.dynCall("vi", routine, [ arg ]);
 }));
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
function new_(constructor, argumentList) {
 if (!(constructor instanceof Function)) {
  throw new TypeError("new_ called with constructor type " + typeof constructor + " which is not a function");
 }
 var dummy = createNamedFunction(constructor.name || "unknownFunctionName", (function() {}));
 dummy.prototype = constructor.prototype;
 var obj = new dummy;
 var r = constructor.apply(obj, argumentList);
 return r instanceof Object ? r : obj;
}
function runDestructors(destructors) {
 while (destructors.length) {
  var ptr = destructors.pop();
  var del = destructors.pop();
  del(ptr);
 }
}
function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
 var argCount = argTypes.length;
 if (argCount < 2) {
  throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
 }
 var isClassMethodFunc = argTypes[1] !== null && classType !== null;
 var argsList = "";
 var argsListWired = "";
 for (var i = 0; i < argCount - 2; ++i) {
  argsList += (i !== 0 ? ", " : "") + "arg" + i;
  argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
 }
 var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";
 var needsDestructorStack = false;
 for (var i = 1; i < argTypes.length; ++i) {
  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
   needsDestructorStack = true;
   break;
  }
 }
 if (needsDestructorStack) {
  invokerFnBody += "var destructors = [];\n";
 }
 var dtorStack = needsDestructorStack ? "destructors" : "null";
 var args1 = [ "throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam" ];
 var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];
 if (isClassMethodFunc) {
  invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
 }
 for (var i = 0; i < argCount - 2; ++i) {
  invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
  args1.push("argType" + i);
  args2.push(argTypes[i + 2]);
 }
 if (isClassMethodFunc) {
  argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
 }
 var returns = argTypes[0].name !== "void";
 invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";
 if (needsDestructorStack) {
  invokerFnBody += "runDestructors(destructors);\n";
 } else {
  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
   var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";
   if (argTypes[i].destructorFunction !== null) {
    invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
    args1.push(paramName + "_dtor");
    args2.push(argTypes[i].destructorFunction);
   }
  }
 }
 if (returns) {
  invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
 } else {}
 invokerFnBody += "}\n";
 args1.push(invokerFnBody);
 var invokerFunction = new_(Function, args1).apply(null, args2);
 return invokerFunction;
}
function ensureOverloadTable(proto, methodName, humanName) {
 if (undefined === proto[methodName].overloadTable) {
  var prevFunc = proto[methodName];
  proto[methodName] = (function() {
   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
    throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
   }
   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
  });
  proto[methodName].overloadTable = [];
  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
 }
}
function heap32VectorToArray(count, firstElement) {
 var array = [];
 for (var i = 0; i < count; i++) {
  array.push(HEAP32[(firstElement >> 2) + i]);
 }
 return array;
}
var UnboundTypeError = undefined;
function throwUnboundTypeError(message, types) {
 var unboundTypes = [];
 var seen = {};
 function visit(type) {
  if (seen[type]) {
   return;
  }
  if (registeredTypes[type]) {
   return;
  }
  if (typeDependencies[type]) {
   typeDependencies[type].forEach(visit);
   return;
  }
  unboundTypes.push(type);
  seen[type] = true;
 }
 types.forEach(visit);
 throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([ ", " ]));
}
function __embind_register_class_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, fn) {
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 methodName = readLatin1String(methodName);
 rawInvoker = requireFunction(invokerSignature, rawInvoker);
 whenDependentTypesAreResolved([], [ rawClassType ], (function(classType) {
  classType = classType[0];
  var humanName = classType.name + "." + methodName;
  function unboundTypesHandler() {
   throwUnboundTypeError("Cannot call " + humanName + " due to unbound types", rawArgTypes);
  }
  var proto = classType.registeredClass.constructor;
  if (undefined === proto[methodName]) {
   unboundTypesHandler.argCount = argCount - 1;
   proto[methodName] = unboundTypesHandler;
  } else {
   ensureOverloadTable(proto, methodName, humanName);
   proto[methodName].overloadTable[argCount - 1] = unboundTypesHandler;
  }
  whenDependentTypesAreResolved([], rawArgTypes, (function(argTypes) {
   var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));
   var func = craftInvokerFunction(humanName, invokerArgsArray, null, rawInvoker, fn);
   if (undefined === proto[methodName].overloadTable) {
    proto[methodName] = func;
   } else {
    proto[methodName].overloadTable[argCount - 1] = func;
   }
   return [];
  }));
  return [];
 }));
}
function _pthread_cleanup_pop() {
 assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");
 __ATEXIT__.pop();
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
 return dest;
}
Module["_memcpy"] = _memcpy;
var _llvm_pow_f64 = Math_pow;
function _sbrk(bytes) {
 var self = _sbrk;
 if (!self.called) {
  DYNAMICTOP = alignMemoryPage(DYNAMICTOP);
  self.called = true;
  assert(Runtime.dynamicAlloc);
  self.alloc = Runtime.dynamicAlloc;
  Runtime.dynamicAlloc = (function() {
   abort("cannot dynamically allocate, sbrk now has control");
  });
 }
 var ret = DYNAMICTOP;
 if (bytes != 0) {
  var success = self.alloc(bytes);
  if (!success) return -1 >>> 0;
 }
 return ret;
}
Module["_memmove"] = _memmove;
var _emscripten_preinvoke = true;
var _BItoD = true;
function ___cxa_rethrow() {
 ___cxa_end_catch.rethrown = true;
 var ptr = EXCEPTIONS.caught.pop();
 EXCEPTIONS.last = ptr;
 throw ptr;
}
function __embind_register_memory_view(rawType, dataTypeIndex, name) {
 var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];
 var TA = typeMapping[dataTypeIndex];
 function decodeMemoryView(handle) {
  handle = handle >> 2;
  var heap = HEAPU32;
  var size = heap[handle];
  var data = heap[handle + 1];
  return new TA(heap["buffer"], data, size);
 }
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": decodeMemoryView,
  "argPackAdvance": 8,
  "readValueFromPointer": decodeMemoryView
 }, {
  ignoreDuplicateRegistrations: true
 });
}
var _expf = Math_exp;
function __embind_register_std_string(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": (function(value) {
   var length = HEAPU32[value >> 2];
   var a = new Array(length);
   for (var i = 0; i < length; ++i) {
    a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
   }
   _free(value);
   return a.join("");
  }),
  "toWireType": (function(destructors, value) {
   if (value instanceof ArrayBuffer) {
    value = new Uint8Array(value);
   }
   function getTAElement(ta, index) {
    return ta[index];
   }
   function getStringElement(string, index) {
    return string.charCodeAt(index);
   }
   var getElement;
   if (value instanceof Uint8Array) {
    getElement = getTAElement;
   } else if (value instanceof Int8Array) {
    getElement = getTAElement;
   } else if (typeof value === "string") {
    getElement = getStringElement;
   } else {
    throwBindingError("Cannot pass non-string to std::string");
   }
   var length = value.length;
   var ptr = _malloc(4 + length);
   HEAPU32[ptr >> 2] = length;
   for (var i = 0; i < length; ++i) {
    var charCode = getElement(value, i);
    if (charCode > 255) {
     _free(ptr);
     throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
    }
    HEAPU8[ptr + 4 + i] = charCode;
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: (function(ptr) {
   _free(ptr);
  })
 });
}
function ___assert_fail(condition, filename, line, func) {
 ABORT = true;
 throw "Assertion failed: " + Pointer_stringify(condition) + ", at: " + [ filename ? Pointer_stringify(filename) : "unknown filename", line, func ? Pointer_stringify(func) : "unknown function" ] + " at " + stackTrace();
}
function __embind_register_void(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  isVoid: true,
  name: name,
  "argPackAdvance": 0,
  "fromWireType": (function() {
   return undefined;
  }),
  "toWireType": (function(destructors, o) {
   return undefined;
  })
 });
}
Module["_memset"] = _memset;
var _BDtoILow = true;
function ___gxx_personality_v0() {}
var _logf = Math_log;
Module["_bitshift64Shl"] = _bitshift64Shl;
function _abort() {
 Module["abort"]();
}
function validateThis(this_, classType, humanName) {
 if (!(this_ instanceof Object)) {
  throwBindingError(humanName + ' with invalid "this": ' + this_);
 }
 if (!(this_ instanceof classType.registeredClass.constructor)) {
  throwBindingError(humanName + ' incompatible with "this" of type ' + this_.constructor.name);
 }
 if (!this_.$$.ptr) {
  throwBindingError("cannot call emscripten binding method " + humanName + " on deleted object");
 }
 return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);
}
function __embind_register_class_property(classType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {
 fieldName = readLatin1String(fieldName);
 getter = requireFunction(getterSignature, getter);
 whenDependentTypesAreResolved([], [ classType ], (function(classType) {
  classType = classType[0];
  var humanName = classType.name + "." + fieldName;
  var desc = {
   get: (function() {
    throwUnboundTypeError("Cannot access " + humanName + " due to unbound types", [ getterReturnType, setterArgumentType ]);
   }),
   enumerable: true,
   configurable: true
  };
  if (setter) {
   desc.set = (function() {
    throwUnboundTypeError("Cannot access " + humanName + " due to unbound types", [ getterReturnType, setterArgumentType ]);
   });
  } else {
   desc.set = (function(v) {
    throwBindingError(humanName + " is a read-only property");
   });
  }
  Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
  whenDependentTypesAreResolved([], setter ? [ getterReturnType, setterArgumentType ] : [ getterReturnType ], (function(types) {
   var getterReturnType = types[0];
   var desc = {
    get: (function() {
     var ptr = validateThis(this, classType, humanName + " getter");
     return getterReturnType["fromWireType"](getter(getterContext, ptr));
    }),
    enumerable: true
   };
   if (setter) {
    setter = requireFunction(setterSignature, setter);
    var setterArgumentType = types[1];
    desc.set = (function(v) {
     var ptr = validateThis(this, classType, humanName + " setter");
     var destructors = [];
     setter(setterContext, ptr, setterArgumentType["toWireType"](destructors, v));
     runDestructors(destructors);
    });
   }
   Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);
   return [];
  }));
  return [];
 }));
}
function _pthread_once(ptr, func) {
 if (!_pthread_once.seen) _pthread_once.seen = {};
 if (ptr in _pthread_once.seen) return;
 Runtime.dynCall("v", func);
 _pthread_once.seen[ptr] = 1;
}
var _tan = Math_tan;
function ClassHandle_isAliasOf(other) {
 if (!(this instanceof ClassHandle)) {
  return false;
 }
 if (!(other instanceof ClassHandle)) {
  return false;
 }
 var leftClass = this.$$.ptrType.registeredClass;
 var left = this.$$.ptr;
 var rightClass = other.$$.ptrType.registeredClass;
 var right = other.$$.ptr;
 while (leftClass.baseClass) {
  left = leftClass.upcast(left);
  leftClass = leftClass.baseClass;
 }
 while (rightClass.baseClass) {
  right = rightClass.upcast(right);
  rightClass = rightClass.baseClass;
 }
 return leftClass === rightClass && left === right;
}
function shallowCopyInternalPointer(o) {
 return {
  count: o.count,
  deleteScheduled: o.deleteScheduled,
  preservePointerOnDelete: o.preservePointerOnDelete,
  ptr: o.ptr,
  ptrType: o.ptrType,
  smartPtr: o.smartPtr,
  smartPtrType: o.smartPtrType
 };
}
function throwInstanceAlreadyDeleted(obj) {
 function getInstanceTypeName(handle) {
  return handle.$$.ptrType.registeredClass.name;
 }
 throwBindingError(getInstanceTypeName(obj) + " instance already deleted");
}
function ClassHandle_clone() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.preservePointerOnDelete) {
  this.$$.count.value += 1;
  return this;
 } else {
  var clone = Object.create(Object.getPrototypeOf(this), {
   $$: {
    value: shallowCopyInternalPointer(this.$$)
   }
  });
  clone.$$.count.value += 1;
  clone.$$.deleteScheduled = false;
  return clone;
 }
}
function runDestructor(handle) {
 var $$ = handle.$$;
 if ($$.smartPtr) {
  $$.smartPtrType.rawDestructor($$.smartPtr);
 } else {
  $$.ptrType.registeredClass.rawDestructor($$.ptr);
 }
}
function ClassHandle_delete() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
  throwBindingError("Object already scheduled for deletion");
 }
 this.$$.count.value -= 1;
 var toDelete = 0 === this.$$.count.value;
 if (toDelete) {
  runDestructor(this);
 }
 if (!this.$$.preservePointerOnDelete) {
  this.$$.smartPtr = undefined;
  this.$$.ptr = undefined;
 }
}
function ClassHandle_isDeleted() {
 return !this.$$.ptr;
}
function ClassHandle_deleteLater() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
  throwBindingError("Object already scheduled for deletion");
 }
 deletionQueue.push(this);
 if (deletionQueue.length === 1 && delayFunction) {
  delayFunction(flushPendingDeletes);
 }
 this.$$.deleteScheduled = true;
 return this;
}
function init_ClassHandle() {
 ClassHandle.prototype["isAliasOf"] = ClassHandle_isAliasOf;
 ClassHandle.prototype["clone"] = ClassHandle_clone;
 ClassHandle.prototype["delete"] = ClassHandle_delete;
 ClassHandle.prototype["isDeleted"] = ClassHandle_isDeleted;
 ClassHandle.prototype["deleteLater"] = ClassHandle_deleteLater;
}
function ClassHandle() {}
function exposePublicSymbol(name, value, numArguments) {
 if (Module.hasOwnProperty(name)) {
  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
   throwBindingError("Cannot register public name '" + name + "' twice");
  }
  ensureOverloadTable(Module, name, name);
  if (Module.hasOwnProperty(numArguments)) {
   throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
  }
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  if (undefined !== numArguments) {
   Module[name].numArguments = numArguments;
  }
 }
}
function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {
 this.name = name;
 this.constructor = constructor;
 this.instancePrototype = instancePrototype;
 this.rawDestructor = rawDestructor;
 this.baseClass = baseClass;
 this.getActualType = getActualType;
 this.upcast = upcast;
 this.downcast = downcast;
 this.pureVirtualFunctions = [];
}
function replacePublicSymbol(name, value, numArguments) {
 if (!Module.hasOwnProperty(name)) {
  throwInternalError("Replacing nonexistant public symbol");
 }
 if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
 }
}
function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {
 name = readLatin1String(name);
 getActualType = requireFunction(getActualTypeSignature, getActualType);
 if (upcast) {
  upcast = requireFunction(upcastSignature, upcast);
 }
 if (downcast) {
  downcast = requireFunction(downcastSignature, downcast);
 }
 rawDestructor = requireFunction(destructorSignature, rawDestructor);
 var legalFunctionName = makeLegalFunctionName(name);
 exposePublicSymbol(legalFunctionName, (function() {
  throwUnboundTypeError("Cannot construct " + name + " due to unbound types", [ baseClassRawType ]);
 }));
 whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], (function(base) {
  base = base[0];
  var baseClass;
  var basePrototype;
  if (baseClassRawType) {
   baseClass = base.registeredClass;
   basePrototype = baseClass.instancePrototype;
  } else {
   basePrototype = ClassHandle.prototype;
  }
  var constructor = createNamedFunction(legalFunctionName, (function() {
   if (Object.getPrototypeOf(this) !== instancePrototype) {
    throw new BindingError("Use 'new' to construct " + name);
   }
   if (undefined === registeredClass.constructor_body) {
    throw new BindingError(name + " has no accessible constructor");
   }
   var body = registeredClass.constructor_body[arguments.length];
   if (undefined === body) {
    throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
   }
   return body.apply(this, arguments);
  }));
  var instancePrototype = Object.create(basePrototype, {
   constructor: {
    value: constructor
   }
  });
  constructor.prototype = instancePrototype;
  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);
  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);
  var pointerConverter = new RegisteredPointer(name + "*", registeredClass, false, false, false);
  var constPointerConverter = new RegisteredPointer(name + " const*", registeredClass, false, true, false);
  registeredPointers[rawType] = {
   pointerType: pointerConverter,
   constPointerType: constPointerConverter
  };
  replacePublicSymbol(legalFunctionName, constructor);
  return [ referenceConverter, pointerConverter, constPointerConverter ];
 }));
}
function ___lock() {}
function ___unlock() {}
function _pthread_getspecific(key) {
 return PTHREAD_SPECIFIC[key] || 0;
}
var _fabs = Math_abs;
var _floor = Math_floor;
var _sqrt = Math_sqrt;
function _embind_repr(v) {
 if (v === null) {
  return "null";
 }
 var t = typeof v;
 if (t === "object" || t === "array" || t === "function") {
  return v.toString();
 } else {
  return "" + v;
 }
}
function integerReadValueFromPointer(name, shift, signed) {
 switch (shift) {
 case 0:
  return signed ? function readS8FromPointer(pointer) {
   return HEAP8[pointer];
  } : function readU8FromPointer(pointer) {
   return HEAPU8[pointer];
  };
 case 1:
  return signed ? function readS16FromPointer(pointer) {
   return HEAP16[pointer >> 1];
  } : function readU16FromPointer(pointer) {
   return HEAPU16[pointer >> 1];
  };
 case 2:
  return signed ? function readS32FromPointer(pointer) {
   return HEAP32[pointer >> 2];
  } : function readU32FromPointer(pointer) {
   return HEAPU32[pointer >> 2];
  };
 default:
  throw new TypeError("Unknown integer type: " + name);
 }
}
function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
 name = readLatin1String(name);
 if (maxRange === -1) {
  maxRange = 4294967295;
 }
 var shift = getShiftFromSize(size);
 var fromWireType = (function(value) {
  return value;
 });
 if (minRange === 0) {
  var bitshift = 32 - 8 * size;
  fromWireType = (function(value) {
   return value << bitshift >>> bitshift;
  });
 }
 registerType(primitiveType, {
  name: name,
  "fromWireType": fromWireType,
  "toWireType": (function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   if (value < minRange || value > maxRange) {
    throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
   }
   return value | 0;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
  destructorFunction: null
 });
}
function _emscripten_set_main_loop_timing(mode, value) {
 Browser.mainLoop.timingMode = mode;
 Browser.mainLoop.timingValue = value;
 if (!Browser.mainLoop.func) {
  console.error("emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.");
  return 1;
 }
 if (mode == 0) {
  Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
   setTimeout(Browser.mainLoop.runner, value);
  };
  Browser.mainLoop.method = "timeout";
 } else if (mode == 1) {
  Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
   Browser.requestAnimationFrame(Browser.mainLoop.runner);
  };
  Browser.mainLoop.method = "rAF";
 } else if (mode == 2) {
  if (!window["setImmediate"]) {
   var setImmediates = [];
   var emscriptenMainLoopMessageId = "__emcc";
   function Browser_setImmediate_messageHandler(event) {
    if (event.source === window && event.data === emscriptenMainLoopMessageId) {
     event.stopPropagation();
     setImmediates.shift()();
    }
   }
   window.addEventListener("message", Browser_setImmediate_messageHandler, true);
   window["setImmediate"] = function Browser_emulated_setImmediate(func) {
    setImmediates.push(func);
    window.postMessage(emscriptenMainLoopMessageId, "*");
   };
  }
  Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
   window["setImmediate"](Browser.mainLoop.runner);
  };
  Browser.mainLoop.method = "immediate";
 }
 return 0;
}
function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
 Module["noExitRuntime"] = true;
 assert(!Browser.mainLoop.func, "emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");
 Browser.mainLoop.func = func;
 Browser.mainLoop.arg = arg;
 var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
 Browser.mainLoop.runner = function Browser_mainLoop_runner() {
  if (ABORT) return;
  if (Browser.mainLoop.queue.length > 0) {
   var start = Date.now();
   var blocker = Browser.mainLoop.queue.shift();
   blocker.func(blocker.arg);
   if (Browser.mainLoop.remainingBlockers) {
    var remaining = Browser.mainLoop.remainingBlockers;
    var next = remaining % 1 == 0 ? remaining - 1 : Math.floor(remaining);
    if (blocker.counted) {
     Browser.mainLoop.remainingBlockers = next;
    } else {
     next = next + .5;
     Browser.mainLoop.remainingBlockers = (8 * remaining + next) / 9;
    }
   }
   console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + " ms");
   Browser.mainLoop.updateStatus();
   setTimeout(Browser.mainLoop.runner, 0);
   return;
  }
  if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
  if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
   Browser.mainLoop.scheduler();
   return;
  }
  if (Browser.mainLoop.method === "timeout" && Module.ctx) {
   Module.printErr("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");
   Browser.mainLoop.method = "";
  }
  Browser.mainLoop.runIter((function() {
   if (typeof arg !== "undefined") {
    Runtime.dynCall("vi", func, [ arg ]);
   } else {
    Runtime.dynCall("v", func);
   }
  }));
  if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  if (typeof SDL === "object" && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  Browser.mainLoop.scheduler();
 };
 if (!noSetTiming) {
  if (fps && fps > 0) _emscripten_set_main_loop_timing(0, 1e3 / fps); else _emscripten_set_main_loop_timing(1, 1);
  Browser.mainLoop.scheduler();
 }
 if (simulateInfiniteLoop) {
  throw "SimulateInfiniteLoop";
 }
}
var Browser = {
 mainLoop: {
  scheduler: null,
  method: "",
  currentlyRunningMainloop: 0,
  func: null,
  arg: 0,
  timingMode: 0,
  timingValue: 0,
  currentFrameNumber: 0,
  queue: [],
  pause: (function() {
   Browser.mainLoop.scheduler = null;
   Browser.mainLoop.currentlyRunningMainloop++;
  }),
  resume: (function() {
   Browser.mainLoop.currentlyRunningMainloop++;
   var timingMode = Browser.mainLoop.timingMode;
   var timingValue = Browser.mainLoop.timingValue;
   var func = Browser.mainLoop.func;
   Browser.mainLoop.func = null;
   _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true);
   _emscripten_set_main_loop_timing(timingMode, timingValue);
   Browser.mainLoop.scheduler();
  }),
  updateStatus: (function() {
   if (Module["setStatus"]) {
    var message = Module["statusMessage"] || "Please wait...";
    var remaining = Browser.mainLoop.remainingBlockers;
    var expected = Browser.mainLoop.expectedBlockers;
    if (remaining) {
     if (remaining < expected) {
      Module["setStatus"](message + " (" + (expected - remaining) + "/" + expected + ")");
     } else {
      Module["setStatus"](message);
     }
    } else {
     Module["setStatus"]("");
    }
   }
  }),
  runIter: (function(func) {
   if (ABORT) return;
   if (Module["preMainLoop"]) {
    var preRet = Module["preMainLoop"]();
    if (preRet === false) {
     return;
    }
   }
   try {
    func();
   } catch (e) {
    if (e instanceof ExitStatus) {
     return;
    } else {
     if (e && typeof e === "object" && e.stack) Module.printErr("exception thrown: " + [ e, e.stack ]);
     throw e;
    }
   }
   if (Module["postMainLoop"]) Module["postMainLoop"]();
  })
 },
 isFullScreen: false,
 pointerLock: false,
 moduleContextCreatedCallbacks: [],
 workers: [],
 init: (function() {
  if (!Module["preloadPlugins"]) Module["preloadPlugins"] = [];
  if (Browser.initted) return;
  Browser.initted = true;
  try {
   new Blob;
   Browser.hasBlobConstructor = true;
  } catch (e) {
   Browser.hasBlobConstructor = false;
   console.log("warning: no blob constructor, cannot create blobs with mimetypes");
  }
  Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : !Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null;
  Browser.URLObject = typeof window != "undefined" ? window.URL ? window.URL : window.webkitURL : undefined;
  if (!Module.noImageDecoding && typeof Browser.URLObject === "undefined") {
   console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
   Module.noImageDecoding = true;
  }
  var imagePlugin = {};
  imagePlugin["canHandle"] = function imagePlugin_canHandle(name) {
   return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
  };
  imagePlugin["handle"] = function imagePlugin_handle(byteArray, name, onload, onerror) {
   var b = null;
   if (Browser.hasBlobConstructor) {
    try {
     b = new Blob([ byteArray ], {
      type: Browser.getMimetype(name)
     });
     if (b.size !== byteArray.length) {
      b = new Blob([ (new Uint8Array(byteArray)).buffer ], {
       type: Browser.getMimetype(name)
      });
     }
    } catch (e) {
     Runtime.warnOnce("Blob constructor present but fails: " + e + "; falling back to blob builder");
    }
   }
   if (!b) {
    var bb = new Browser.BlobBuilder;
    bb.append((new Uint8Array(byteArray)).buffer);
    b = bb.getBlob();
   }
   var url = Browser.URLObject.createObjectURL(b);
   assert(typeof url == "string", "createObjectURL must return a url as a string");
   var img = new Image;
   img.onload = function img_onload() {
    assert(img.complete, "Image " + name + " could not be decoded");
    var canvas = document.createElement("canvas");
    canvas.width = img.width;
    canvas.height = img.height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0);
    Module["preloadedImages"][name] = canvas;
    Browser.URLObject.revokeObjectURL(url);
    if (onload) onload(byteArray);
   };
   img.onerror = function img_onerror(event) {
    console.log("Image " + url + " could not be decoded");
    if (onerror) onerror();
   };
   img.src = url;
  };
  Module["preloadPlugins"].push(imagePlugin);
  var audioPlugin = {};
  audioPlugin["canHandle"] = function audioPlugin_canHandle(name) {
   return !Module.noAudioDecoding && name.substr(-4) in {
    ".ogg": 1,
    ".wav": 1,
    ".mp3": 1
   };
  };
  audioPlugin["handle"] = function audioPlugin_handle(byteArray, name, onload, onerror) {
   var done = false;
   function finish(audio) {
    if (done) return;
    done = true;
    Module["preloadedAudios"][name] = audio;
    if (onload) onload(byteArray);
   }
   function fail() {
    if (done) return;
    done = true;
    Module["preloadedAudios"][name] = new Audio;
    if (onerror) onerror();
   }
   if (Browser.hasBlobConstructor) {
    try {
     var b = new Blob([ byteArray ], {
      type: Browser.getMimetype(name)
     });
    } catch (e) {
     return fail();
    }
    var url = Browser.URLObject.createObjectURL(b);
    assert(typeof url == "string", "createObjectURL must return a url as a string");
    var audio = new Audio;
    audio.addEventListener("canplaythrough", (function() {
     finish(audio);
    }), false);
    audio.onerror = function audio_onerror(event) {
     if (done) return;
     console.log("warning: browser could not fully decode audio " + name + ", trying slower base64 approach");
     function encode64(data) {
      var BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      var PAD = "=";
      var ret = "";
      var leftchar = 0;
      var leftbits = 0;
      for (var i = 0; i < data.length; i++) {
       leftchar = leftchar << 8 | data[i];
       leftbits += 8;
       while (leftbits >= 6) {
        var curr = leftchar >> leftbits - 6 & 63;
        leftbits -= 6;
        ret += BASE[curr];
       }
      }
      if (leftbits == 2) {
       ret += BASE[(leftchar & 3) << 4];
       ret += PAD + PAD;
      } else if (leftbits == 4) {
       ret += BASE[(leftchar & 15) << 2];
       ret += PAD;
      }
      return ret;
     }
     audio.src = "data:audio/x-" + name.substr(-3) + ";base64," + encode64(byteArray);
     finish(audio);
    };
    audio.src = url;
    Browser.safeSetTimeout((function() {
     finish(audio);
    }), 1e4);
   } else {
    return fail();
   }
  };
  Module["preloadPlugins"].push(audioPlugin);
  var canvas = Module["canvas"];
  function pointerLockChange() {
   Browser.pointerLock = document["pointerLockElement"] === canvas || document["mozPointerLockElement"] === canvas || document["webkitPointerLockElement"] === canvas || document["msPointerLockElement"] === canvas;
  }
  if (canvas) {
   canvas.requestPointerLock = canvas["requestPointerLock"] || canvas["mozRequestPointerLock"] || canvas["webkitRequestPointerLock"] || canvas["msRequestPointerLock"] || (function() {});
   canvas.exitPointerLock = document["exitPointerLock"] || document["mozExitPointerLock"] || document["webkitExitPointerLock"] || document["msExitPointerLock"] || (function() {});
   canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
   document.addEventListener("pointerlockchange", pointerLockChange, false);
   document.addEventListener("mozpointerlockchange", pointerLockChange, false);
   document.addEventListener("webkitpointerlockchange", pointerLockChange, false);
   document.addEventListener("mspointerlockchange", pointerLockChange, false);
   if (Module["elementPointerLock"]) {
    canvas.addEventListener("click", (function(ev) {
     if (!Browser.pointerLock && canvas.requestPointerLock) {
      canvas.requestPointerLock();
      ev.preventDefault();
     }
    }), false);
   }
  }
 }),
 createContext: (function(canvas, useWebGL, setInModule, webGLContextAttributes) {
  if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx;
  var ctx;
  var contextHandle;
  if (useWebGL) {
   var contextAttributes = {
    antialias: false,
    alpha: false
   };
   if (webGLContextAttributes) {
    for (var attribute in webGLContextAttributes) {
     contextAttributes[attribute] = webGLContextAttributes[attribute];
    }
   }
   contextHandle = GL.createContext(canvas, contextAttributes);
   if (contextHandle) {
    ctx = GL.getContext(contextHandle).GLctx;
   }
   canvas.style.backgroundColor = "black";
  } else {
   ctx = canvas.getContext("2d");
  }
  if (!ctx) return null;
  if (setInModule) {
   if (!useWebGL) assert(typeof GLctx === "undefined", "cannot set in module if GLctx is used, but we are a non-GL context that would replace it");
   Module.ctx = ctx;
   if (useWebGL) GL.makeContextCurrent(contextHandle);
   Module.useWebGL = useWebGL;
   Browser.moduleContextCreatedCallbacks.forEach((function(callback) {
    callback();
   }));
   Browser.init();
  }
  return ctx;
 }),
 destroyContext: (function(canvas, useWebGL, setInModule) {}),
 fullScreenHandlersInstalled: false,
 lockPointer: undefined,
 resizeCanvas: undefined,
 requestFullScreen: (function(lockPointer, resizeCanvas, vrDevice) {
  Browser.lockPointer = lockPointer;
  Browser.resizeCanvas = resizeCanvas;
  Browser.vrDevice = vrDevice;
  if (typeof Browser.lockPointer === "undefined") Browser.lockPointer = true;
  if (typeof Browser.resizeCanvas === "undefined") Browser.resizeCanvas = false;
  if (typeof Browser.vrDevice === "undefined") Browser.vrDevice = null;
  var canvas = Module["canvas"];
  function fullScreenChange() {
   Browser.isFullScreen = false;
   var canvasContainer = canvas.parentNode;
   if ((document["webkitFullScreenElement"] || document["webkitFullscreenElement"] || document["mozFullScreenElement"] || document["mozFullscreenElement"] || document["fullScreenElement"] || document["fullscreenElement"] || document["msFullScreenElement"] || document["msFullscreenElement"] || document["webkitCurrentFullScreenElement"]) === canvasContainer) {
    canvas.cancelFullScreen = document["cancelFullScreen"] || document["mozCancelFullScreen"] || document["webkitCancelFullScreen"] || document["msExitFullscreen"] || document["exitFullscreen"] || (function() {});
    canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
    if (Browser.lockPointer) canvas.requestPointerLock();
    Browser.isFullScreen = true;
    if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
   } else {
    canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
    canvasContainer.parentNode.removeChild(canvasContainer);
    if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
   }
   if (Module["onFullScreen"]) Module["onFullScreen"](Browser.isFullScreen);
   Browser.updateCanvasDimensions(canvas);
  }
  if (!Browser.fullScreenHandlersInstalled) {
   Browser.fullScreenHandlersInstalled = true;
   document.addEventListener("fullscreenchange", fullScreenChange, false);
   document.addEventListener("mozfullscreenchange", fullScreenChange, false);
   document.addEventListener("webkitfullscreenchange", fullScreenChange, false);
   document.addEventListener("MSFullscreenChange", fullScreenChange, false);
  }
  var canvasContainer = document.createElement("div");
  canvas.parentNode.insertBefore(canvasContainer, canvas);
  canvasContainer.appendChild(canvas);
  canvasContainer.requestFullScreen = canvasContainer["requestFullScreen"] || canvasContainer["mozRequestFullScreen"] || canvasContainer["msRequestFullscreen"] || (canvasContainer["webkitRequestFullScreen"] ? (function() {
   canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
  }) : null);
  if (vrDevice) {
   canvasContainer.requestFullScreen({
    vrDisplay: vrDevice
   });
  } else {
   canvasContainer.requestFullScreen();
  }
 }),
 nextRAF: 0,
 fakeRequestAnimationFrame: (function(func) {
  var now = Date.now();
  if (Browser.nextRAF === 0) {
   Browser.nextRAF = now + 1e3 / 60;
  } else {
   while (now + 2 >= Browser.nextRAF) {
    Browser.nextRAF += 1e3 / 60;
   }
  }
  var delay = Math.max(Browser.nextRAF - now, 0);
  setTimeout(func, delay);
 }),
 requestAnimationFrame: function requestAnimationFrame(func) {
  if (typeof window === "undefined") {
   Browser.fakeRequestAnimationFrame(func);
  } else {
   if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = window["requestAnimationFrame"] || window["mozRequestAnimationFrame"] || window["webkitRequestAnimationFrame"] || window["msRequestAnimationFrame"] || window["oRequestAnimationFrame"] || Browser.fakeRequestAnimationFrame;
   }
   window.requestAnimationFrame(func);
  }
 },
 safeCallback: (function(func) {
  return (function() {
   if (!ABORT) return func.apply(null, arguments);
  });
 }),
 allowAsyncCallbacks: true,
 queuedAsyncCallbacks: [],
 pauseAsyncCallbacks: (function() {
  Browser.allowAsyncCallbacks = false;
 }),
 resumeAsyncCallbacks: (function() {
  Browser.allowAsyncCallbacks = true;
  if (Browser.queuedAsyncCallbacks.length > 0) {
   var callbacks = Browser.queuedAsyncCallbacks;
   Browser.queuedAsyncCallbacks = [];
   callbacks.forEach((function(func) {
    func();
   }));
  }
 }),
 safeRequestAnimationFrame: (function(func) {
  return Browser.requestAnimationFrame((function() {
   if (ABORT) return;
   if (Browser.allowAsyncCallbacks) {
    func();
   } else {
    Browser.queuedAsyncCallbacks.push(func);
   }
  }));
 }),
 safeSetTimeout: (function(func, timeout) {
  Module["noExitRuntime"] = true;
  return setTimeout((function() {
   if (ABORT) return;
   if (Browser.allowAsyncCallbacks) {
    func();
   } else {
    Browser.queuedAsyncCallbacks.push(func);
   }
  }), timeout);
 }),
 safeSetInterval: (function(func, timeout) {
  Module["noExitRuntime"] = true;
  return setInterval((function() {
   if (ABORT) return;
   if (Browser.allowAsyncCallbacks) {
    func();
   }
  }), timeout);
 }),
 getMimetype: (function(name) {
  return {
   "jpg": "image/jpeg",
   "jpeg": "image/jpeg",
   "png": "image/png",
   "bmp": "image/bmp",
   "ogg": "audio/ogg",
   "wav": "audio/wav",
   "mp3": "audio/mpeg"
  }[name.substr(name.lastIndexOf(".") + 1)];
 }),
 getUserMedia: (function(func) {
  if (!window.getUserMedia) {
   window.getUserMedia = navigator["getUserMedia"] || navigator["mozGetUserMedia"];
  }
  window.getUserMedia(func);
 }),
 getMovementX: (function(event) {
  return event["movementX"] || event["mozMovementX"] || event["webkitMovementX"] || 0;
 }),
 getMovementY: (function(event) {
  return event["movementY"] || event["mozMovementY"] || event["webkitMovementY"] || 0;
 }),
 getMouseWheelDelta: (function(event) {
  var delta = 0;
  switch (event.type) {
  case "DOMMouseScroll":
   delta = event.detail;
   break;
  case "mousewheel":
   delta = event.wheelDelta;
   break;
  case "wheel":
   delta = event["deltaY"];
   break;
  default:
   throw "unrecognized mouse wheel event: " + event.type;
  }
  return delta;
 }),
 mouseX: 0,
 mouseY: 0,
 mouseMovementX: 0,
 mouseMovementY: 0,
 touches: {},
 lastTouches: {},
 calculateMouseEvent: (function(event) {
  if (Browser.pointerLock) {
   if (event.type != "mousemove" && "mozMovementX" in event) {
    Browser.mouseMovementX = Browser.mouseMovementY = 0;
   } else {
    Browser.mouseMovementX = Browser.getMovementX(event);
    Browser.mouseMovementY = Browser.getMovementY(event);
   }
   if (typeof SDL != "undefined") {
    Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
    Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
   } else {
    Browser.mouseX += Browser.mouseMovementX;
    Browser.mouseY += Browser.mouseMovementY;
   }
  } else {
   var rect = Module["canvas"].getBoundingClientRect();
   var cw = Module["canvas"].width;
   var ch = Module["canvas"].height;
   var scrollX = typeof window.scrollX !== "undefined" ? window.scrollX : window.pageXOffset;
   var scrollY = typeof window.scrollY !== "undefined" ? window.scrollY : window.pageYOffset;
   assert(typeof scrollX !== "undefined" && typeof scrollY !== "undefined", "Unable to retrieve scroll position, mouse positions likely broken.");
   if (event.type === "touchstart" || event.type === "touchend" || event.type === "touchmove") {
    var touch = event.touch;
    if (touch === undefined) {
     return;
    }
    var adjustedX = touch.pageX - (scrollX + rect.left);
    var adjustedY = touch.pageY - (scrollY + rect.top);
    adjustedX = adjustedX * (cw / rect.width);
    adjustedY = adjustedY * (ch / rect.height);
    var coords = {
     x: adjustedX,
     y: adjustedY
    };
    if (event.type === "touchstart") {
     Browser.lastTouches[touch.identifier] = coords;
     Browser.touches[touch.identifier] = coords;
    } else if (event.type === "touchend" || event.type === "touchmove") {
     var last = Browser.touches[touch.identifier];
     if (!last) last = coords;
     Browser.lastTouches[touch.identifier] = last;
     Browser.touches[touch.identifier] = coords;
    }
    return;
   }
   var x = event.pageX - (scrollX + rect.left);
   var y = event.pageY - (scrollY + rect.top);
   x = x * (cw / rect.width);
   y = y * (ch / rect.height);
   Browser.mouseMovementX = x - Browser.mouseX;
   Browser.mouseMovementY = y - Browser.mouseY;
   Browser.mouseX = x;
   Browser.mouseY = y;
  }
 }),
 xhrLoad: (function(url, onload, onerror) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = function xhr_onload() {
   if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
    onload(xhr.response);
   } else {
    onerror();
   }
  };
  xhr.onerror = onerror;
  xhr.send(null);
 }),
 asyncLoad: (function(url, onload, onerror, noRunDep) {
  Browser.xhrLoad(url, (function(arrayBuffer) {
   assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
   onload(new Uint8Array(arrayBuffer));
   if (!noRunDep) removeRunDependency("al " + url);
  }), (function(event) {
   if (onerror) {
    onerror();
   } else {
    throw 'Loading data file "' + url + '" failed.';
   }
  }));
  if (!noRunDep) addRunDependency("al " + url);
 }),
 resizeListeners: [],
 updateResizeListeners: (function() {
  var canvas = Module["canvas"];
  Browser.resizeListeners.forEach((function(listener) {
   listener(canvas.width, canvas.height);
  }));
 }),
 setCanvasSize: (function(width, height, noUpdates) {
  var canvas = Module["canvas"];
  Browser.updateCanvasDimensions(canvas, width, height);
  if (!noUpdates) Browser.updateResizeListeners();
 }),
 windowedWidth: 0,
 windowedHeight: 0,
 setFullScreenCanvasSize: (function() {
  if (typeof SDL != "undefined") {
   var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
   flags = flags | 8388608;
   HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
  }
  Browser.updateResizeListeners();
 }),
 setWindowedCanvasSize: (function() {
  if (typeof SDL != "undefined") {
   var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
   flags = flags & ~8388608;
   HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
  }
  Browser.updateResizeListeners();
 }),
 updateCanvasDimensions: (function(canvas, wNative, hNative) {
  if (wNative && hNative) {
   canvas.widthNative = wNative;
   canvas.heightNative = hNative;
  } else {
   wNative = canvas.widthNative;
   hNative = canvas.heightNative;
  }
  var w = wNative;
  var h = hNative;
  if (Module["forcedAspectRatio"] && Module["forcedAspectRatio"] > 0) {
   if (w / h < Module["forcedAspectRatio"]) {
    w = Math.round(h * Module["forcedAspectRatio"]);
   } else {
    h = Math.round(w / Module["forcedAspectRatio"]);
   }
  }
  if ((document["webkitFullScreenElement"] || document["webkitFullscreenElement"] || document["mozFullScreenElement"] || document["mozFullscreenElement"] || document["fullScreenElement"] || document["fullscreenElement"] || document["msFullScreenElement"] || document["msFullscreenElement"] || document["webkitCurrentFullScreenElement"]) === canvas.parentNode && typeof screen != "undefined") {
   var factor = Math.min(screen.width / w, screen.height / h);
   w = Math.round(w * factor);
   h = Math.round(h * factor);
  }
  if (Browser.resizeCanvas) {
   if (canvas.width != w) canvas.width = w;
   if (canvas.height != h) canvas.height = h;
   if (typeof canvas.style != "undefined") {
    canvas.style.removeProperty("width");
    canvas.style.removeProperty("height");
   }
  } else {
   if (canvas.width != wNative) canvas.width = wNative;
   if (canvas.height != hNative) canvas.height = hNative;
   if (typeof canvas.style != "undefined") {
    if (w != wNative || h != hNative) {
     canvas.style.setProperty("width", w + "px", "important");
     canvas.style.setProperty("height", h + "px", "important");
    } else {
     canvas.style.removeProperty("width");
     canvas.style.removeProperty("height");
    }
   }
  }
 }),
 wgetRequests: {},
 nextWgetRequestHandle: 0,
 getNextWgetRequestHandle: (function() {
  var handle = Browser.nextWgetRequestHandle;
  Browser.nextWgetRequestHandle++;
  return handle;
 })
};
function _pthread_setspecific(key, value) {
 if (!(key in PTHREAD_SPECIFIC)) {
  return ERRNO_CODES.EINVAL;
 }
 PTHREAD_SPECIFIC[key] = value;
 return 0;
}
function ___cxa_allocate_exception(size) {
 return _malloc(size);
}
var _sin = Math_sin;
function __embind_register_emval(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": (function(handle) {
   var rv = emval_handle_array[handle].value;
   __emval_decref(handle);
   return rv;
  }),
  "toWireType": (function(destructors, value) {
   return __emval_register(value);
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: null
 });
}
var _atan = Math_atan;
function floatReadValueFromPointer(name, shift) {
 switch (shift) {
 case 2:
  return (function(pointer) {
   return this["fromWireType"](HEAPF32[pointer >> 2]);
  });
 case 3:
  return (function(pointer) {
   return this["fromWireType"](HEAPF64[pointer >> 3]);
  });
 default:
  throw new TypeError("Unknown float type: " + name);
 }
}
function __embind_register_float(rawType, name, size) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": (function(value) {
   return value;
  }),
  "toWireType": (function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   return value;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": floatReadValueFromPointer(name, shift),
  destructorFunction: null
 });
}
function ___cxa_begin_catch(ptr) {
 __ZSt18uncaught_exceptionv.uncaught_exception--;
 EXCEPTIONS.caught.push(ptr);
 EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
 return ptr;
}
function ___syscall6(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD();
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var _cos = Math_cos;
var _atan2 = Math_atan2;
function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 invoker = requireFunction(invokerSignature, invoker);
 whenDependentTypesAreResolved([], [ rawClassType ], (function(classType) {
  classType = classType[0];
  var humanName = "constructor " + classType.name;
  if (undefined === classType.registeredClass.constructor_body) {
   classType.registeredClass.constructor_body = [];
  }
  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
   throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount - 1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
  }
  classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {
   throwUnboundTypeError("Cannot construct " + classType.name + " due to unbound types", rawArgTypes);
  };
  whenDependentTypesAreResolved([], rawArgTypes, (function(argTypes) {
   classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {
    if (arguments.length !== argCount - 1) {
     throwBindingError(humanName + " called with " + arguments.length + " arguments, expected " + (argCount - 1));
    }
    var destructors = [];
    var args = new Array(argCount);
    args[0] = rawConstructor;
    for (var i = 1; i < argCount; ++i) {
     args[i] = argTypes[i]["toWireType"](destructors, arguments[i - 1]);
    }
    var ptr = invoker.apply(null, args);
    runDestructors(destructors);
    return argTypes[0]["fromWireType"](ptr);
   };
   return [];
  }));
  return [];
 }));
}
function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  HEAP32[ptr >> 2] = ret;
 }
 return ret;
}
function _pthread_self() {
 return 0;
}
function ___syscall140(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
  var offset = offset_low;
  assert(offset_high === 0);
  FS.llseek(stream, offset, whence);
  HEAP32[result >> 2] = stream.position;
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function __emval_incref(handle) {
 if (handle > 4) {
  emval_handle_array[handle].refcount += 1;
 }
}
function ___syscall146(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doWritev(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 methodName = readLatin1String(methodName);
 rawInvoker = requireFunction(invokerSignature, rawInvoker);
 whenDependentTypesAreResolved([], [ rawClassType ], (function(classType) {
  classType = classType[0];
  var humanName = classType.name + "." + methodName;
  if (isPureVirtual) {
   classType.registeredClass.pureVirtualFunctions.push(methodName);
  }
  function unboundTypesHandler() {
   throwUnboundTypeError("Cannot call " + humanName + " due to unbound types", rawArgTypes);
  }
  var proto = classType.registeredClass.instancePrototype;
  var method = proto[methodName];
  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {
   unboundTypesHandler.argCount = argCount - 2;
   unboundTypesHandler.className = classType.name;
   proto[methodName] = unboundTypesHandler;
  } else {
   ensureOverloadTable(proto, methodName, humanName);
   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
  }
  whenDependentTypesAreResolved([], rawArgTypes, (function(argTypes) {
   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);
   if (undefined === proto[methodName].overloadTable) {
    proto[methodName] = memberFunction;
   } else {
    proto[methodName].overloadTable[argCount - 2] = memberFunction;
   }
   return [];
  }));
  return [];
 }));
}
embind_init_charCodes();
BindingError = Module["BindingError"] = extendError(Error, "BindingError");
init_emval();
InternalError = Module["InternalError"] = extendError(Error, "InternalError");
FS.staticInit();
__ATINIT__.unshift((function() {
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
}));
__ATMAIN__.push((function() {
 FS.ignorePermissions = false;
}));
__ATEXIT__.push((function() {
 FS.quit();
}));
Module["FS_createFolder"] = FS.createFolder;
Module["FS_createPath"] = FS.createPath;
Module["FS_createDataFile"] = FS.createDataFile;
Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
Module["FS_createLazyFile"] = FS.createLazyFile;
Module["FS_createLink"] = FS.createLink;
Module["FS_createDevice"] = FS.createDevice;
Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift((function() {
 TTY.init();
}));
__ATEXIT__.push((function() {
 TTY.shutdown();
}));
if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var NODEJS_PATH = require("path");
 NODEFS.staticInit();
}
init_RegisteredPointer();
init_embind();
UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");
init_ClassHandle();
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) {
 Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice);
};
Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) {
 Browser.requestAnimationFrame(func);
};
Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) {
 Browser.setCanvasSize(width, height, noUpdates);
};
Module["pauseMainLoop"] = function Module_pauseMainLoop() {
 Browser.mainLoop.pause();
};
Module["resumeMainLoop"] = function Module_resumeMainLoop() {
 Browser.mainLoop.resume();
};
Module["getUserMedia"] = function Module_getUserMedia() {
 Browser.getUserMedia();
};
Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) {
 return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes);
};
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true;
STACK_MAX = STACK_BASE + TOTAL_STACK;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");
var cttz_i8 = allocate([ 8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0 ], "i8", ALLOC_DYNAMIC);
function nullFunc_diddidd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diddidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diddi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viiiiiddi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viiiiiddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_vid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'vid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diididi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diididi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_vi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_vii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diididdd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diididdd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diddd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viiiiddi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viiiiddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_ii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_vididdd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'vididdd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_vidid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'vidid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viidd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_didddddii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'didddddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viiiii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_vidii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'vidii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_vididd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'vididd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_iiiii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diiddidd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diiddidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diddddd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diddddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_vidd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'vidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_iiii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diiddid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diiddid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_dididdd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'dididdd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_dddddd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'dddddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viiiiii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diiii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_di(x) {
 Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viidii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viidii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diiddd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diiddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_iid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'iid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diidd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_dddd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'dddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_didid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'didid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viididdd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viididdd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_iii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diiddi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diiddi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diiddddd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diiddddd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diidddii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diidddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_didd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'didd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diidddddii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diidddddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_didddid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'didddid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_dii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_did(x) {
 Module["printErr"]("Invalid function pointer called with signature 'did'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_i(x) {
 Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_didi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'didi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diidddid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diidddid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diidi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_iiid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'iiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diddid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diddid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_diidid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'diidid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viiid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viidid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viidid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_didddii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'didddii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_v(x) {
 Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viididd(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viididd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_dididi(x) {
 Module["printErr"]("Invalid function pointer called with signature 'dididi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_iiiid(x) {
 Module["printErr"]("Invalid function pointer called with signature 'iiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function nullFunc_viiii(x) {
 Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");
 Module["printErr"]("Build with ASSERTIONS=2 for more info.");
 abort(x);
}
function invoke_diddidd(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_diddidd"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diddi(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_diddi"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiiddi(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 try {
  Module["dynCall_viiiiiddi"](index, a1, a2, a3, a4, a5, a6, a7, a8);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vid(index, a1, a2) {
 try {
  Module["dynCall_vid"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diididi(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_diididi"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vi(index, a1) {
 try {
  Module["dynCall_vi"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vii(index, a1, a2) {
 try {
  Module["dynCall_vii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diididdd(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_diididdd"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diddd(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_diddd"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiddi(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  Module["dynCall_viiiiddi"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_ii(index, a1) {
 try {
  return Module["dynCall_ii"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vididdd(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_vididdd"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vidid(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_vidid"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viidd(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viidd"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_didddddii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 try {
  return Module["dynCall_didddddii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiii(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vidii(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_vidii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vididd(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_vididd"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiii(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diiddidd(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_diiddidd"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diddddd(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_diddddd"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vidd(index, a1, a2, a3) {
 try {
  Module["dynCall_vidd"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiii(index, a1, a2, a3) {
 try {
  return Module["dynCall_iiii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diiddid(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_diiddid"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_dididdd(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_dididdd"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_dddddd(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_dddddd"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diiii(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_diiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viii(index, a1, a2, a3) {
 try {
  Module["dynCall_viii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_di(index, a1) {
 try {
  return Module["dynCall_di"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viidii(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viidii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diiddd(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_diiddd"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iid(index, a1, a2) {
 try {
  return Module["dynCall_iid"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diid(index, a1, a2, a3) {
 try {
  return Module["dynCall_diid"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diidd(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_diidd"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_dddd(index, a1, a2, a3) {
 try {
  return Module["dynCall_dddd"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_didid(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_didid"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viididdd(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  Module["dynCall_viididdd"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iii(index, a1, a2) {
 try {
  return Module["dynCall_iii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diiddi(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_diiddi"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diiddddd(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_diiddddd"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diii(index, a1, a2, a3) {
 try {
  return Module["dynCall_diii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diidddii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_diidddii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_didd(index, a1, a2, a3) {
 try {
  return Module["dynCall_didd"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diidddddii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 try {
  return Module["dynCall_diidddddii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_didddid(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_didddid"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_dii(index, a1, a2) {
 try {
  return Module["dynCall_dii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_did(index, a1, a2) {
 try {
  return Module["dynCall_did"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_i(index) {
 try {
  return Module["dynCall_i"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_didi(index, a1, a2, a3) {
 try {
  return Module["dynCall_didi"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diidddid(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_diidddid"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diidi(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_diidi"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiid(index, a1, a2, a3) {
 try {
  return Module["dynCall_iiid"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diddid(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_diddid"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_diidid(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_diidid"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiid(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viiid"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viidid(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viidid"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_didddii(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_didddii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_v(index) {
 try {
  Module["dynCall_v"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viid(index, a1, a2, a3) {
 try {
  Module["dynCall_viid"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viididd(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_viididd"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_dididi(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_dididi"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiid(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_iiiid"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiii(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
Module.asmGlobalArg = {
 "Math": Math,
 "Int8Array": Int8Array,
 "Int16Array": Int16Array,
 "Int32Array": Int32Array,
 "Uint8Array": Uint8Array,
 "Uint16Array": Uint16Array,
 "Uint32Array": Uint32Array,
 "Float32Array": Float32Array,
 "Float64Array": Float64Array,
 "NaN": NaN,
 "Infinity": Infinity,
 "byteLength": byteLength
};
Module.asmLibraryArg = {
 "abort": abort,
 "assert": assert,
 "nullFunc_diddidd": nullFunc_diddidd,
 "nullFunc_diddi": nullFunc_diddi,
 "nullFunc_viiiiiddi": nullFunc_viiiiiddi,
 "nullFunc_vid": nullFunc_vid,
 "nullFunc_diididi": nullFunc_diididi,
 "nullFunc_vi": nullFunc_vi,
 "nullFunc_vii": nullFunc_vii,
 "nullFunc_diididdd": nullFunc_diididdd,
 "nullFunc_diddd": nullFunc_diddd,
 "nullFunc_viiiiddi": nullFunc_viiiiddi,
 "nullFunc_ii": nullFunc_ii,
 "nullFunc_vididdd": nullFunc_vididdd,
 "nullFunc_vidid": nullFunc_vidid,
 "nullFunc_viidd": nullFunc_viidd,
 "nullFunc_didddddii": nullFunc_didddddii,
 "nullFunc_viiiii": nullFunc_viiiii,
 "nullFunc_vidii": nullFunc_vidii,
 "nullFunc_vididd": nullFunc_vididd,
 "nullFunc_iiiii": nullFunc_iiiii,
 "nullFunc_diiddidd": nullFunc_diiddidd,
 "nullFunc_diddddd": nullFunc_diddddd,
 "nullFunc_vidd": nullFunc_vidd,
 "nullFunc_iiii": nullFunc_iiii,
 "nullFunc_diiddid": nullFunc_diiddid,
 "nullFunc_dididdd": nullFunc_dididdd,
 "nullFunc_dddddd": nullFunc_dddddd,
 "nullFunc_viiiiii": nullFunc_viiiiii,
 "nullFunc_diiii": nullFunc_diiii,
 "nullFunc_viii": nullFunc_viii,
 "nullFunc_di": nullFunc_di,
 "nullFunc_viidii": nullFunc_viidii,
 "nullFunc_diiddd": nullFunc_diiddd,
 "nullFunc_iid": nullFunc_iid,
 "nullFunc_diid": nullFunc_diid,
 "nullFunc_diidd": nullFunc_diidd,
 "nullFunc_dddd": nullFunc_dddd,
 "nullFunc_didid": nullFunc_didid,
 "nullFunc_viididdd": nullFunc_viididdd,
 "nullFunc_iii": nullFunc_iii,
 "nullFunc_diiddi": nullFunc_diiddi,
 "nullFunc_diiddddd": nullFunc_diiddddd,
 "nullFunc_diii": nullFunc_diii,
 "nullFunc_diidddii": nullFunc_diidddii,
 "nullFunc_didd": nullFunc_didd,
 "nullFunc_diidddddii": nullFunc_diidddddii,
 "nullFunc_didddid": nullFunc_didddid,
 "nullFunc_dii": nullFunc_dii,
 "nullFunc_did": nullFunc_did,
 "nullFunc_i": nullFunc_i,
 "nullFunc_didi": nullFunc_didi,
 "nullFunc_diidddid": nullFunc_diidddid,
 "nullFunc_diidi": nullFunc_diidi,
 "nullFunc_iiid": nullFunc_iiid,
 "nullFunc_diddid": nullFunc_diddid,
 "nullFunc_diidid": nullFunc_diidid,
 "nullFunc_viiid": nullFunc_viiid,
 "nullFunc_viidid": nullFunc_viidid,
 "nullFunc_didddii": nullFunc_didddii,
 "nullFunc_v": nullFunc_v,
 "nullFunc_viid": nullFunc_viid,
 "nullFunc_viididd": nullFunc_viididd,
 "nullFunc_dididi": nullFunc_dididi,
 "nullFunc_iiiid": nullFunc_iiiid,
 "nullFunc_viiii": nullFunc_viiii,
 "invoke_diddidd": invoke_diddidd,
 "invoke_diddi": invoke_diddi,
 "invoke_viiiiiddi": invoke_viiiiiddi,
 "invoke_vid": invoke_vid,
 "invoke_diididi": invoke_diididi,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_diididdd": invoke_diididdd,
 "invoke_diddd": invoke_diddd,
 "invoke_viiiiddi": invoke_viiiiddi,
 "invoke_ii": invoke_ii,
 "invoke_vididdd": invoke_vididdd,
 "invoke_vidid": invoke_vidid,
 "invoke_viidd": invoke_viidd,
 "invoke_didddddii": invoke_didddddii,
 "invoke_viiiii": invoke_viiiii,
 "invoke_vidii": invoke_vidii,
 "invoke_vididd": invoke_vididd,
 "invoke_iiiii": invoke_iiiii,
 "invoke_diiddidd": invoke_diiddidd,
 "invoke_diddddd": invoke_diddddd,
 "invoke_vidd": invoke_vidd,
 "invoke_iiii": invoke_iiii,
 "invoke_diiddid": invoke_diiddid,
 "invoke_dididdd": invoke_dididdd,
 "invoke_dddddd": invoke_dddddd,
 "invoke_viiiiii": invoke_viiiiii,
 "invoke_diiii": invoke_diiii,
 "invoke_viii": invoke_viii,
 "invoke_di": invoke_di,
 "invoke_viidii": invoke_viidii,
 "invoke_diiddd": invoke_diiddd,
 "invoke_iid": invoke_iid,
 "invoke_diid": invoke_diid,
 "invoke_diidd": invoke_diidd,
 "invoke_dddd": invoke_dddd,
 "invoke_didid": invoke_didid,
 "invoke_viididdd": invoke_viididdd,
 "invoke_iii": invoke_iii,
 "invoke_diiddi": invoke_diiddi,
 "invoke_diiddddd": invoke_diiddddd,
 "invoke_diii": invoke_diii,
 "invoke_diidddii": invoke_diidddii,
 "invoke_didd": invoke_didd,
 "invoke_diidddddii": invoke_diidddddii,
 "invoke_didddid": invoke_didddid,
 "invoke_dii": invoke_dii,
 "invoke_did": invoke_did,
 "invoke_i": invoke_i,
 "invoke_didi": invoke_didi,
 "invoke_diidddid": invoke_diidddid,
 "invoke_diidi": invoke_diidi,
 "invoke_iiid": invoke_iiid,
 "invoke_diddid": invoke_diddid,
 "invoke_diidid": invoke_diidid,
 "invoke_viiid": invoke_viiid,
 "invoke_viidid": invoke_viidid,
 "invoke_didddii": invoke_didddii,
 "invoke_v": invoke_v,
 "invoke_viid": invoke_viid,
 "invoke_viididd": invoke_viididd,
 "invoke_dididi": invoke_dididi,
 "invoke_iiiid": invoke_iiiid,
 "invoke_viiii": invoke_viiii,
 "_fabs": _fabs,
 "floatReadValueFromPointer": floatReadValueFromPointer,
 "simpleReadValueFromPointer": simpleReadValueFromPointer,
 "_sqrtf": _sqrtf,
 "throwInternalError": throwInternalError,
 "get_first_emval": get_first_emval,
 "getLiveInheritedInstances": getLiveInheritedInstances,
 "___assert_fail": ___assert_fail,
 "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv,
 "ClassHandle": ClassHandle,
 "getShiftFromSize": getShiftFromSize,
 "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing,
 "_sbrk": _sbrk,
 "__embind_register_class_class_function": __embind_register_class_class_function,
 "___cxa_begin_catch": ___cxa_begin_catch,
 "_emscripten_memcpy_big": _emscripten_memcpy_big,
 "runDestructor": runDestructor,
 "_sysconf": _sysconf,
 "throwInstanceAlreadyDeleted": throwInstanceAlreadyDeleted,
 "RegisteredPointer_fromWireType": RegisteredPointer_fromWireType,
 "init_RegisteredPointer": init_RegisteredPointer,
 "___lock": ___lock,
 "_cos": _cos,
 "ClassHandle_isAliasOf": ClassHandle_isAliasOf,
 "flushPendingDeletes": flushPendingDeletes,
 "makeClassHandle": makeClassHandle,
 "whenDependentTypesAreResolved": whenDependentTypesAreResolved,
 "__embind_register_class_constructor": __embind_register_class_constructor,
 "_expf": _expf,
 "___cxa_rethrow": ___cxa_rethrow,
 "init_ClassHandle": init_ClassHandle,
 "_pthread_cleanup_push": _pthread_cleanup_push,
 "___syscall140": ___syscall140,
 "ClassHandle_clone": ClassHandle_clone,
 "___syscall146": ___syscall146,
 "_pthread_cleanup_pop": _pthread_cleanup_pop,
 "_atan2": _atan2,
 "throwBindingError": throwBindingError,
 "RegisteredClass": RegisteredClass,
 "___cxa_free_exception": ___cxa_free_exception,
 "___cxa_find_matching_catch": ___cxa_find_matching_catch,
 "embind_init_charCodes": embind_init_charCodes,
 "___setErrNo": ___setErrNo,
 "readLatin1String": readLatin1String,
 "__embind_register_bool": __embind_register_bool,
 "___resumeException": ___resumeException,
 "createNamedFunction": createNamedFunction,
 "__embind_register_class_property": __embind_register_class_property,
 "__embind_register_emval": __embind_register_emval,
 "__emval_take_value": __emval_take_value,
 "__emval_decref": __emval_decref,
 "_pthread_once": _pthread_once,
 "__embind_register_class": __embind_register_class,
 "constNoSmartPtrRawPointerToWireType": constNoSmartPtrRawPointerToWireType,
 "heap32VectorToArray": heap32VectorToArray,
 "__emval_lookupTypes": __emval_lookupTypes,
 "ClassHandle_delete": ClassHandle_delete,
 "RegisteredPointer_destructor": RegisteredPointer_destructor,
 "___syscall6": ___syscall6,
 "ensureOverloadTable": ensureOverloadTable,
 "_time": _time,
 "new_": new_,
 "downcastPointer": downcastPointer,
 "_exit": _exit,
 "replacePublicSymbol": replacePublicSymbol,
 "init_embind": init_embind,
 "_llvm_pow_f64": _llvm_pow_f64,
 "ClassHandle_deleteLater": ClassHandle_deleteLater,
 "___syscall54": ___syscall54,
 "RegisteredPointer_deleteObject": RegisteredPointer_deleteObject,
 "ClassHandle_isDeleted": ClassHandle_isDeleted,
 "__embind_register_integer": __embind_register_integer,
 "_logf": _logf,
 "___cxa_allocate_exception": ___cxa_allocate_exception,
 "_floor": _floor,
 "_fabsf": _fabsf,
 "___cxa_end_catch": ___cxa_end_catch,
 "getTypeName": getTypeName,
 "__emval_call": __emval_call,
 "throwUnboundTypeError": throwUnboundTypeError,
 "craftInvokerFunction": craftInvokerFunction,
 "runDestructors": runDestructors,
 "requireRegisteredType": requireRegisteredType,
 "makeLegalFunctionName": makeLegalFunctionName,
 "_log": _log,
 "upcastPointer": upcastPointer,
 "init_emval": init_emval,
 "shallowCopyInternalPointer": shallowCopyInternalPointer,
 "nonConstNoSmartPtrRawPointerToWireType": nonConstNoSmartPtrRawPointerToWireType,
 "_tan": _tan,
 "_abort": _abort,
 "requireHandle": requireHandle,
 "_embind_repr": _embind_repr,
 "validateThis": validateThis,
 "exposePublicSymbol": exposePublicSymbol,
 "__embind_register_std_string": __embind_register_std_string,
 "_pthread_getspecific": _pthread_getspecific,
 "_sin": _sin,
 "__embind_register_memory_view": __embind_register_memory_view,
 "getInheritedInstance": getInheritedInstance,
 "_pthread_key_create": _pthread_key_create,
 "setDelayFunction": setDelayFunction,
 "___gxx_personality_v0": ___gxx_personality_v0,
 "extendError": extendError,
 "__embind_register_void": __embind_register_void,
 "__embind_register_smart_ptr": __embind_register_smart_ptr,
 "RegisteredPointer_getPointee": RegisteredPointer_getPointee,
 "__emval_register": __emval_register,
 "__embind_register_std_wstring": __embind_register_std_wstring,
 "__embind_register_class_function": __embind_register_class_function,
 "__exit": __exit,
 "RegisteredPointer": RegisteredPointer,
 "__emval_incref": __emval_incref,
 "_atan": _atan,
 "_pthread_self": _pthread_self,
 "getBasestPointer": getBasestPointer,
 "getInheritedInstanceCount": getInheritedInstanceCount,
 "__embind_register_float": __embind_register_float,
 "integerReadValueFromPointer": integerReadValueFromPointer,
 "___unlock": ___unlock,
 "_emscripten_set_main_loop": _emscripten_set_main_loop,
 "_pthread_setspecific": _pthread_setspecific,
 "genericPointerToWireType": genericPointerToWireType,
 "registerType": registerType,
 "___cxa_throw": ___cxa_throw,
 "count_emval_handles": count_emval_handles,
 "requireFunction": requireFunction,
 "_sqrt": _sqrt,
 "STACKTOP": STACKTOP,
 "STACK_MAX": STACK_MAX,
 "tempDoublePtr": tempDoublePtr,
 "ABORT": ABORT,
 "cttz_i8": cttz_i8
};
// EMSCRIPTEN_START_ASM

var asm = (function(global,env,buffer) {

  'use asm';
  
  
  var Int8View = global.Int8Array;
  var Int16View = global.Int16Array;
  var Int32View = global.Int32Array;
  var Uint8View = global.Uint8Array;
  var Uint16View = global.Uint16Array;
  var Uint32View = global.Uint32Array;
  var Float32View = global.Float32Array;
  var Float64View = global.Float64Array;
  var HEAP8 = new Int8View(buffer);
  var HEAP16 = new Int16View(buffer);
  var HEAP32 = new Int32View(buffer);
  var HEAPU8 = new Uint8View(buffer);
  var HEAPU16 = new Uint16View(buffer);
  var HEAPU32 = new Uint32View(buffer);
  var HEAPF32 = new Float32View(buffer);
  var HEAPF64 = new Float64View(buffer);
  var byteLength = global.byteLength;


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_diddidd=env.nullFunc_diddidd;
  var nullFunc_diddi=env.nullFunc_diddi;
  var nullFunc_viiiiiddi=env.nullFunc_viiiiiddi;
  var nullFunc_vid=env.nullFunc_vid;
  var nullFunc_diididi=env.nullFunc_diididi;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_diididdd=env.nullFunc_diididdd;
  var nullFunc_diddd=env.nullFunc_diddd;
  var nullFunc_viiiiddi=env.nullFunc_viiiiddi;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_vididdd=env.nullFunc_vididdd;
  var nullFunc_vidid=env.nullFunc_vidid;
  var nullFunc_viidd=env.nullFunc_viidd;
  var nullFunc_didddddii=env.nullFunc_didddddii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_vidii=env.nullFunc_vidii;
  var nullFunc_vididd=env.nullFunc_vididd;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_diiddidd=env.nullFunc_diiddidd;
  var nullFunc_diddddd=env.nullFunc_diddddd;
  var nullFunc_vidd=env.nullFunc_vidd;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_diiddid=env.nullFunc_diiddid;
  var nullFunc_dididdd=env.nullFunc_dididdd;
  var nullFunc_dddddd=env.nullFunc_dddddd;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_diiii=env.nullFunc_diiii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_di=env.nullFunc_di;
  var nullFunc_viidii=env.nullFunc_viidii;
  var nullFunc_diiddd=env.nullFunc_diiddd;
  var nullFunc_iid=env.nullFunc_iid;
  var nullFunc_diid=env.nullFunc_diid;
  var nullFunc_diidd=env.nullFunc_diidd;
  var nullFunc_dddd=env.nullFunc_dddd;
  var nullFunc_didid=env.nullFunc_didid;
  var nullFunc_viididdd=env.nullFunc_viididdd;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_diiddi=env.nullFunc_diiddi;
  var nullFunc_diiddddd=env.nullFunc_diiddddd;
  var nullFunc_diii=env.nullFunc_diii;
  var nullFunc_diidddii=env.nullFunc_diidddii;
  var nullFunc_didd=env.nullFunc_didd;
  var nullFunc_diidddddii=env.nullFunc_diidddddii;
  var nullFunc_didddid=env.nullFunc_didddid;
  var nullFunc_dii=env.nullFunc_dii;
  var nullFunc_did=env.nullFunc_did;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_didi=env.nullFunc_didi;
  var nullFunc_diidddid=env.nullFunc_diidddid;
  var nullFunc_diidi=env.nullFunc_diidi;
  var nullFunc_iiid=env.nullFunc_iiid;
  var nullFunc_diddid=env.nullFunc_diddid;
  var nullFunc_diidid=env.nullFunc_diidid;
  var nullFunc_viiid=env.nullFunc_viiid;
  var nullFunc_viidid=env.nullFunc_viidid;
  var nullFunc_didddii=env.nullFunc_didddii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_viid=env.nullFunc_viid;
  var nullFunc_viididd=env.nullFunc_viididd;
  var nullFunc_dididi=env.nullFunc_dididi;
  var nullFunc_iiiid=env.nullFunc_iiiid;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_diddidd=env.invoke_diddidd;
  var invoke_diddi=env.invoke_diddi;
  var invoke_viiiiiddi=env.invoke_viiiiiddi;
  var invoke_vid=env.invoke_vid;
  var invoke_diididi=env.invoke_diididi;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_diididdd=env.invoke_diididdd;
  var invoke_diddd=env.invoke_diddd;
  var invoke_viiiiddi=env.invoke_viiiiddi;
  var invoke_ii=env.invoke_ii;
  var invoke_vididdd=env.invoke_vididdd;
  var invoke_vidid=env.invoke_vidid;
  var invoke_viidd=env.invoke_viidd;
  var invoke_didddddii=env.invoke_didddddii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vidii=env.invoke_vidii;
  var invoke_vididd=env.invoke_vididd;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_diiddidd=env.invoke_diiddidd;
  var invoke_diddddd=env.invoke_diddddd;
  var invoke_vidd=env.invoke_vidd;
  var invoke_iiii=env.invoke_iiii;
  var invoke_diiddid=env.invoke_diiddid;
  var invoke_dididdd=env.invoke_dididdd;
  var invoke_dddddd=env.invoke_dddddd;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_diiii=env.invoke_diiii;
  var invoke_viii=env.invoke_viii;
  var invoke_di=env.invoke_di;
  var invoke_viidii=env.invoke_viidii;
  var invoke_diiddd=env.invoke_diiddd;
  var invoke_iid=env.invoke_iid;
  var invoke_diid=env.invoke_diid;
  var invoke_diidd=env.invoke_diidd;
  var invoke_dddd=env.invoke_dddd;
  var invoke_didid=env.invoke_didid;
  var invoke_viididdd=env.invoke_viididdd;
  var invoke_iii=env.invoke_iii;
  var invoke_diiddi=env.invoke_diiddi;
  var invoke_diiddddd=env.invoke_diiddddd;
  var invoke_diii=env.invoke_diii;
  var invoke_diidddii=env.invoke_diidddii;
  var invoke_didd=env.invoke_didd;
  var invoke_diidddddii=env.invoke_diidddddii;
  var invoke_didddid=env.invoke_didddid;
  var invoke_dii=env.invoke_dii;
  var invoke_did=env.invoke_did;
  var invoke_i=env.invoke_i;
  var invoke_didi=env.invoke_didi;
  var invoke_diidddid=env.invoke_diidddid;
  var invoke_diidi=env.invoke_diidi;
  var invoke_iiid=env.invoke_iiid;
  var invoke_diddid=env.invoke_diddid;
  var invoke_diidid=env.invoke_diidid;
  var invoke_viiid=env.invoke_viiid;
  var invoke_viidid=env.invoke_viidid;
  var invoke_didddii=env.invoke_didddii;
  var invoke_v=env.invoke_v;
  var invoke_viid=env.invoke_viid;
  var invoke_viididd=env.invoke_viididd;
  var invoke_dididi=env.invoke_dididi;
  var invoke_iiiid=env.invoke_iiiid;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var floatReadValueFromPointer=env.floatReadValueFromPointer;
  var simpleReadValueFromPointer=env.simpleReadValueFromPointer;
  var _sqrtf=env._sqrtf;
  var throwInternalError=env.throwInternalError;
  var get_first_emval=env.get_first_emval;
  var getLiveInheritedInstances=env.getLiveInheritedInstances;
  var ___assert_fail=env.___assert_fail;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ClassHandle=env.ClassHandle;
  var getShiftFromSize=env.getShiftFromSize;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _sbrk=env._sbrk;
  var __embind_register_class_class_function=env.__embind_register_class_class_function;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var runDestructor=env.runDestructor;
  var _sysconf=env._sysconf;
  var throwInstanceAlreadyDeleted=env.throwInstanceAlreadyDeleted;
  var RegisteredPointer_fromWireType=env.RegisteredPointer_fromWireType;
  var init_RegisteredPointer=env.init_RegisteredPointer;
  var ___lock=env.___lock;
  var _cos=env._cos;
  var ClassHandle_isAliasOf=env.ClassHandle_isAliasOf;
  var flushPendingDeletes=env.flushPendingDeletes;
  var makeClassHandle=env.makeClassHandle;
  var whenDependentTypesAreResolved=env.whenDependentTypesAreResolved;
  var __embind_register_class_constructor=env.__embind_register_class_constructor;
  var _expf=env._expf;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var init_ClassHandle=env.init_ClassHandle;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var ___syscall140=env.___syscall140;
  var ClassHandle_clone=env.ClassHandle_clone;
  var ___syscall146=env.___syscall146;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _atan2=env._atan2;
  var throwBindingError=env.throwBindingError;
  var RegisteredClass=env.RegisteredClass;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var embind_init_charCodes=env.embind_init_charCodes;
  var ___setErrNo=env.___setErrNo;
  var readLatin1String=env.readLatin1String;
  var __embind_register_bool=env.__embind_register_bool;
  var ___resumeException=env.___resumeException;
  var createNamedFunction=env.createNamedFunction;
  var __embind_register_class_property=env.__embind_register_class_property;
  var __embind_register_emval=env.__embind_register_emval;
  var __emval_take_value=env.__emval_take_value;
  var __emval_decref=env.__emval_decref;
  var _pthread_once=env._pthread_once;
  var __embind_register_class=env.__embind_register_class;
  var constNoSmartPtrRawPointerToWireType=env.constNoSmartPtrRawPointerToWireType;
  var heap32VectorToArray=env.heap32VectorToArray;
  var __emval_lookupTypes=env.__emval_lookupTypes;
  var ClassHandle_delete=env.ClassHandle_delete;
  var RegisteredPointer_destructor=env.RegisteredPointer_destructor;
  var ___syscall6=env.___syscall6;
  var ensureOverloadTable=env.ensureOverloadTable;
  var _time=env._time;
  var new_=env.new_;
  var downcastPointer=env.downcastPointer;
  var _exit=env._exit;
  var replacePublicSymbol=env.replacePublicSymbol;
  var init_embind=env.init_embind;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var ClassHandle_deleteLater=env.ClassHandle_deleteLater;
  var ___syscall54=env.___syscall54;
  var RegisteredPointer_deleteObject=env.RegisteredPointer_deleteObject;
  var ClassHandle_isDeleted=env.ClassHandle_isDeleted;
  var __embind_register_integer=env.__embind_register_integer;
  var _logf=env._logf;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _floor=env._floor;
  var _fabsf=env._fabsf;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var getTypeName=env.getTypeName;
  var __emval_call=env.__emval_call;
  var throwUnboundTypeError=env.throwUnboundTypeError;
  var craftInvokerFunction=env.craftInvokerFunction;
  var runDestructors=env.runDestructors;
  var requireRegisteredType=env.requireRegisteredType;
  var makeLegalFunctionName=env.makeLegalFunctionName;
  var _log=env._log;
  var upcastPointer=env.upcastPointer;
  var init_emval=env.init_emval;
  var shallowCopyInternalPointer=env.shallowCopyInternalPointer;
  var nonConstNoSmartPtrRawPointerToWireType=env.nonConstNoSmartPtrRawPointerToWireType;
  var _tan=env._tan;
  var _abort=env._abort;
  var requireHandle=env.requireHandle;
  var _embind_repr=env._embind_repr;
  var validateThis=env.validateThis;
  var exposePublicSymbol=env.exposePublicSymbol;
  var __embind_register_std_string=env.__embind_register_std_string;
  var _pthread_getspecific=env._pthread_getspecific;
  var _sin=env._sin;
  var __embind_register_memory_view=env.__embind_register_memory_view;
  var getInheritedInstance=env.getInheritedInstance;
  var _pthread_key_create=env._pthread_key_create;
  var setDelayFunction=env.setDelayFunction;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var extendError=env.extendError;
  var __embind_register_void=env.__embind_register_void;
  var __embind_register_smart_ptr=env.__embind_register_smart_ptr;
  var RegisteredPointer_getPointee=env.RegisteredPointer_getPointee;
  var __emval_register=env.__emval_register;
  var __embind_register_std_wstring=env.__embind_register_std_wstring;
  var __embind_register_class_function=env.__embind_register_class_function;
  var __exit=env.__exit;
  var RegisteredPointer=env.RegisteredPointer;
  var __emval_incref=env.__emval_incref;
  var _atan=env._atan;
  var _pthread_self=env._pthread_self;
  var getBasestPointer=env.getBasestPointer;
  var getInheritedInstanceCount=env.getInheritedInstanceCount;
  var __embind_register_float=env.__embind_register_float;
  var integerReadValueFromPointer=env.integerReadValueFromPointer;
  var ___unlock=env.___unlock;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var _pthread_setspecific=env._pthread_setspecific;
  var genericPointerToWireType=env.genericPointerToWireType;
  var registerType=env.registerType;
  var ___cxa_throw=env.___cxa_throw;
  var count_emval_handles=env.count_emval_handles;
  var requireFunction=env.requireFunction;
  var _sqrt=env._sqrt;
  var tempFloat = 0.0;

function _emscripten_replace_memory(newBuffer) {
  if ((byteLength(newBuffer) & 0xffffff || byteLength(newBuffer) <= 0xffffff) || byteLength(newBuffer) > 0x80000000) return false;
  HEAP8 = new Int8View(newBuffer);
  HEAP16 = new Int16View(newBuffer);
  HEAP32 = new Int32View(newBuffer);
  HEAPU8 = new Uint8View(newBuffer);
  HEAPU16 = new Uint16View(newBuffer);
  HEAPU32 = new Uint32View(newBuffer);
  HEAPF32 = new Float32View(newBuffer);
  HEAPF64 = new Float64View(newBuffer);
  buffer = newBuffer;
  return true;
}

// EMSCRIPTEN_START_FUNCS
function _malloc(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0;
 do if (i2 >>> 0 < 245) {
  i14 = i2 >>> 0 < 11 ? 16 : i2 + 11 & -8;
  i2 = i14 >>> 3;
  i8 = HEAP32[6006] | 0;
  i3 = i8 >>> i2;
  if (i3 & 3) {
   i2 = (i3 & 1 ^ 1) + i2 | 0;
   i4 = i2 << 1;
   i3 = 24064 + (i4 << 2) | 0;
   i4 = 24064 + (i4 + 2 << 2) | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   i6 = i5 + 8 | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   do if ((i3 | 0) != (i7 | 0)) {
    if (i7 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
    i1 = i7 + 12 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i5 | 0)) {
     HEAP32[i1 >> 2] = i3;
     HEAP32[i4 >> 2] = i7;
     break;
    } else _abort();
   } else HEAP32[6006] = i8 & ~(1 << i2); while (0);
   i38 = i2 << 3;
   HEAP32[i5 + 4 >> 2] = i38 | 3;
   i38 = i5 + (i38 | 4) | 0;
   HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 1;
   i38 = i6;
   return i38 | 0;
  }
  i7 = HEAP32[6008] | 0;
  if (i14 >>> 0 > i7 >>> 0) {
   if (i3) {
    i4 = 2 << i2;
    i4 = i3 << i2 & (i4 | 0 - i4);
    i4 = (i4 & 0 - i4) + -1 | 0;
    i9 = i4 >>> 12 & 16;
    i4 = i4 >>> i9;
    i5 = i4 >>> 5 & 8;
    i4 = i4 >>> i5;
    i6 = i4 >>> 2 & 4;
    i4 = i4 >>> i6;
    i3 = i4 >>> 1 & 2;
    i4 = i4 >>> i3;
    i2 = i4 >>> 1 & 1;
    i2 = (i5 | i9 | i6 | i3 | i2) + (i4 >>> i2) | 0;
    i4 = i2 << 1;
    i3 = 24064 + (i4 << 2) | 0;
    i4 = 24064 + (i4 + 2 << 2) | 0;
    i6 = HEAP32[i4 >> 2] | 0;
    i9 = i6 + 8 | 0;
    i5 = HEAP32[i9 >> 2] | 0;
    do if ((i3 | 0) != (i5 | 0)) {
     if (i5 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
     i1 = i5 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i6 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i4 >> 2] = i5;
      i10 = HEAP32[6008] | 0;
      break;
     } else _abort();
    } else {
     HEAP32[6006] = i8 & ~(1 << i2);
     i10 = i7;
    } while (0);
    i38 = i2 << 3;
    i7 = i38 - i14 | 0;
    HEAP32[i6 + 4 >> 2] = i14 | 3;
    i8 = i6 + i14 | 0;
    HEAP32[i6 + (i14 | 4) >> 2] = i7 | 1;
    HEAP32[i6 + i38 >> 2] = i7;
    if (i10) {
     i5 = HEAP32[6011] | 0;
     i3 = i10 >>> 3;
     i1 = i3 << 1;
     i4 = 24064 + (i1 << 2) | 0;
     i2 = HEAP32[6006] | 0;
     i3 = 1 << i3;
     if (i2 & i3) {
      i2 = 24064 + (i1 + 2 << 2) | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (i1 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
       i11 = i2;
       i12 = i1;
      }
     } else {
      HEAP32[6006] = i2 | i3;
      i11 = 24064 + (i1 + 2 << 2) | 0;
      i12 = i4;
     }
     HEAP32[i11 >> 2] = i5;
     HEAP32[i12 + 12 >> 2] = i5;
     HEAP32[i5 + 8 >> 2] = i12;
     HEAP32[i5 + 12 >> 2] = i4;
    }
    HEAP32[6008] = i7;
    HEAP32[6011] = i8;
    i38 = i9;
    return i38 | 0;
   }
   i2 = HEAP32[6007] | 0;
   if (i2) {
    i3 = (i2 & 0 - i2) + -1 | 0;
    i37 = i3 >>> 12 & 16;
    i3 = i3 >>> i37;
    i36 = i3 >>> 5 & 8;
    i3 = i3 >>> i36;
    i38 = i3 >>> 2 & 4;
    i3 = i3 >>> i38;
    i2 = i3 >>> 1 & 2;
    i3 = i3 >>> i2;
    i4 = i3 >>> 1 & 1;
    i4 = HEAP32[24328 + ((i36 | i37 | i38 | i2 | i4) + (i3 >>> i4) << 2) >> 2] | 0;
    i3 = (HEAP32[i4 + 4 >> 2] & -8) - i14 | 0;
    i2 = i4;
    while (1) {
     i1 = HEAP32[i2 + 16 >> 2] | 0;
     if (!i1) {
      i1 = HEAP32[i2 + 20 >> 2] | 0;
      if (!i1) {
       i9 = i3;
       break;
      }
     }
     i2 = (HEAP32[i1 + 4 >> 2] & -8) - i14 | 0;
     i38 = i2 >>> 0 < i3 >>> 0;
     i3 = i38 ? i2 : i3;
     i2 = i1;
     i4 = i38 ? i1 : i4;
    }
    i6 = HEAP32[6010] | 0;
    if (i4 >>> 0 < i6 >>> 0) _abort();
    i8 = i4 + i14 | 0;
    if (i4 >>> 0 >= i8 >>> 0) _abort();
    i7 = HEAP32[i4 + 24 >> 2] | 0;
    i3 = HEAP32[i4 + 12 >> 2] | 0;
    do if ((i3 | 0) == (i4 | 0)) {
     i2 = i4 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i4 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i13 = 0;
       break;
      }
     }
     while (1) {
      i3 = i1 + 20 | 0;
      i5 = HEAP32[i3 >> 2] | 0;
      if (i5) {
       i1 = i5;
       i2 = i3;
       continue;
      }
      i3 = i1 + 16 | 0;
      i5 = HEAP32[i3 >> 2] | 0;
      if (!i5) break; else {
       i1 = i5;
       i2 = i3;
      }
     }
     if (i2 >>> 0 < i6 >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = 0;
      i13 = i1;
      break;
     }
    } else {
     i5 = HEAP32[i4 + 8 >> 2] | 0;
     if (i5 >>> 0 < i6 >>> 0) _abort();
     i1 = i5 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) != (i4 | 0)) _abort();
     i2 = i3 + 8 | 0;
     if ((HEAP32[i2 >> 2] | 0) == (i4 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i2 >> 2] = i5;
      i13 = i3;
      break;
     } else _abort();
    } while (0);
    do if (i7) {
     i1 = HEAP32[i4 + 28 >> 2] | 0;
     i2 = 24328 + (i1 << 2) | 0;
     if ((i4 | 0) == (HEAP32[i2 >> 2] | 0)) {
      HEAP32[i2 >> 2] = i13;
      if (!i13) {
       HEAP32[6007] = HEAP32[6007] & ~(1 << i1);
       break;
      }
     } else {
      if (i7 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
      i1 = i7 + 16 | 0;
      if ((HEAP32[i1 >> 2] | 0) == (i4 | 0)) HEAP32[i1 >> 2] = i13; else HEAP32[i7 + 20 >> 2] = i13;
      if (!i13) break;
     }
     i2 = HEAP32[6010] | 0;
     if (i13 >>> 0 < i2 >>> 0) _abort();
     HEAP32[i13 + 24 >> 2] = i7;
     i1 = HEAP32[i4 + 16 >> 2] | 0;
     do if (i1) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
      HEAP32[i13 + 16 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i13;
      break;
     } while (0);
     i1 = HEAP32[i4 + 20 >> 2] | 0;
     if (i1) if (i1 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
      HEAP32[i13 + 20 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i13;
      break;
     }
    } while (0);
    if (i9 >>> 0 < 16) {
     i38 = i9 + i14 | 0;
     HEAP32[i4 + 4 >> 2] = i38 | 3;
     i38 = i4 + (i38 + 4) | 0;
     HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 1;
    } else {
     HEAP32[i4 + 4 >> 2] = i14 | 3;
     HEAP32[i4 + (i14 | 4) >> 2] = i9 | 1;
     HEAP32[i4 + (i9 + i14) >> 2] = i9;
     i1 = HEAP32[6008] | 0;
     if (i1) {
      i6 = HEAP32[6011] | 0;
      i3 = i1 >>> 3;
      i1 = i3 << 1;
      i5 = 24064 + (i1 << 2) | 0;
      i2 = HEAP32[6006] | 0;
      i3 = 1 << i3;
      if (i2 & i3) {
       i1 = 24064 + (i1 + 2 << 2) | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
        i15 = i1;
        i16 = i2;
       }
      } else {
       HEAP32[6006] = i2 | i3;
       i15 = 24064 + (i1 + 2 << 2) | 0;
       i16 = i5;
      }
      HEAP32[i15 >> 2] = i6;
      HEAP32[i16 + 12 >> 2] = i6;
      HEAP32[i6 + 8 >> 2] = i16;
      HEAP32[i6 + 12 >> 2] = i5;
     }
     HEAP32[6008] = i9;
     HEAP32[6011] = i8;
    }
    i38 = i4 + 8 | 0;
    return i38 | 0;
   } else i16 = i14;
  } else i16 = i14;
 } else if (i2 >>> 0 <= 4294967231) {
  i2 = i2 + 11 | 0;
  i12 = i2 & -8;
  i11 = HEAP32[6007] | 0;
  if (i11) {
   i3 = 0 - i12 | 0;
   i2 = i2 >>> 8;
   if (i2) if (i12 >>> 0 > 16777215) i10 = 31; else {
    i16 = (i2 + 1048320 | 0) >>> 16 & 8;
    i21 = i2 << i16;
    i15 = (i21 + 520192 | 0) >>> 16 & 4;
    i21 = i21 << i15;
    i10 = (i21 + 245760 | 0) >>> 16 & 2;
    i10 = 14 - (i15 | i16 | i10) + (i21 << i10 >>> 15) | 0;
    i10 = i12 >>> (i10 + 7 | 0) & 1 | i10 << 1;
   } else i10 = 0;
   i2 = HEAP32[24328 + (i10 << 2) >> 2] | 0;
   L123 : do if (!i2) {
    i5 = 0;
    i2 = 0;
    i21 = 86;
   } else {
    i7 = i3;
    i5 = 0;
    i8 = i12 << ((i10 | 0) == 31 ? 0 : 25 - (i10 >>> 1) | 0);
    i9 = i2;
    i2 = 0;
    while (1) {
     i6 = HEAP32[i9 + 4 >> 2] & -8;
     i3 = i6 - i12 | 0;
     if (i3 >>> 0 < i7 >>> 0) if ((i6 | 0) == (i12 | 0)) {
      i6 = i9;
      i2 = i9;
      i21 = 90;
      break L123;
     } else i2 = i9; else i3 = i7;
     i21 = HEAP32[i9 + 20 >> 2] | 0;
     i9 = HEAP32[i9 + 16 + (i8 >>> 31 << 2) >> 2] | 0;
     i5 = (i21 | 0) == 0 | (i21 | 0) == (i9 | 0) ? i5 : i21;
     if (!i9) {
      i21 = 86;
      break;
     } else {
      i7 = i3;
      i8 = i8 << 1;
     }
    }
   } while (0);
   if ((i21 | 0) == 86) {
    if ((i5 | 0) == 0 & (i2 | 0) == 0) {
     i2 = 2 << i10;
     i2 = i11 & (i2 | 0 - i2);
     if (!i2) {
      i16 = i12;
      break;
     }
     i2 = (i2 & 0 - i2) + -1 | 0;
     i13 = i2 >>> 12 & 16;
     i2 = i2 >>> i13;
     i11 = i2 >>> 5 & 8;
     i2 = i2 >>> i11;
     i15 = i2 >>> 2 & 4;
     i2 = i2 >>> i15;
     i16 = i2 >>> 1 & 2;
     i2 = i2 >>> i16;
     i5 = i2 >>> 1 & 1;
     i5 = HEAP32[24328 + ((i11 | i13 | i15 | i16 | i5) + (i2 >>> i5) << 2) >> 2] | 0;
     i2 = 0;
    }
    if (!i5) {
     i8 = i3;
     i9 = i2;
    } else {
     i6 = i5;
     i21 = 90;
    }
   }
   if ((i21 | 0) == 90) while (1) {
    i21 = 0;
    i16 = (HEAP32[i6 + 4 >> 2] & -8) - i12 | 0;
    i5 = i16 >>> 0 < i3 >>> 0;
    i3 = i5 ? i16 : i3;
    i2 = i5 ? i6 : i2;
    i5 = HEAP32[i6 + 16 >> 2] | 0;
    if (i5) {
     i6 = i5;
     i21 = 90;
     continue;
    }
    i6 = HEAP32[i6 + 20 >> 2] | 0;
    if (!i6) {
     i8 = i3;
     i9 = i2;
     break;
    } else i21 = 90;
   }
   if ((i9 | 0) != 0 ? i8 >>> 0 < ((HEAP32[6008] | 0) - i12 | 0) >>> 0 : 0) {
    i5 = HEAP32[6010] | 0;
    if (i9 >>> 0 < i5 >>> 0) _abort();
    i7 = i9 + i12 | 0;
    if (i9 >>> 0 >= i7 >>> 0) _abort();
    i6 = HEAP32[i9 + 24 >> 2] | 0;
    i3 = HEAP32[i9 + 12 >> 2] | 0;
    do if ((i3 | 0) == (i9 | 0)) {
     i2 = i9 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i9 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i14 = 0;
       break;
      }
     }
     while (1) {
      i3 = i1 + 20 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (i4) {
       i1 = i4;
       i2 = i3;
       continue;
      }
      i3 = i1 + 16 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break; else {
       i1 = i4;
       i2 = i3;
      }
     }
     if (i2 >>> 0 < i5 >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = 0;
      i14 = i1;
      break;
     }
    } else {
     i4 = HEAP32[i9 + 8 >> 2] | 0;
     if (i4 >>> 0 < i5 >>> 0) _abort();
     i1 = i4 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) != (i9 | 0)) _abort();
     i2 = i3 + 8 | 0;
     if ((HEAP32[i2 >> 2] | 0) == (i9 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i2 >> 2] = i4;
      i14 = i3;
      break;
     } else _abort();
    } while (0);
    do if (i6) {
     i1 = HEAP32[i9 + 28 >> 2] | 0;
     i2 = 24328 + (i1 << 2) | 0;
     if ((i9 | 0) == (HEAP32[i2 >> 2] | 0)) {
      HEAP32[i2 >> 2] = i14;
      if (!i14) {
       HEAP32[6007] = HEAP32[6007] & ~(1 << i1);
       break;
      }
     } else {
      if (i6 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
      i1 = i6 + 16 | 0;
      if ((HEAP32[i1 >> 2] | 0) == (i9 | 0)) HEAP32[i1 >> 2] = i14; else HEAP32[i6 + 20 >> 2] = i14;
      if (!i14) break;
     }
     i2 = HEAP32[6010] | 0;
     if (i14 >>> 0 < i2 >>> 0) _abort();
     HEAP32[i14 + 24 >> 2] = i6;
     i1 = HEAP32[i9 + 16 >> 2] | 0;
     do if (i1) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
      HEAP32[i14 + 16 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i14;
      break;
     } while (0);
     i1 = HEAP32[i9 + 20 >> 2] | 0;
     if (i1) if (i1 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
      HEAP32[i14 + 20 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i14;
      break;
     }
    } while (0);
    L199 : do if (i8 >>> 0 >= 16) {
     HEAP32[i9 + 4 >> 2] = i12 | 3;
     HEAP32[i9 + (i12 | 4) >> 2] = i8 | 1;
     HEAP32[i9 + (i8 + i12) >> 2] = i8;
     i1 = i8 >>> 3;
     if (i8 >>> 0 < 256) {
      i2 = i1 << 1;
      i4 = 24064 + (i2 << 2) | 0;
      i3 = HEAP32[6006] | 0;
      i1 = 1 << i1;
      if (i3 & i1) {
       i1 = 24064 + (i2 + 2 << 2) | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
        i18 = i1;
        i19 = i2;
       }
      } else {
       HEAP32[6006] = i3 | i1;
       i18 = 24064 + (i2 + 2 << 2) | 0;
       i19 = i4;
      }
      HEAP32[i18 >> 2] = i7;
      HEAP32[i19 + 12 >> 2] = i7;
      HEAP32[i9 + (i12 + 8) >> 2] = i19;
      HEAP32[i9 + (i12 + 12) >> 2] = i4;
      break;
     }
     i1 = i8 >>> 8;
     if (i1) if (i8 >>> 0 > 16777215) i4 = 31; else {
      i37 = (i1 + 1048320 | 0) >>> 16 & 8;
      i38 = i1 << i37;
      i36 = (i38 + 520192 | 0) >>> 16 & 4;
      i38 = i38 << i36;
      i4 = (i38 + 245760 | 0) >>> 16 & 2;
      i4 = 14 - (i36 | i37 | i4) + (i38 << i4 >>> 15) | 0;
      i4 = i8 >>> (i4 + 7 | 0) & 1 | i4 << 1;
     } else i4 = 0;
     i1 = 24328 + (i4 << 2) | 0;
     HEAP32[i9 + (i12 + 28) >> 2] = i4;
     HEAP32[i9 + (i12 + 20) >> 2] = 0;
     HEAP32[i9 + (i12 + 16) >> 2] = 0;
     i2 = HEAP32[6007] | 0;
     i3 = 1 << i4;
     if (!(i2 & i3)) {
      HEAP32[6007] = i2 | i3;
      HEAP32[i1 >> 2] = i7;
      HEAP32[i9 + (i12 + 24) >> 2] = i1;
      HEAP32[i9 + (i12 + 12) >> 2] = i7;
      HEAP32[i9 + (i12 + 8) >> 2] = i7;
      break;
     }
     i1 = HEAP32[i1 >> 2] | 0;
     L217 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i8 | 0)) {
      i4 = i8 << ((i4 | 0) == 31 ? 0 : 25 - (i4 >>> 1) | 0);
      while (1) {
       i2 = i1 + 16 + (i4 >>> 31 << 2) | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if (!i3) break;
       if ((HEAP32[i3 + 4 >> 2] & -8 | 0) == (i8 | 0)) {
        i24 = i3;
        break L217;
       } else {
        i4 = i4 << 1;
        i1 = i3;
       }
      }
      if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
       HEAP32[i2 >> 2] = i7;
       HEAP32[i9 + (i12 + 24) >> 2] = i1;
       HEAP32[i9 + (i12 + 12) >> 2] = i7;
       HEAP32[i9 + (i12 + 8) >> 2] = i7;
       break L199;
      }
     } else i24 = i1; while (0);
     i1 = i24 + 8 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     i38 = HEAP32[6010] | 0;
     if (i2 >>> 0 >= i38 >>> 0 & i24 >>> 0 >= i38 >>> 0) {
      HEAP32[i2 + 12 >> 2] = i7;
      HEAP32[i1 >> 2] = i7;
      HEAP32[i9 + (i12 + 8) >> 2] = i2;
      HEAP32[i9 + (i12 + 12) >> 2] = i24;
      HEAP32[i9 + (i12 + 24) >> 2] = 0;
      break;
     } else _abort();
    } else {
     i38 = i8 + i12 | 0;
     HEAP32[i9 + 4 >> 2] = i38 | 3;
     i38 = i9 + (i38 + 4) | 0;
     HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 1;
    } while (0);
    i38 = i9 + 8 | 0;
    return i38 | 0;
   } else i16 = i12;
  } else i16 = i12;
 } else i16 = -1; while (0);
 i3 = HEAP32[6008] | 0;
 if (i3 >>> 0 >= i16 >>> 0) {
  i1 = i3 - i16 | 0;
  i2 = HEAP32[6011] | 0;
  if (i1 >>> 0 > 15) {
   HEAP32[6011] = i2 + i16;
   HEAP32[6008] = i1;
   HEAP32[i2 + (i16 + 4) >> 2] = i1 | 1;
   HEAP32[i2 + i3 >> 2] = i1;
   HEAP32[i2 + 4 >> 2] = i16 | 3;
  } else {
   HEAP32[6008] = 0;
   HEAP32[6011] = 0;
   HEAP32[i2 + 4 >> 2] = i3 | 3;
   i38 = i2 + (i3 + 4) | 0;
   HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 1;
  }
  i38 = i2 + 8 | 0;
  return i38 | 0;
 }
 i2 = HEAP32[6009] | 0;
 if (i2 >>> 0 > i16 >>> 0) {
  i37 = i2 - i16 | 0;
  HEAP32[6009] = i37;
  i38 = HEAP32[6012] | 0;
  HEAP32[6012] = i38 + i16;
  HEAP32[i38 + (i16 + 4) >> 2] = i37 | 1;
  HEAP32[i38 + 4 >> 2] = i16 | 3;
  i38 = i38 + 8 | 0;
  return i38 | 0;
 }
 do if (!(HEAP32[6124] | 0)) {
  i2 = _sysconf(30) | 0;
  if (!(i2 + -1 & i2)) {
   HEAP32[6126] = i2;
   HEAP32[6125] = i2;
   HEAP32[6127] = -1;
   HEAP32[6128] = -1;
   HEAP32[6129] = 0;
   HEAP32[6117] = 0;
   i24 = (_time(0) | 0) & -16 ^ 1431655768;
   HEAP32[6124] = i24;
   break;
  } else _abort();
 } while (0);
 i9 = i16 + 48 | 0;
 i8 = HEAP32[6126] | 0;
 i10 = i16 + 47 | 0;
 i7 = i8 + i10 | 0;
 i8 = 0 - i8 | 0;
 i11 = i7 & i8;
 if (i11 >>> 0 <= i16 >>> 0) {
  i38 = 0;
  return i38 | 0;
 }
 i2 = HEAP32[6116] | 0;
 if ((i2 | 0) != 0 ? (i19 = HEAP32[6114] | 0, i24 = i19 + i11 | 0, i24 >>> 0 <= i19 >>> 0 | i24 >>> 0 > i2 >>> 0) : 0) {
  i38 = 0;
  return i38 | 0;
 }
 L258 : do if (!(HEAP32[6117] & 4)) {
  i2 = HEAP32[6012] | 0;
  L260 : do if (i2) {
   i5 = 24472;
   while (1) {
    i3 = HEAP32[i5 >> 2] | 0;
    if (i3 >>> 0 <= i2 >>> 0 ? (i17 = i5 + 4 | 0, (i3 + (HEAP32[i17 >> 2] | 0) | 0) >>> 0 > i2 >>> 0) : 0) {
     i6 = i5;
     i2 = i17;
     break;
    }
    i5 = HEAP32[i5 + 8 >> 2] | 0;
    if (!i5) {
     i21 = 174;
     break L260;
    }
   }
   i3 = i7 - (HEAP32[6009] | 0) & i8;
   if (i3 >>> 0 < 2147483647) {
    i5 = _sbrk(i3 | 0) | 0;
    i24 = (i5 | 0) == ((HEAP32[i6 >> 2] | 0) + (HEAP32[i2 >> 2] | 0) | 0);
    i2 = i24 ? i3 : 0;
    if (i24) {
     if ((i5 | 0) != (-1 | 0)) {
      i22 = i5;
      i15 = i2;
      i21 = 194;
      break L258;
     }
    } else i21 = 184;
   } else i2 = 0;
  } else i21 = 174; while (0);
  do if ((i21 | 0) == 174) {
   i6 = _sbrk(0) | 0;
   if ((i6 | 0) != (-1 | 0)) {
    i2 = i6;
    i3 = HEAP32[6125] | 0;
    i5 = i3 + -1 | 0;
    if (!(i5 & i2)) i3 = i11; else i3 = i11 - i2 + (i5 + i2 & 0 - i3) | 0;
    i2 = HEAP32[6114] | 0;
    i5 = i2 + i3 | 0;
    if (i3 >>> 0 > i16 >>> 0 & i3 >>> 0 < 2147483647) {
     i24 = HEAP32[6116] | 0;
     if ((i24 | 0) != 0 ? i5 >>> 0 <= i2 >>> 0 | i5 >>> 0 > i24 >>> 0 : 0) {
      i2 = 0;
      break;
     }
     i5 = _sbrk(i3 | 0) | 0;
     i24 = (i5 | 0) == (i6 | 0);
     i2 = i24 ? i3 : 0;
     if (i24) {
      i22 = i6;
      i15 = i2;
      i21 = 194;
      break L258;
     } else i21 = 184;
    } else i2 = 0;
   } else i2 = 0;
  } while (0);
  L280 : do if ((i21 | 0) == 184) {
   i6 = 0 - i3 | 0;
   do if (i9 >>> 0 > i3 >>> 0 & (i3 >>> 0 < 2147483647 & (i5 | 0) != (-1 | 0)) ? (i20 = HEAP32[6126] | 0, i20 = i10 - i3 + i20 & 0 - i20, i20 >>> 0 < 2147483647) : 0) if ((_sbrk(i20 | 0) | 0) == (-1 | 0)) {
    _sbrk(i6 | 0) | 0;
    break L280;
   } else {
    i3 = i20 + i3 | 0;
    break;
   } while (0);
   if ((i5 | 0) != (-1 | 0)) {
    i22 = i5;
    i15 = i3;
    i21 = 194;
    break L258;
   }
  } while (0);
  HEAP32[6117] = HEAP32[6117] | 4;
  i21 = 191;
 } else {
  i2 = 0;
  i21 = 191;
 } while (0);
 if ((((i21 | 0) == 191 ? i11 >>> 0 < 2147483647 : 0) ? (i22 = _sbrk(i11 | 0) | 0, i23 = _sbrk(0) | 0, i22 >>> 0 < i23 >>> 0 & ((i22 | 0) != (-1 | 0) & (i23 | 0) != (-1 | 0))) : 0) ? (i25 = i23 - i22 | 0, i26 = i25 >>> 0 > (i16 + 40 | 0) >>> 0, i26) : 0) {
  i15 = i26 ? i25 : i2;
  i21 = 194;
 }
 if ((i21 | 0) == 194) {
  i2 = (HEAP32[6114] | 0) + i15 | 0;
  HEAP32[6114] = i2;
  if (i2 >>> 0 > (HEAP32[6115] | 0) >>> 0) HEAP32[6115] = i2;
  i7 = HEAP32[6012] | 0;
  L299 : do if (i7) {
   i6 = 24472;
   do {
    i2 = HEAP32[i6 >> 2] | 0;
    i3 = i6 + 4 | 0;
    i5 = HEAP32[i3 >> 2] | 0;
    if ((i22 | 0) == (i2 + i5 | 0)) {
     i27 = i2;
     i28 = i3;
     i29 = i5;
     i30 = i6;
     i21 = 204;
     break;
    }
    i6 = HEAP32[i6 + 8 >> 2] | 0;
   } while ((i6 | 0) != 0);
   if (((i21 | 0) == 204 ? (HEAP32[i30 + 12 >> 2] & 8 | 0) == 0 : 0) ? i7 >>> 0 < i22 >>> 0 & i7 >>> 0 >= i27 >>> 0 : 0) {
    HEAP32[i28 >> 2] = i29 + i15;
    i38 = (HEAP32[6009] | 0) + i15 | 0;
    i37 = i7 + 8 | 0;
    i37 = (i37 & 7 | 0) == 0 ? 0 : 0 - i37 & 7;
    i36 = i38 - i37 | 0;
    HEAP32[6012] = i7 + i37;
    HEAP32[6009] = i36;
    HEAP32[i7 + (i37 + 4) >> 2] = i36 | 1;
    HEAP32[i7 + (i38 + 4) >> 2] = 40;
    HEAP32[6013] = HEAP32[6128];
    break;
   }
   i2 = HEAP32[6010] | 0;
   if (i22 >>> 0 < i2 >>> 0) {
    HEAP32[6010] = i22;
    i2 = i22;
   }
   i3 = i22 + i15 | 0;
   i6 = 24472;
   while (1) {
    if ((HEAP32[i6 >> 2] | 0) == (i3 | 0)) {
     i5 = i6;
     i3 = i6;
     i21 = 212;
     break;
    }
    i6 = HEAP32[i6 + 8 >> 2] | 0;
    if (!i6) {
     i3 = 24472;
     break;
    }
   }
   if ((i21 | 0) == 212) if (!(HEAP32[i3 + 12 >> 2] & 8)) {
    HEAP32[i5 >> 2] = i22;
    i13 = i3 + 4 | 0;
    HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + i15;
    i13 = i22 + 8 | 0;
    i13 = (i13 & 7 | 0) == 0 ? 0 : 0 - i13 & 7;
    i10 = i22 + (i15 + 8) | 0;
    i10 = (i10 & 7 | 0) == 0 ? 0 : 0 - i10 & 7;
    i1 = i22 + (i10 + i15) | 0;
    i12 = i13 + i16 | 0;
    i14 = i22 + i12 | 0;
    i11 = i1 - (i22 + i13) - i16 | 0;
    HEAP32[i22 + (i13 + 4) >> 2] = i16 | 3;
    L324 : do if ((i1 | 0) != (i7 | 0)) {
     if ((i1 | 0) == (HEAP32[6011] | 0)) {
      i38 = (HEAP32[6008] | 0) + i11 | 0;
      HEAP32[6008] = i38;
      HEAP32[6011] = i14;
      HEAP32[i22 + (i12 + 4) >> 2] = i38 | 1;
      HEAP32[i22 + (i38 + i12) >> 2] = i38;
      break;
     }
     i8 = i15 + 4 | 0;
     i3 = HEAP32[i22 + (i8 + i10) >> 2] | 0;
     if ((i3 & 3 | 0) == 1) {
      i9 = i3 & -8;
      i6 = i3 >>> 3;
      L332 : do if (i3 >>> 0 >= 256) {
       i7 = HEAP32[i22 + ((i10 | 24) + i15) >> 2] | 0;
       i4 = HEAP32[i22 + (i15 + 12 + i10) >> 2] | 0;
       do if ((i4 | 0) == (i1 | 0)) {
        i5 = i10 | 16;
        i4 = i22 + (i8 + i5) | 0;
        i3 = HEAP32[i4 >> 2] | 0;
        if (!i3) {
         i4 = i22 + (i5 + i15) | 0;
         i3 = HEAP32[i4 >> 2] | 0;
         if (!i3) {
          i35 = 0;
          break;
         }
        }
        while (1) {
         i5 = i3 + 20 | 0;
         i6 = HEAP32[i5 >> 2] | 0;
         if (i6) {
          i3 = i6;
          i4 = i5;
          continue;
         }
         i5 = i3 + 16 | 0;
         i6 = HEAP32[i5 >> 2] | 0;
         if (!i6) break; else {
          i3 = i6;
          i4 = i5;
         }
        }
        if (i4 >>> 0 < i2 >>> 0) _abort(); else {
         HEAP32[i4 >> 2] = 0;
         i35 = i3;
         break;
        }
       } else {
        i5 = HEAP32[i22 + ((i10 | 8) + i15) >> 2] | 0;
        if (i5 >>> 0 < i2 >>> 0) _abort();
        i2 = i5 + 12 | 0;
        if ((HEAP32[i2 >> 2] | 0) != (i1 | 0)) _abort();
        i3 = i4 + 8 | 0;
        if ((HEAP32[i3 >> 2] | 0) == (i1 | 0)) {
         HEAP32[i2 >> 2] = i4;
         HEAP32[i3 >> 2] = i5;
         i35 = i4;
         break;
        } else _abort();
       } while (0);
       if (!i7) break;
       i2 = HEAP32[i22 + (i15 + 28 + i10) >> 2] | 0;
       i3 = 24328 + (i2 << 2) | 0;
       do if ((i1 | 0) != (HEAP32[i3 >> 2] | 0)) {
        if (i7 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
        i2 = i7 + 16 | 0;
        if ((HEAP32[i2 >> 2] | 0) == (i1 | 0)) HEAP32[i2 >> 2] = i35; else HEAP32[i7 + 20 >> 2] = i35;
        if (!i35) break L332;
       } else {
        HEAP32[i3 >> 2] = i35;
        if (i35) break;
        HEAP32[6007] = HEAP32[6007] & ~(1 << i2);
        break L332;
       } while (0);
       i3 = HEAP32[6010] | 0;
       if (i35 >>> 0 < i3 >>> 0) _abort();
       HEAP32[i35 + 24 >> 2] = i7;
       i1 = i10 | 16;
       i2 = HEAP32[i22 + (i1 + i15) >> 2] | 0;
       do if (i2) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
        HEAP32[i35 + 16 >> 2] = i2;
        HEAP32[i2 + 24 >> 2] = i35;
        break;
       } while (0);
       i1 = HEAP32[i22 + (i8 + i1) >> 2] | 0;
       if (!i1) break;
       if (i1 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
        HEAP32[i35 + 20 >> 2] = i1;
        HEAP32[i1 + 24 >> 2] = i35;
        break;
       }
      } else {
       i4 = HEAP32[i22 + ((i10 | 8) + i15) >> 2] | 0;
       i5 = HEAP32[i22 + (i15 + 12 + i10) >> 2] | 0;
       i3 = 24064 + (i6 << 1 << 2) | 0;
       do if ((i4 | 0) != (i3 | 0)) {
        if (i4 >>> 0 < i2 >>> 0) _abort();
        if ((HEAP32[i4 + 12 >> 2] | 0) == (i1 | 0)) break;
        _abort();
       } while (0);
       if ((i5 | 0) == (i4 | 0)) {
        HEAP32[6006] = HEAP32[6006] & ~(1 << i6);
        break;
       }
       do if ((i5 | 0) == (i3 | 0)) i31 = i5 + 8 | 0; else {
        if (i5 >>> 0 < i2 >>> 0) _abort();
        i2 = i5 + 8 | 0;
        if ((HEAP32[i2 >> 2] | 0) == (i1 | 0)) {
         i31 = i2;
         break;
        }
        _abort();
       } while (0);
       HEAP32[i4 + 12 >> 2] = i5;
       HEAP32[i31 >> 2] = i4;
      } while (0);
      i1 = i22 + ((i9 | i10) + i15) | 0;
      i5 = i9 + i11 | 0;
     } else i5 = i11;
     i1 = i1 + 4 | 0;
     HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -2;
     HEAP32[i22 + (i12 + 4) >> 2] = i5 | 1;
     HEAP32[i22 + (i5 + i12) >> 2] = i5;
     i1 = i5 >>> 3;
     if (i5 >>> 0 < 256) {
      i2 = i1 << 1;
      i4 = 24064 + (i2 << 2) | 0;
      i3 = HEAP32[6006] | 0;
      i1 = 1 << i1;
      do if (!(i3 & i1)) {
       HEAP32[6006] = i3 | i1;
       i36 = 24064 + (i2 + 2 << 2) | 0;
       i37 = i4;
      } else {
       i1 = 24064 + (i2 + 2 << 2) | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 >= (HEAP32[6010] | 0) >>> 0) {
        i36 = i1;
        i37 = i2;
        break;
       }
       _abort();
      } while (0);
      HEAP32[i36 >> 2] = i14;
      HEAP32[i37 + 12 >> 2] = i14;
      HEAP32[i22 + (i12 + 8) >> 2] = i37;
      HEAP32[i22 + (i12 + 12) >> 2] = i4;
      break;
     }
     i1 = i5 >>> 8;
     do if (!i1) i4 = 0; else {
      if (i5 >>> 0 > 16777215) {
       i4 = 31;
       break;
      }
      i36 = (i1 + 1048320 | 0) >>> 16 & 8;
      i37 = i1 << i36;
      i35 = (i37 + 520192 | 0) >>> 16 & 4;
      i37 = i37 << i35;
      i4 = (i37 + 245760 | 0) >>> 16 & 2;
      i4 = 14 - (i35 | i36 | i4) + (i37 << i4 >>> 15) | 0;
      i4 = i5 >>> (i4 + 7 | 0) & 1 | i4 << 1;
     } while (0);
     i1 = 24328 + (i4 << 2) | 0;
     HEAP32[i22 + (i12 + 28) >> 2] = i4;
     HEAP32[i22 + (i12 + 20) >> 2] = 0;
     HEAP32[i22 + (i12 + 16) >> 2] = 0;
     i2 = HEAP32[6007] | 0;
     i3 = 1 << i4;
     if (!(i2 & i3)) {
      HEAP32[6007] = i2 | i3;
      HEAP32[i1 >> 2] = i14;
      HEAP32[i22 + (i12 + 24) >> 2] = i1;
      HEAP32[i22 + (i12 + 12) >> 2] = i14;
      HEAP32[i22 + (i12 + 8) >> 2] = i14;
      break;
     }
     i1 = HEAP32[i1 >> 2] | 0;
     L418 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i5 | 0)) {
      i4 = i5 << ((i4 | 0) == 31 ? 0 : 25 - (i4 >>> 1) | 0);
      while (1) {
       i2 = i1 + 16 + (i4 >>> 31 << 2) | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if (!i3) break;
       if ((HEAP32[i3 + 4 >> 2] & -8 | 0) == (i5 | 0)) {
        i38 = i3;
        break L418;
       } else {
        i4 = i4 << 1;
        i1 = i3;
       }
      }
      if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
       HEAP32[i2 >> 2] = i14;
       HEAP32[i22 + (i12 + 24) >> 2] = i1;
       HEAP32[i22 + (i12 + 12) >> 2] = i14;
       HEAP32[i22 + (i12 + 8) >> 2] = i14;
       break L324;
      }
     } else i38 = i1; while (0);
     i1 = i38 + 8 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     i37 = HEAP32[6010] | 0;
     if (i2 >>> 0 >= i37 >>> 0 & i38 >>> 0 >= i37 >>> 0) {
      HEAP32[i2 + 12 >> 2] = i14;
      HEAP32[i1 >> 2] = i14;
      HEAP32[i22 + (i12 + 8) >> 2] = i2;
      HEAP32[i22 + (i12 + 12) >> 2] = i38;
      HEAP32[i22 + (i12 + 24) >> 2] = 0;
      break;
     } else _abort();
    } else {
     i38 = (HEAP32[6009] | 0) + i11 | 0;
     HEAP32[6009] = i38;
     HEAP32[6012] = i14;
     HEAP32[i22 + (i12 + 4) >> 2] = i38 | 1;
    } while (0);
    i38 = i22 + (i13 | 8) | 0;
    return i38 | 0;
   } else i3 = 24472;
   while (1) {
    i2 = HEAP32[i3 >> 2] | 0;
    if (i2 >>> 0 <= i7 >>> 0 ? (i1 = HEAP32[i3 + 4 >> 2] | 0, i4 = i2 + i1 | 0, i4 >>> 0 > i7 >>> 0) : 0) break;
    i3 = HEAP32[i3 + 8 >> 2] | 0;
   }
   i5 = i2 + (i1 + -39) | 0;
   i2 = i2 + (i1 + -47 + ((i5 & 7 | 0) == 0 ? 0 : 0 - i5 & 7)) | 0;
   i5 = i7 + 16 | 0;
   i2 = i2 >>> 0 < i5 >>> 0 ? i7 : i2;
   i1 = i2 + 8 | 0;
   i3 = i22 + 8 | 0;
   i3 = (i3 & 7 | 0) == 0 ? 0 : 0 - i3 & 7;
   i38 = i15 + -40 - i3 | 0;
   HEAP32[6012] = i22 + i3;
   HEAP32[6009] = i38;
   HEAP32[i22 + (i3 + 4) >> 2] = i38 | 1;
   HEAP32[i22 + (i15 + -36) >> 2] = 40;
   HEAP32[6013] = HEAP32[6128];
   i3 = i2 + 4 | 0;
   HEAP32[i3 >> 2] = 27;
   HEAP32[i1 >> 2] = HEAP32[6118];
   HEAP32[i1 + 4 >> 2] = HEAP32[6119];
   HEAP32[i1 + 8 >> 2] = HEAP32[6120];
   HEAP32[i1 + 12 >> 2] = HEAP32[6121];
   HEAP32[6118] = i22;
   HEAP32[6119] = i15;
   HEAP32[6121] = 0;
   HEAP32[6120] = i1;
   i1 = i2 + 28 | 0;
   HEAP32[i1 >> 2] = 7;
   if ((i2 + 32 | 0) >>> 0 < i4 >>> 0) do {
    i38 = i1;
    i1 = i1 + 4 | 0;
    HEAP32[i1 >> 2] = 7;
   } while ((i38 + 8 | 0) >>> 0 < i4 >>> 0);
   if ((i2 | 0) != (i7 | 0)) {
    i6 = i2 - i7 | 0;
    HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & -2;
    HEAP32[i7 + 4 >> 2] = i6 | 1;
    HEAP32[i2 >> 2] = i6;
    i1 = i6 >>> 3;
    if (i6 >>> 0 < 256) {
     i2 = i1 << 1;
     i4 = 24064 + (i2 << 2) | 0;
     i3 = HEAP32[6006] | 0;
     i1 = 1 << i1;
     if (i3 & i1) {
      i1 = 24064 + (i2 + 2 << 2) | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
       i32 = i1;
       i33 = i2;
      }
     } else {
      HEAP32[6006] = i3 | i1;
      i32 = 24064 + (i2 + 2 << 2) | 0;
      i33 = i4;
     }
     HEAP32[i32 >> 2] = i7;
     HEAP32[i33 + 12 >> 2] = i7;
     HEAP32[i7 + 8 >> 2] = i33;
     HEAP32[i7 + 12 >> 2] = i4;
     break;
    }
    i1 = i6 >>> 8;
    if (i1) if (i6 >>> 0 > 16777215) i4 = 31; else {
     i37 = (i1 + 1048320 | 0) >>> 16 & 8;
     i38 = i1 << i37;
     i36 = (i38 + 520192 | 0) >>> 16 & 4;
     i38 = i38 << i36;
     i4 = (i38 + 245760 | 0) >>> 16 & 2;
     i4 = 14 - (i36 | i37 | i4) + (i38 << i4 >>> 15) | 0;
     i4 = i6 >>> (i4 + 7 | 0) & 1 | i4 << 1;
    } else i4 = 0;
    i3 = 24328 + (i4 << 2) | 0;
    HEAP32[i7 + 28 >> 2] = i4;
    HEAP32[i7 + 20 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    i1 = HEAP32[6007] | 0;
    i2 = 1 << i4;
    if (!(i1 & i2)) {
     HEAP32[6007] = i1 | i2;
     HEAP32[i3 >> 2] = i7;
     HEAP32[i7 + 24 >> 2] = i3;
     HEAP32[i7 + 12 >> 2] = i7;
     HEAP32[i7 + 8 >> 2] = i7;
     break;
    }
    i1 = HEAP32[i3 >> 2] | 0;
    L459 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i6 | 0)) {
     i4 = i6 << ((i4 | 0) == 31 ? 0 : 25 - (i4 >>> 1) | 0);
     while (1) {
      i2 = i1 + 16 + (i4 >>> 31 << 2) | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if (!i3) break;
      if ((HEAP32[i3 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
       i34 = i3;
       break L459;
      } else {
       i4 = i4 << 1;
       i1 = i3;
      }
     }
     if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i1;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break L299;
     }
    } else i34 = i1; while (0);
    i1 = i34 + 8 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i38 = HEAP32[6010] | 0;
    if (i2 >>> 0 >= i38 >>> 0 & i34 >>> 0 >= i38 >>> 0) {
     HEAP32[i2 + 12 >> 2] = i7;
     HEAP32[i1 >> 2] = i7;
     HEAP32[i7 + 8 >> 2] = i2;
     HEAP32[i7 + 12 >> 2] = i34;
     HEAP32[i7 + 24 >> 2] = 0;
     break;
    } else _abort();
   }
  } else {
   i38 = HEAP32[6010] | 0;
   if ((i38 | 0) == 0 | i22 >>> 0 < i38 >>> 0) HEAP32[6010] = i22;
   HEAP32[6118] = i22;
   HEAP32[6119] = i15;
   HEAP32[6121] = 0;
   HEAP32[6015] = HEAP32[6124];
   HEAP32[6014] = -1;
   i1 = 0;
   do {
    i38 = i1 << 1;
    i37 = 24064 + (i38 << 2) | 0;
    HEAP32[24064 + (i38 + 3 << 2) >> 2] = i37;
    HEAP32[24064 + (i38 + 2 << 2) >> 2] = i37;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 32);
   i38 = i22 + 8 | 0;
   i38 = (i38 & 7 | 0) == 0 ? 0 : 0 - i38 & 7;
   i37 = i15 + -40 - i38 | 0;
   HEAP32[6012] = i22 + i38;
   HEAP32[6009] = i37;
   HEAP32[i22 + (i38 + 4) >> 2] = i37 | 1;
   HEAP32[i22 + (i15 + -36) >> 2] = 40;
   HEAP32[6013] = HEAP32[6128];
  } while (0);
  i1 = HEAP32[6009] | 0;
  if (i1 >>> 0 > i16 >>> 0) {
   i37 = i1 - i16 | 0;
   HEAP32[6009] = i37;
   i38 = HEAP32[6012] | 0;
   HEAP32[6012] = i38 + i16;
   HEAP32[i38 + (i16 + 4) >> 2] = i37 | 1;
   HEAP32[i38 + 4 >> 2] = i16 | 3;
   i38 = i38 + 8 | 0;
   return i38 | 0;
  }
 }
 i38 = ___errno_location() | 0;
 HEAP32[i38 >> 2] = 12;
 i38 = 0;
 return i38 | 0;
}

function _printf_core(i49, i2, i50, i51, i52) {
 i49 = i49 | 0;
 i2 = i2 | 0;
 i50 = i50 | 0;
 i51 = i51 | 0;
 i52 = i52 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i53 = 0;
 i53 = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i44 = i53 + 24 | 0;
 i46 = i53 + 16 | 0;
 i45 = i53 + 588 | 0;
 i39 = i53 + 576 | 0;
 i43 = i53;
 i36 = i53 + 536 | 0;
 i48 = i53 + 8 | 0;
 i47 = i53 + 528 | 0;
 i27 = (i49 | 0) != 0;
 i28 = i36 + 40 | 0;
 i35 = i28;
 i36 = i36 + 39 | 0;
 i37 = i48 + 4 | 0;
 i38 = i39 + 12 | 0;
 i39 = i39 + 11 | 0;
 i40 = i45;
 i41 = i38;
 i42 = i41 - i40 | 0;
 i29 = -2 - i40 | 0;
 i30 = i41 + 2 | 0;
 i31 = i44 + 288 | 0;
 i32 = i45 + 9 | 0;
 i33 = i32;
 i34 = i45 + 8 | 0;
 i1 = 0;
 i12 = i2;
 i3 = 0;
 i2 = 0;
 L1 : while (1) {
  do if ((i1 | 0) > -1) if ((i3 | 0) > (2147483647 - i1 | 0)) {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = 75;
   i1 = -1;
   break;
  } else {
   i1 = i3 + i1 | 0;
   break;
  } while (0);
  i3 = HEAP8[i12 >> 0] | 0;
  if (!(i3 << 24 >> 24)) {
   i26 = 245;
   break;
  } else i4 = i12;
  L9 : while (1) {
   switch (i3 << 24 >> 24) {
   case 37:
    {
     i3 = i4;
     i26 = 9;
     break L9;
    }
   case 0:
    {
     i3 = i4;
     break L9;
    }
   default:
    {}
   }
   i25 = i4 + 1 | 0;
   i3 = HEAP8[i25 >> 0] | 0;
   i4 = i25;
  }
  L12 : do if ((i26 | 0) == 9) while (1) {
   i26 = 0;
   if ((HEAP8[i3 + 1 >> 0] | 0) != 37) break L12;
   i4 = i4 + 1 | 0;
   i3 = i3 + 2 | 0;
   if ((HEAP8[i3 >> 0] | 0) == 37) i26 = 9; else break;
  } while (0);
  i14 = i4 - i12 | 0;
  if (i27 ? (HEAP32[i49 >> 2] & 32 | 0) == 0 : 0) ___fwritex(i12, i14, i49) | 0;
  if ((i4 | 0) != (i12 | 0)) {
   i12 = i3;
   i3 = i14;
   continue;
  }
  i7 = i3 + 1 | 0;
  i4 = HEAP8[i7 >> 0] | 0;
  i5 = (i4 << 24 >> 24) + -48 | 0;
  if (i5 >>> 0 < 10) {
   i25 = (HEAP8[i3 + 2 >> 0] | 0) == 36;
   i7 = i25 ? i3 + 3 | 0 : i7;
   i4 = HEAP8[i7 >> 0] | 0;
   i10 = i25 ? i5 : -1;
   i2 = i25 ? 1 : i2;
  } else i10 = -1;
  i3 = i4 << 24 >> 24;
  L25 : do if ((i3 & -32 | 0) == 32) {
   i5 = 0;
   while (1) {
    if (!(1 << i3 + -32 & 75913)) {
     i8 = i5;
     i3 = i7;
     break L25;
    }
    i5 = 1 << (i4 << 24 >> 24) + -32 | i5;
    i7 = i7 + 1 | 0;
    i4 = HEAP8[i7 >> 0] | 0;
    i3 = i4 << 24 >> 24;
    if ((i3 & -32 | 0) != 32) {
     i8 = i5;
     i3 = i7;
     break;
    }
   }
  } else {
   i8 = 0;
   i3 = i7;
  } while (0);
  do if (i4 << 24 >> 24 == 42) {
   i5 = i3 + 1 | 0;
   i4 = (HEAP8[i5 >> 0] | 0) + -48 | 0;
   if (i4 >>> 0 < 10 ? (HEAP8[i3 + 2 >> 0] | 0) == 36 : 0) {
    HEAP32[i52 + (i4 << 2) >> 2] = 10;
    i2 = 1;
    i3 = i3 + 3 | 0;
    i4 = HEAP32[i51 + ((HEAP8[i5 >> 0] | 0) + -48 << 3) >> 2] | 0;
   } else {
    if (i2) {
     i1 = -1;
     break L1;
    }
    if (!i27) {
     i13 = i8;
     i3 = i5;
     i2 = 0;
     i25 = 0;
     break;
    }
    i2 = (HEAP32[i50 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i4 = HEAP32[i2 >> 2] | 0;
    HEAP32[i50 >> 2] = i2 + 4;
    i2 = 0;
    i3 = i5;
   }
   if ((i4 | 0) < 0) {
    i13 = i8 | 8192;
    i25 = 0 - i4 | 0;
   } else {
    i13 = i8;
    i25 = i4;
   }
  } else {
   i5 = (i4 << 24 >> 24) + -48 | 0;
   if (i5 >>> 0 < 10) {
    i4 = 0;
    do {
     i4 = (i4 * 10 | 0) + i5 | 0;
     i3 = i3 + 1 | 0;
     i5 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
    } while (i5 >>> 0 < 10);
    if ((i4 | 0) < 0) {
     i1 = -1;
     break L1;
    } else {
     i13 = i8;
     i25 = i4;
    }
   } else {
    i13 = i8;
    i25 = 0;
   }
  } while (0);
  L46 : do if ((HEAP8[i3 >> 0] | 0) == 46) {
   i5 = i3 + 1 | 0;
   i4 = HEAP8[i5 >> 0] | 0;
   if (i4 << 24 >> 24 != 42) {
    i7 = (i4 << 24 >> 24) + -48 | 0;
    if (i7 >>> 0 < 10) {
     i3 = i5;
     i4 = 0;
    } else {
     i3 = i5;
     i7 = 0;
     break;
    }
    while (1) {
     i4 = (i4 * 10 | 0) + i7 | 0;
     i3 = i3 + 1 | 0;
     i7 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
     if (i7 >>> 0 >= 10) {
      i7 = i4;
      break L46;
     }
    }
   }
   i5 = i3 + 2 | 0;
   i4 = (HEAP8[i5 >> 0] | 0) + -48 | 0;
   if (i4 >>> 0 < 10 ? (HEAP8[i3 + 3 >> 0] | 0) == 36 : 0) {
    HEAP32[i52 + (i4 << 2) >> 2] = 10;
    i3 = i3 + 4 | 0;
    i7 = HEAP32[i51 + ((HEAP8[i5 >> 0] | 0) + -48 << 3) >> 2] | 0;
    break;
   }
   if (i2) {
    i1 = -1;
    break L1;
   }
   if (i27) {
    i3 = (HEAP32[i50 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i7 = HEAP32[i3 >> 2] | 0;
    HEAP32[i50 >> 2] = i3 + 4;
    i3 = i5;
   } else {
    i3 = i5;
    i7 = 0;
   }
  } else i7 = -1; while (0);
  i9 = 0;
  while (1) {
   i4 = (HEAP8[i3 >> 0] | 0) + -65 | 0;
   if (i4 >>> 0 > 57) {
    i1 = -1;
    break L1;
   }
   i5 = i3 + 1 | 0;
   i4 = HEAP8[42996 + (i9 * 58 | 0) + i4 >> 0] | 0;
   i8 = i4 & 255;
   if ((i8 + -1 | 0) >>> 0 < 8) {
    i3 = i5;
    i9 = i8;
   } else {
    i24 = i5;
    break;
   }
  }
  if (!(i4 << 24 >> 24)) {
   i1 = -1;
   break;
  }
  i5 = (i10 | 0) > -1;
  do if (i4 << 24 >> 24 == 19) if (i5) {
   i1 = -1;
   break L1;
  } else i26 = 52; else {
   if (i5) {
    HEAP32[i52 + (i10 << 2) >> 2] = i8;
    i22 = i51 + (i10 << 3) | 0;
    i23 = HEAP32[i22 + 4 >> 2] | 0;
    i26 = i43;
    HEAP32[i26 >> 2] = HEAP32[i22 >> 2];
    HEAP32[i26 + 4 >> 2] = i23;
    i26 = 52;
    break;
   }
   if (!i27) {
    i1 = 0;
    break L1;
   }
   _pop_arg(i43, i8, i50);
  } while (0);
  if ((i26 | 0) == 52 ? (i26 = 0, !i27) : 0) {
   i12 = i24;
   i3 = i14;
   continue;
  }
  i10 = HEAP8[i3 >> 0] | 0;
  i10 = (i9 | 0) != 0 & (i10 & 15 | 0) == 3 ? i10 & -33 : i10;
  i5 = i13 & -65537;
  i23 = (i13 & 8192 | 0) == 0 ? i13 : i5;
  L75 : do switch (i10 | 0) {
  case 110:
   switch (i9 | 0) {
   case 0:
    {
     HEAP32[HEAP32[i43 >> 2] >> 2] = i1;
     i12 = i24;
     i3 = i14;
     continue L1;
    }
   case 1:
    {
     HEAP32[HEAP32[i43 >> 2] >> 2] = i1;
     i12 = i24;
     i3 = i14;
     continue L1;
    }
   case 2:
    {
     i12 = HEAP32[i43 >> 2] | 0;
     HEAP32[i12 >> 2] = i1;
     HEAP32[i12 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
     i12 = i24;
     i3 = i14;
     continue L1;
    }
   case 3:
    {
     HEAP16[HEAP32[i43 >> 2] >> 1] = i1;
     i12 = i24;
     i3 = i14;
     continue L1;
    }
   case 4:
    {
     HEAP8[HEAP32[i43 >> 2] >> 0] = i1;
     i12 = i24;
     i3 = i14;
     continue L1;
    }
   case 6:
    {
     HEAP32[HEAP32[i43 >> 2] >> 2] = i1;
     i12 = i24;
     i3 = i14;
     continue L1;
    }
   case 7:
    {
     i12 = HEAP32[i43 >> 2] | 0;
     HEAP32[i12 >> 2] = i1;
     HEAP32[i12 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
     i12 = i24;
     i3 = i14;
     continue L1;
    }
   default:
    {
     i12 = i24;
     i3 = i14;
     continue L1;
    }
   }
  case 112:
   {
    i9 = i23 | 8;
    i7 = i7 >>> 0 > 8 ? i7 : 8;
    i10 = 120;
    i26 = 64;
    break;
   }
  case 88:
  case 120:
   {
    i9 = i23;
    i26 = 64;
    break;
   }
  case 111:
   {
    i5 = i43;
    i4 = HEAP32[i5 >> 2] | 0;
    i5 = HEAP32[i5 + 4 >> 2] | 0;
    if ((i4 | 0) == 0 & (i5 | 0) == 0) i3 = i28; else {
     i3 = i28;
     do {
      i3 = i3 + -1 | 0;
      HEAP8[i3 >> 0] = i4 & 7 | 48;
      i4 = _bitshift64Lshr(i4 | 0, i5 | 0, 3) | 0;
      i5 = tempRet0;
     } while (!((i4 | 0) == 0 & (i5 | 0) == 0));
    }
    if (!(i23 & 8)) {
     i4 = i23;
     i9 = 0;
     i8 = 43476;
     i26 = 77;
    } else {
     i9 = i35 - i3 + 1 | 0;
     i4 = i23;
     i7 = (i7 | 0) < (i9 | 0) ? i9 : i7;
     i9 = 0;
     i8 = 43476;
     i26 = 77;
    }
    break;
   }
  case 105:
  case 100:
   {
    i4 = i43;
    i3 = HEAP32[i4 >> 2] | 0;
    i4 = HEAP32[i4 + 4 >> 2] | 0;
    if ((i4 | 0) < 0) {
     i3 = _i64Subtract(0, 0, i3 | 0, i4 | 0) | 0;
     i4 = tempRet0;
     i5 = i43;
     HEAP32[i5 >> 2] = i3;
     HEAP32[i5 + 4 >> 2] = i4;
     i5 = 1;
     i8 = 43476;
     i26 = 76;
     break L75;
    }
    if (!(i23 & 2048)) {
     i8 = i23 & 1;
     i5 = i8;
     i8 = (i8 | 0) == 0 ? 43476 : 43478;
     i26 = 76;
    } else {
     i5 = 1;
     i8 = 43477;
     i26 = 76;
    }
    break;
   }
  case 117:
   {
    i4 = i43;
    i3 = HEAP32[i4 >> 2] | 0;
    i4 = HEAP32[i4 + 4 >> 2] | 0;
    i5 = 0;
    i8 = 43476;
    i26 = 76;
    break;
   }
  case 99:
   {
    HEAP8[i36 >> 0] = HEAP32[i43 >> 2];
    i12 = i36;
    i4 = 1;
    i9 = 0;
    i10 = 43476;
    i3 = i28;
    break;
   }
  case 109:
   {
    i3 = ___errno_location() | 0;
    i3 = _strerror(HEAP32[i3 >> 2] | 0) | 0;
    i26 = 82;
    break;
   }
  case 115:
   {
    i3 = HEAP32[i43 >> 2] | 0;
    i3 = (i3 | 0) != 0 ? i3 : 43486;
    i26 = 82;
    break;
   }
  case 67:
   {
    HEAP32[i48 >> 2] = HEAP32[i43 >> 2];
    HEAP32[i37 >> 2] = 0;
    HEAP32[i43 >> 2] = i48;
    i7 = -1;
    i26 = 86;
    break;
   }
  case 83:
   {
    if (!i7) {
     _pad(i49, 32, i25, 0, i23);
     i3 = 0;
     i26 = 98;
    } else i26 = 86;
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    d6 = +HEAPF64[i43 >> 3];
    HEAP32[i46 >> 2] = 0;
    HEAPF64[tempDoublePtr >> 3] = d6;
    if ((HEAP32[tempDoublePtr + 4 >> 2] | 0) >= 0) if (!(i23 & 2048)) {
     i22 = i23 & 1;
     i21 = i22;
     i22 = (i22 | 0) == 0 ? 43494 : 43499;
    } else {
     i21 = 1;
     i22 = 43496;
    } else {
     d6 = -d6;
     i21 = 1;
     i22 = 43493;
    }
    HEAPF64[tempDoublePtr >> 3] = d6;
    i20 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    do if (i20 >>> 0 < 2146435072 | (i20 | 0) == 2146435072 & 0 < 0) {
     d11 = +_frexpl(d6, i46) * 2.0;
     i4 = d11 != 0.0;
     if (i4) HEAP32[i46 >> 2] = (HEAP32[i46 >> 2] | 0) + -1;
     i18 = i10 | 32;
     if ((i18 | 0) == 97) {
      i12 = i10 & 32;
      i14 = (i12 | 0) == 0 ? i22 : i22 + 9 | 0;
      i13 = i21 | 2;
      i3 = 12 - i7 | 0;
      do if (!(i7 >>> 0 > 11 | (i3 | 0) == 0)) {
       d6 = 8.0;
       do {
        i3 = i3 + -1 | 0;
        d6 = d6 * 16.0;
       } while ((i3 | 0) != 0);
       if ((HEAP8[i14 >> 0] | 0) == 45) {
        d6 = -(d6 + (-d11 - d6));
        break;
       } else {
        d6 = d11 + d6 - d6;
        break;
       }
      } else d6 = d11; while (0);
      i4 = HEAP32[i46 >> 2] | 0;
      i3 = (i4 | 0) < 0 ? 0 - i4 | 0 : i4;
      i3 = _fmt_u(i3, ((i3 | 0) < 0) << 31 >> 31, i38) | 0;
      if ((i3 | 0) == (i38 | 0)) {
       HEAP8[i39 >> 0] = 48;
       i3 = i39;
      }
      HEAP8[i3 + -1 >> 0] = (i4 >> 31 & 2) + 43;
      i9 = i3 + -2 | 0;
      HEAP8[i9 >> 0] = i10 + 15;
      i8 = (i7 | 0) < 1;
      i5 = (i23 & 8 | 0) == 0;
      i4 = i45;
      while (1) {
       i22 = ~~d6;
       i3 = i4 + 1 | 0;
       HEAP8[i4 >> 0] = HEAPU8[43460 + i22 >> 0] | i12;
       d6 = (d6 - +(i22 | 0)) * 16.0;
       do if ((i3 - i40 | 0) == 1) {
        if (i5 & (i8 & d6 == 0.0)) break;
        HEAP8[i3 >> 0] = 46;
        i3 = i4 + 2 | 0;
       } while (0);
       if (!(d6 != 0.0)) break; else i4 = i3;
      }
      i7 = (i7 | 0) != 0 & (i29 + i3 | 0) < (i7 | 0) ? i30 + i7 - i9 | 0 : i42 - i9 + i3 | 0;
      i5 = i7 + i13 | 0;
      _pad(i49, 32, i25, i5, i23);
      if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i14, i13, i49) | 0;
      _pad(i49, 48, i25, i5, i23 ^ 65536);
      i3 = i3 - i40 | 0;
      if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i45, i3, i49) | 0;
      i4 = i41 - i9 | 0;
      _pad(i49, 48, i7 - (i3 + i4) | 0, 0, 0);
      if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i9, i4, i49) | 0;
      _pad(i49, 32, i25, i5, i23 ^ 8192);
      i3 = (i5 | 0) < (i25 | 0) ? i25 : i5;
      break;
     }
     i3 = (i7 | 0) < 0 ? 6 : i7;
     if (i4) {
      i4 = (HEAP32[i46 >> 2] | 0) + -28 | 0;
      HEAP32[i46 >> 2] = i4;
      d6 = d11 * 268435456.0;
     } else {
      d6 = d11;
      i4 = HEAP32[i46 >> 2] | 0;
     }
     i20 = (i4 | 0) < 0 ? i44 : i31;
     i19 = i20;
     i4 = i20;
     do {
      i17 = ~~d6 >>> 0;
      HEAP32[i4 >> 2] = i17;
      i4 = i4 + 4 | 0;
      d6 = (d6 - +(i17 >>> 0)) * 1.0e9;
     } while (d6 != 0.0);
     i5 = i4;
     i4 = HEAP32[i46 >> 2] | 0;
     if ((i4 | 0) > 0) {
      i8 = i20;
      while (1) {
       i9 = (i4 | 0) > 29 ? 29 : i4;
       i7 = i5 + -4 | 0;
       do if (i7 >>> 0 < i8 >>> 0) i7 = i8; else {
        i4 = 0;
        do {
         i17 = _bitshift64Shl(HEAP32[i7 >> 2] | 0, 0, i9 | 0) | 0;
         i17 = _i64Add(i17 | 0, tempRet0 | 0, i4 | 0, 0) | 0;
         i4 = tempRet0;
         i16 = ___uremdi3(i17 | 0, i4 | 0, 1e9, 0) | 0;
         HEAP32[i7 >> 2] = i16;
         i4 = ___udivdi3(i17 | 0, i4 | 0, 1e9, 0) | 0;
         i7 = i7 + -4 | 0;
        } while (i7 >>> 0 >= i8 >>> 0);
        if (!i4) {
         i7 = i8;
         break;
        }
        i7 = i8 + -4 | 0;
        HEAP32[i7 >> 2] = i4;
       } while (0);
       while (1) {
        if (i5 >>> 0 <= i7 >>> 0) break;
        i4 = i5 + -4 | 0;
        if (!(HEAP32[i4 >> 2] | 0)) i5 = i4; else break;
       }
       i4 = (HEAP32[i46 >> 2] | 0) - i9 | 0;
       HEAP32[i46 >> 2] = i4;
       if ((i4 | 0) > 0) i8 = i7; else break;
      }
     } else i7 = i20;
     if ((i4 | 0) < 0) {
      i14 = ((i3 + 25 | 0) / 9 | 0) + 1 | 0;
      i15 = (i18 | 0) == 102;
      i12 = i7;
      while (1) {
       i13 = 0 - i4 | 0;
       i13 = (i13 | 0) > 9 ? 9 : i13;
       do if (i12 >>> 0 < i5 >>> 0) {
        i4 = (1 << i13) + -1 | 0;
        i8 = 1e9 >>> i13;
        i7 = 0;
        i9 = i12;
        do {
         i17 = HEAP32[i9 >> 2] | 0;
         HEAP32[i9 >> 2] = (i17 >>> i13) + i7;
         i7 = Math_imul(i17 & i4, i8) | 0;
         i9 = i9 + 4 | 0;
        } while (i9 >>> 0 < i5 >>> 0);
        i4 = (HEAP32[i12 >> 2] | 0) == 0 ? i12 + 4 | 0 : i12;
        if (!i7) {
         i7 = i4;
         break;
        }
        HEAP32[i5 >> 2] = i7;
        i7 = i4;
        i5 = i5 + 4 | 0;
       } else i7 = (HEAP32[i12 >> 2] | 0) == 0 ? i12 + 4 | 0 : i12; while (0);
       i4 = i15 ? i20 : i7;
       i5 = (i5 - i4 >> 2 | 0) > (i14 | 0) ? i4 + (i14 << 2) | 0 : i5;
       i4 = (HEAP32[i46 >> 2] | 0) + i13 | 0;
       HEAP32[i46 >> 2] = i4;
       if ((i4 | 0) >= 0) {
        i12 = i7;
        break;
       } else i12 = i7;
      }
     } else i12 = i7;
     do if (i12 >>> 0 < i5 >>> 0) {
      i4 = (i19 - i12 >> 2) * 9 | 0;
      i8 = HEAP32[i12 >> 2] | 0;
      if (i8 >>> 0 < 10) break; else i7 = 10;
      do {
       i7 = i7 * 10 | 0;
       i4 = i4 + 1 | 0;
      } while (i8 >>> 0 >= i7 >>> 0);
     } else i4 = 0; while (0);
     i16 = (i18 | 0) == 103;
     i17 = (i3 | 0) != 0;
     i7 = i3 - ((i18 | 0) != 102 ? i4 : 0) + ((i17 & i16) << 31 >> 31) | 0;
     if ((i7 | 0) < (((i5 - i19 >> 2) * 9 | 0) + -9 | 0)) {
      i9 = i7 + 9216 | 0;
      i15 = (i9 | 0) / 9 | 0;
      i7 = i20 + (i15 + -1023 << 2) | 0;
      i9 = ((i9 | 0) % 9 | 0) + 1 | 0;
      if ((i9 | 0) < 9) {
       i8 = 10;
       do {
        i8 = i8 * 10 | 0;
        i9 = i9 + 1 | 0;
       } while ((i9 | 0) != 9);
      } else i8 = 10;
      i13 = HEAP32[i7 >> 2] | 0;
      i14 = (i13 >>> 0) % (i8 >>> 0) | 0;
      if ((i14 | 0) == 0 ? (i20 + (i15 + -1022 << 2) | 0) == (i5 | 0) : 0) i8 = i12; else i26 = 163;
      do if ((i26 | 0) == 163) {
       i26 = 0;
       d11 = (((i13 >>> 0) / (i8 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
       i9 = (i8 | 0) / 2 | 0;
       do if (i14 >>> 0 < i9 >>> 0) d6 = .5; else {
        if ((i14 | 0) == (i9 | 0) ? (i20 + (i15 + -1022 << 2) | 0) == (i5 | 0) : 0) {
         d6 = 1.0;
         break;
        }
        d6 = 1.5;
       } while (0);
       do if (i21) {
        if ((HEAP8[i22 >> 0] | 0) != 45) break;
        d11 = -d11;
        d6 = -d6;
       } while (0);
       i9 = i13 - i14 | 0;
       HEAP32[i7 >> 2] = i9;
       if (!(d11 + d6 != d11)) {
        i8 = i12;
        break;
       }
       i18 = i9 + i8 | 0;
       HEAP32[i7 >> 2] = i18;
       if (i18 >>> 0 > 999999999) {
        i4 = i12;
        while (1) {
         i8 = i7 + -4 | 0;
         HEAP32[i7 >> 2] = 0;
         if (i8 >>> 0 < i4 >>> 0) {
          i4 = i4 + -4 | 0;
          HEAP32[i4 >> 2] = 0;
         }
         i18 = (HEAP32[i8 >> 2] | 0) + 1 | 0;
         HEAP32[i8 >> 2] = i18;
         if (i18 >>> 0 > 999999999) i7 = i8; else {
          i12 = i4;
          i7 = i8;
          break;
         }
        }
       }
       i4 = (i19 - i12 >> 2) * 9 | 0;
       i9 = HEAP32[i12 >> 2] | 0;
       if (i9 >>> 0 < 10) {
        i8 = i12;
        break;
       } else i8 = 10;
       do {
        i8 = i8 * 10 | 0;
        i4 = i4 + 1 | 0;
       } while (i9 >>> 0 >= i8 >>> 0);
       i8 = i12;
      } while (0);
      i18 = i7 + 4 | 0;
      i12 = i8;
      i5 = i5 >>> 0 > i18 >>> 0 ? i18 : i5;
     }
     i14 = 0 - i4 | 0;
     while (1) {
      if (i5 >>> 0 <= i12 >>> 0) {
       i15 = 0;
       i18 = i5;
       break;
      }
      i7 = i5 + -4 | 0;
      if (!(HEAP32[i7 >> 2] | 0)) i5 = i7; else {
       i15 = 1;
       i18 = i5;
       break;
      }
     }
     do if (i16) {
      i3 = (i17 & 1 ^ 1) + i3 | 0;
      if ((i3 | 0) > (i4 | 0) & (i4 | 0) > -5) {
       i10 = i10 + -1 | 0;
       i3 = i3 + -1 - i4 | 0;
      } else {
       i10 = i10 + -2 | 0;
       i3 = i3 + -1 | 0;
      }
      i5 = i23 & 8;
      if (i5) break;
      do if (i15) {
       i5 = HEAP32[i18 + -4 >> 2] | 0;
       if (!i5) {
        i7 = 9;
        break;
       }
       if (!((i5 >>> 0) % 10 | 0)) {
        i8 = 10;
        i7 = 0;
       } else {
        i7 = 0;
        break;
       }
       do {
        i8 = i8 * 10 | 0;
        i7 = i7 + 1 | 0;
       } while (((i5 >>> 0) % (i8 >>> 0) | 0 | 0) == 0);
      } else i7 = 9; while (0);
      i5 = ((i18 - i19 >> 2) * 9 | 0) + -9 | 0;
      if ((i10 | 32 | 0) == 102) {
       i5 = i5 - i7 | 0;
       i5 = (i5 | 0) < 0 ? 0 : i5;
       i3 = (i3 | 0) < (i5 | 0) ? i3 : i5;
       i5 = 0;
       break;
      } else {
       i5 = i5 + i4 - i7 | 0;
       i5 = (i5 | 0) < 0 ? 0 : i5;
       i3 = (i3 | 0) < (i5 | 0) ? i3 : i5;
       i5 = 0;
       break;
      }
     } else i5 = i23 & 8; while (0);
     i13 = i3 | i5;
     i8 = (i13 | 0) != 0 & 1;
     i9 = (i10 | 32 | 0) == 102;
     if (i9) {
      i4 = (i4 | 0) > 0 ? i4 : 0;
      i10 = 0;
     } else {
      i7 = (i4 | 0) < 0 ? i14 : i4;
      i7 = _fmt_u(i7, ((i7 | 0) < 0) << 31 >> 31, i38) | 0;
      if ((i41 - i7 | 0) < 2) do {
       i7 = i7 + -1 | 0;
       HEAP8[i7 >> 0] = 48;
      } while ((i41 - i7 | 0) < 2);
      HEAP8[i7 + -1 >> 0] = (i4 >> 31 & 2) + 43;
      i19 = i7 + -2 | 0;
      HEAP8[i19 >> 0] = i10;
      i4 = i41 - i19 | 0;
      i10 = i19;
     }
     i14 = i21 + 1 + i3 + i8 + i4 | 0;
     _pad(i49, 32, i25, i14, i23);
     if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i22, i21, i49) | 0;
     _pad(i49, 48, i25, i14, i23 ^ 65536);
     do if (i9) {
      i7 = i12 >>> 0 > i20 >>> 0 ? i20 : i12;
      i4 = i7;
      do {
       i5 = _fmt_u(HEAP32[i4 >> 2] | 0, 0, i32) | 0;
       do if ((i4 | 0) == (i7 | 0)) {
        if ((i5 | 0) != (i32 | 0)) break;
        HEAP8[i34 >> 0] = 48;
        i5 = i34;
       } else {
        if (i5 >>> 0 <= i45 >>> 0) break;
        do {
         i5 = i5 + -1 | 0;
         HEAP8[i5 >> 0] = 48;
        } while (i5 >>> 0 > i45 >>> 0);
       } while (0);
       if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i5, i33 - i5 | 0, i49) | 0;
       i4 = i4 + 4 | 0;
      } while (i4 >>> 0 <= i20 >>> 0);
      do if (i13) {
       if (HEAP32[i49 >> 2] & 32) break;
       ___fwritex(43528, 1, i49) | 0;
      } while (0);
      if ((i3 | 0) > 0 & i4 >>> 0 < i18 >>> 0) {
       i5 = i4;
       while (1) {
        i4 = _fmt_u(HEAP32[i5 >> 2] | 0, 0, i32) | 0;
        if (i4 >>> 0 > i45 >>> 0) do {
         i4 = i4 + -1 | 0;
         HEAP8[i4 >> 0] = 48;
        } while (i4 >>> 0 > i45 >>> 0);
        if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i4, (i3 | 0) > 9 ? 9 : i3, i49) | 0;
        i5 = i5 + 4 | 0;
        i4 = i3 + -9 | 0;
        if (!((i3 | 0) > 9 & i5 >>> 0 < i18 >>> 0)) {
         i3 = i4;
         break;
        } else i3 = i4;
       }
      }
      _pad(i49, 48, i3 + 9 | 0, 9, 0);
     } else {
      i9 = i15 ? i18 : i12 + 4 | 0;
      if ((i3 | 0) > -1) {
       i8 = (i5 | 0) == 0;
       i7 = i12;
       do {
        i4 = _fmt_u(HEAP32[i7 >> 2] | 0, 0, i32) | 0;
        if ((i4 | 0) == (i32 | 0)) {
         HEAP8[i34 >> 0] = 48;
         i4 = i34;
        }
        do if ((i7 | 0) == (i12 | 0)) {
         i5 = i4 + 1 | 0;
         if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i4, 1, i49) | 0;
         if (i8 & (i3 | 0) < 1) {
          i4 = i5;
          break;
         }
         if (HEAP32[i49 >> 2] & 32) {
          i4 = i5;
          break;
         }
         ___fwritex(43528, 1, i49) | 0;
         i4 = i5;
        } else {
         if (i4 >>> 0 <= i45 >>> 0) break;
         do {
          i4 = i4 + -1 | 0;
          HEAP8[i4 >> 0] = 48;
         } while (i4 >>> 0 > i45 >>> 0);
        } while (0);
        i5 = i33 - i4 | 0;
        if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i4, (i3 | 0) > (i5 | 0) ? i5 : i3, i49) | 0;
        i3 = i3 - i5 | 0;
        i7 = i7 + 4 | 0;
       } while (i7 >>> 0 < i9 >>> 0 & (i3 | 0) > -1);
      }
      _pad(i49, 48, i3 + 18 | 0, 18, 0);
      if (HEAP32[i49 >> 2] & 32) break;
      ___fwritex(i10, i41 - i10 | 0, i49) | 0;
     } while (0);
     _pad(i49, 32, i25, i14, i23 ^ 8192);
     i3 = (i14 | 0) < (i25 | 0) ? i25 : i14;
    } else {
     i9 = (i10 & 32 | 0) != 0;
     i8 = d6 != d6 | 0.0 != 0.0;
     i4 = i8 ? 0 : i21;
     i7 = i4 + 3 | 0;
     _pad(i49, 32, i25, i7, i5);
     i3 = HEAP32[i49 >> 2] | 0;
     if (!(i3 & 32)) {
      ___fwritex(i22, i4, i49) | 0;
      i3 = HEAP32[i49 >> 2] | 0;
     }
     if (!(i3 & 32)) ___fwritex(i8 ? (i9 ? 43520 : 43524) : i9 ? 43512 : 43516, 3, i49) | 0;
     _pad(i49, 32, i25, i7, i23 ^ 8192);
     i3 = (i7 | 0) < (i25 | 0) ? i25 : i7;
    } while (0);
    i12 = i24;
    continue L1;
   }
  default:
   {
    i5 = i23;
    i4 = i7;
    i9 = 0;
    i10 = 43476;
    i3 = i28;
   }
  } while (0);
  L313 : do if ((i26 | 0) == 64) {
   i5 = i43;
   i4 = HEAP32[i5 >> 2] | 0;
   i5 = HEAP32[i5 + 4 >> 2] | 0;
   i8 = i10 & 32;
   if (!((i4 | 0) == 0 & (i5 | 0) == 0)) {
    i3 = i28;
    do {
     i3 = i3 + -1 | 0;
     HEAP8[i3 >> 0] = HEAPU8[43460 + (i4 & 15) >> 0] | i8;
     i4 = _bitshift64Lshr(i4 | 0, i5 | 0, 4) | 0;
     i5 = tempRet0;
    } while (!((i4 | 0) == 0 & (i5 | 0) == 0));
    i26 = i43;
    if ((i9 & 8 | 0) == 0 | (HEAP32[i26 >> 2] | 0) == 0 & (HEAP32[i26 + 4 >> 2] | 0) == 0) {
     i4 = i9;
     i9 = 0;
     i8 = 43476;
     i26 = 77;
    } else {
     i4 = i9;
     i9 = 2;
     i8 = 43476 + (i10 >> 4) | 0;
     i26 = 77;
    }
   } else {
    i3 = i28;
    i4 = i9;
    i9 = 0;
    i8 = 43476;
    i26 = 77;
   }
  } else if ((i26 | 0) == 76) {
   i3 = _fmt_u(i3, i4, i28) | 0;
   i4 = i23;
   i9 = i5;
   i26 = 77;
  } else if ((i26 | 0) == 82) {
   i26 = 0;
   i23 = _memchr(i3, 0, i7) | 0;
   i22 = (i23 | 0) == 0;
   i12 = i3;
   i4 = i22 ? i7 : i23 - i3 | 0;
   i9 = 0;
   i10 = 43476;
   i3 = i22 ? i3 + i7 | 0 : i23;
  } else if ((i26 | 0) == 86) {
   i26 = 0;
   i4 = 0;
   i3 = 0;
   i8 = HEAP32[i43 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i8 >> 2] | 0;
    if (!i5) break;
    i3 = _wctomb(i47, i5) | 0;
    if ((i3 | 0) < 0 | i3 >>> 0 > (i7 - i4 | 0) >>> 0) break;
    i4 = i3 + i4 | 0;
    if (i7 >>> 0 > i4 >>> 0) i8 = i8 + 4 | 0; else break;
   }
   if ((i3 | 0) < 0) {
    i1 = -1;
    break L1;
   }
   _pad(i49, 32, i25, i4, i23);
   if (!i4) {
    i3 = 0;
    i26 = 98;
   } else {
    i5 = 0;
    i7 = HEAP32[i43 >> 2] | 0;
    while (1) {
     i3 = HEAP32[i7 >> 2] | 0;
     if (!i3) {
      i3 = i4;
      i26 = 98;
      break L313;
     }
     i3 = _wctomb(i47, i3) | 0;
     i5 = i3 + i5 | 0;
     if ((i5 | 0) > (i4 | 0)) {
      i3 = i4;
      i26 = 98;
      break L313;
     }
     if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i47, i3, i49) | 0;
     if (i5 >>> 0 >= i4 >>> 0) {
      i3 = i4;
      i26 = 98;
      break;
     } else i7 = i7 + 4 | 0;
    }
   }
  } while (0);
  if ((i26 | 0) == 98) {
   i26 = 0;
   _pad(i49, 32, i25, i3, i23 ^ 8192);
   i12 = i24;
   i3 = (i25 | 0) > (i3 | 0) ? i25 : i3;
   continue;
  }
  if ((i26 | 0) == 77) {
   i26 = 0;
   i5 = (i7 | 0) > -1 ? i4 & -65537 : i4;
   i4 = i43;
   i4 = (HEAP32[i4 >> 2] | 0) != 0 | (HEAP32[i4 + 4 >> 2] | 0) != 0;
   if ((i7 | 0) != 0 | i4) {
    i4 = (i4 & 1 ^ 1) + (i35 - i3) | 0;
    i12 = i3;
    i4 = (i7 | 0) > (i4 | 0) ? i7 : i4;
    i10 = i8;
    i3 = i28;
   } else {
    i12 = i28;
    i4 = 0;
    i10 = i8;
    i3 = i28;
   }
  }
  i8 = i3 - i12 | 0;
  i4 = (i4 | 0) < (i8 | 0) ? i8 : i4;
  i7 = i9 + i4 | 0;
  i3 = (i25 | 0) < (i7 | 0) ? i7 : i25;
  _pad(i49, 32, i3, i7, i5);
  if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i10, i9, i49) | 0;
  _pad(i49, 48, i3, i7, i5 ^ 65536);
  _pad(i49, 48, i4, i8, 0);
  if (!(HEAP32[i49 >> 2] & 32)) ___fwritex(i12, i8, i49) | 0;
  _pad(i49, 32, i3, i7, i5 ^ 8192);
  i12 = i24;
 }
 L348 : do if ((i26 | 0) == 245) if (!i49) if (i2) {
  i1 = 1;
  while (1) {
   i2 = HEAP32[i52 + (i1 << 2) >> 2] | 0;
   if (!i2) break;
   _pop_arg(i51 + (i1 << 3) | 0, i2, i50);
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 10) {
    i1 = 1;
    break L348;
   }
  }
  if ((i1 | 0) < 10) while (1) {
   if (HEAP32[i52 + (i1 << 2) >> 2] | 0) {
    i1 = -1;
    break L348;
   }
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 10) {
    i1 = 1;
    break;
   }
  } else i1 = 1;
 } else i1 = 0; while (0);
 STACKTOP = i53;
 return i1 | 0;
}

function __ZN38EmscriptenBindingInitializer_my_moduleC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 __ZN10emscripten15register_vectorIiEENS_6class_INSt3__16vectorIT_NS2_9allocatorIS4_EEEENS_8internal11NoBaseClassEEEPKc(i1 + 3 | 0, 24520);
 __ZN10emscripten15register_vectorIdEENS_6class_INSt3__16vectorIT_NS2_9allocatorIS4_EEEENS_8internal11NoBaseClassEEEPKc(i1 + 2 | 0, 24530);
 __ZN10emscripten15register_vectorIcEENS_6class_INSt3__16vectorIT_NS2_9allocatorIS4_EEEENS_8internal11NoBaseClassEEEPKc(i1 + 1 | 0, 24543);
 __ZN10emscripten15register_vectorIfEENS_6class_INSt3__16vectorIT_NS2_9allocatorIS4_EEEENS_8internal11NoBaseClassEEEPKc(i1, 24554);
 __embind_register_class(13496, 13504, 13520, 0, 26129, 3, 26132, 0, 26132, 0, 24566, 26134, 210);
 __embind_register_class_constructor(13496, 1, 20616, 26129, 4, 1);
 __embind_register_class_class_function(13496, 24578, 2, 20620, 26726, 1, 211);
 __embind_register_class_class_function(13496, 24593, 2, 20628, 26726, 2, 212);
 __embind_register_class(13536, 13544, 13560, 0, 26129, 5, 26132, 0, 26132, 0, 24610, 26134, 213);
 __embind_register_class_constructor(13536, 1, 20636, 26129, 6, 2);
 __embind_register_class_class_function(13536, 35516, 4, 20640, 26142, 4, 1);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 7;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 3;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(13536, 24623, 16112, 26148, 29, i2 | 0, 16112, 26137, 2, i3 | 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 8;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 4;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(13536, 24634, 16112, 26148, 29, i3 | 0, 16112, 26137, 2, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 9;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 5;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(13536, 24643, 16112, 26148, 29, i2 | 0, 16112, 26137, 2, i3 | 0);
 __embind_register_class(13576, 13584, 13600, 0, 26129, 10, 26132, 0, 26132, 0, 24654, 26134, 214);
 __embind_register_smart_ptr(13632, 13576, 24662, 2, 26129, 11, 27044, 3, 26148, 30, 26134, 215);
 __embind_register_class_constructor(13576, 1, 20684, 26129, 12, 216);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24682, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 2;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24691, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 3;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24699, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24699, 5, 20728, 27111, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 4;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24706, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 5;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24710, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 6;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24719, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24726, 4, 20748, 27118, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 2;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24732, 2, 20764, 27124, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 7;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24738, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 8;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24746, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 9;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24755, 3, 20716, 27106, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 2;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24760, 4, 20748, 27118, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13576, 24765, 3, 20772, 26337, 1, i3 | 0, 0);
 __embind_register_class(13656, 13664, 13680, 0, 26129, 13, 26132, 0, 26132, 0, 24776, 26134, 217);
 __embind_register_smart_ptr(13712, 13656, 24789, 2, 26129, 14, 27044, 4, 26148, 31, 26134, 218);
 __embind_register_class_constructor(13656, 1, 20812, 26129, 15, 219);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13656, 24814, 4, 20844, 27496, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 2;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13656, 24819, 4, 20860, 26342, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 3;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 2;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(13656, 24827, 16152, 27124, 2, i3 | 0, 16152, 26337, 3, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 16;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 6;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(13656, 24837, 16112, 26148, 32, i2 | 0, 16112, 26137, 3, i3 | 0);
 __embind_register_class(13736, 13744, 13760, 0, 26129, 17, 26132, 0, 26132, 0, 24846, 26134, 220);
 __embind_register_smart_ptr(13792, 13736, 24860, 2, 26129, 18, 27044, 5, 26148, 33, 26134, 221);
 __embind_register_class_constructor(13736, 1, 20904, 26129, 19, 222);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13736, 24886, 5, 20936, 27877, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13736, 24886, 6, 20956, 27884, 1, i3 | 0, 0);
 __embind_register_class(13816, 13824, 13840, 0, 26129, 20, 26132, 0, 26132, 0, 24889, 26134, 223);
 __embind_register_smart_ptr(13872, 13816, 24900, 2, 26129, 21, 27044, 6, 26148, 34, 26134, 224);
 __embind_register_class_constructor(13816, 1, 21008, 26129, 22, 225);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 2;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13816, 24923, 5, 21040, 27111, 2, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 3;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13816, 24929, 5, 21040, 27111, 2, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 4;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13816, 24935, 5, 21040, 27111, 2, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 3;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13816, 24944, 4, 21060, 27118, 2, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 4;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13816, 24951, 4, 21060, 27118, 2, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 4;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 3;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(13816, 24958, 16152, 27124, 3, i3 | 0, 16152, 26337, 4, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 5;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 4;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(13816, 24965, 16152, 27124, 3, i2 | 0, 16152, 26337, 4, i3 | 0);
 __embind_register_class(13896, 13904, 13920, 0, 26129, 23, 26132, 0, 26132, 0, 24975, 26134, 226);
 __embind_register_smart_ptr(13952, 13896, 24983, 2, 26129, 24, 27044, 7, 26148, 35, 26134, 227);
 __embind_register_class_constructor(13896, 1, 21104, 26129, 25, 228);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13896, 25003, 5, 21136, 28572, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13896, 25010, 6, 21156, 28579, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13896, 25015, 7, 21180, 28587, 1, i3 | 0, 0);
 __embind_register_class(13976, 13984, 14e3, 0, 26129, 26, 26132, 0, 26132, 0, 25025, 26134, 229);
 __embind_register_smart_ptr(14032, 13976, 25036, 2, 26129, 27, 27044, 8, 26148, 36, 26134, 230);
 __embind_register_class_constructor(13976, 1, 21236, 26129, 28, 231);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13976, 25067, 4, 21268, 28971, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 5;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13976, 25072, 3, 21284, 26337, 5, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 6;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(13976, 25082, 2, 21296, 27124, 4, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 7;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 6;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(13976, 25088, 16152, 27124, 5, i3 | 0, 16152, 26337, 6, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 8;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 7;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(13976, 25094, 16152, 27124, 5, i2 | 0, 16152, 26337, 6, i3 | 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 6;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 8;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(13976, 25110, 16152, 27124, 5, i3 | 0, 16152, 26337, 6, i2 | 0);
 __embind_register_class(14056, 14064, 14080, 0, 26129, 29, 26132, 0, 26132, 0, 25114, 26134, 232);
 __embind_register_smart_ptr(14112, 14056, 25125, 2, 26129, 30, 27044, 9, 26148, 37, 26134, 233);
 __embind_register_class_constructor(14056, 1, 21332, 26129, 31, 234);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 235;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 25148, 2, 21364, 26726, 7, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 8;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 36015, 3, 21372, 26137, 4, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 5;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 36015, 4, 21384, 26142, 5, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 32;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 25158, 2, 21400, 26148, 38, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 9;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 25166, 2, 21408, 27124, 6, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 10;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 25166, 3, 21416, 27106, 2, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 10;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 36071, 2, 21408, 27124, 6, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 11;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 36071, 3, 21416, 27106, 2, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 5;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 36071, 5, 21428, 27111, 3, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 6;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 25175, 5, 21428, 27111, 3, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 236;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 24819, 2, 21364, 26726, 7, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 237;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14056, 25181, 2, 21364, 26726, 7, i2 | 0, 0);
 __embind_register_class(14136, 14144, 14160, 0, 26129, 33, 26132, 0, 26132, 0, 25187, 26134, 238);
 __embind_register_smart_ptr(14192, 14136, 25195, 2, 26129, 34, 27044, 10, 26148, 39, 26134, 239);
 __embind_register_class_constructor(14136, 1, 21476, 26129, 35, 240);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 1;
 __embind_register_class_function(14136, 25215, 6, 21508, 29657, 1, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 2;
 __embind_register_class_function(14136, 25222, 6, 21508, 29657, 1, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 3;
 __embind_register_class_function(14136, 25229, 6, 21508, 29657, 1, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 1;
 __embind_register_class_function(14136, 25236, 4, 21532, 29665, 7, i2 | 0, 0);
 __embind_register_class(14216, 14224, 14240, 0, 26129, 36, 26132, 0, 26132, 0, 25242, 26134, 241);
 __embind_register_smart_ptr(14272, 14216, 25250, 2, 26129, 37, 27044, 11, 26148, 40, 26134, 242);
 __embind_register_class_constructor(14216, 1, 21576, 26129, 38, 243);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 1;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14216, 25270, 7, 21608, 29997, 1, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 2;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14216, 25275, 7, 21636, 30006, 1, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 12;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14216, 25286, 3, 21664, 27106, 3, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 9;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14216, 25295, 3, 21676, 26337, 7, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 10;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14216, 25305, 3, 21676, 26337, 7, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 11;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14216, 25316, 3, 21676, 26337, 7, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 12;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14216, 25329, 3, 21676, 26337, 7, i2 | 0, 0);
 __embind_register_class(14296, 14304, 14320, 0, 26129, 39, 26132, 0, 26132, 0, 25338, 26134, 244);
 __embind_register_smart_ptr(14352, 14296, 25346, 2, 26129, 40, 27044, 12, 26148, 41, 26134, 245);
 __embind_register_class_constructor(14296, 1, 21716, 26129, 41, 246);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 1;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14296, 25366, 7, 21748, 30341, 1, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 1;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14296, 25369, 9, 21776, 30350, 1, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 1;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14296, 25369, 4, 21812, 30361, 1, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 13;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14296, 25295, 3, 21828, 26337, 8, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 14;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14296, 25305, 3, 21828, 26337, 8, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 15;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14296, 25374, 3, 21828, 26337, 8, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 16;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(14296, 25383, 3, 21828, 26337, 8, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 42;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 9;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(14296, 24819, 16112, 26148, 42, i2 | 0, 16112, 26137, 6, i3 | 0);
 __embind_register_class(14376, 14384, 14400, 0, 26129, 43, 26132, 0, 26132, 0, 25394, 26134, 247);
 __embind_register_smart_ptr(14432, 14376, 25402, 2, 26129, 44, 27044, 13, 26148, 43, 26134, 248);
 __embind_register_class_constructor(14376, 1, 21868, 26129, 45, 249);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 7;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14376, 25422, 3, 21900, 30693, 2, i3 | 0, 0);
 __embind_register_class(14456, 14464, 14480, 0, 26129, 46, 26132, 0, 26132, 0, 25427, 26134, 250);
 __embind_register_smart_ptr(14512, 14456, 25442, 2, 26129, 47, 27044, 14, 26148, 44, 26134, 251);
 __embind_register_class_constructor(14456, 1, 21940, 26129, 48, 252);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 13;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14456, 25469, 3, 21972, 27106, 4, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 5;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14456, 25478, 4, 21984, 27118, 3, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 6;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14456, 25487, 4, 21984, 27118, 3, i3 | 0, 0);
 __embind_register_class(14536, 14544, 14560, 0, 26129, 49, 26132, 0, 26132, 0, 25500, 26134, 253);
 __embind_register_smart_ptr(14592, 14536, 25512, 2, 26129, 50, 27044, 15, 26148, 45, 26134, 254);
 __embind_register_class_constructor(14536, 1, 22028, 26129, 51, 255);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14536, 25536, 7, 22060, 31441, 1, i3 | 0, 0);
 __embind_register_class(14616, 14624, 14640, 0, 26129, 52, 26132, 0, 26132, 0, 25543, 26134, 256);
 __embind_register_smart_ptr(14672, 14616, 25554, 2, 26129, 53, 27044, 16, 26148, 46, 26134, 257);
 __embind_register_class_constructor(14616, 1, 22116, 26129, 54, 258);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 2;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14616, 25577, 7, 22148, 31441, 2, i3 | 0, 0);
 __embind_register_class(14696, 14704, 14720, 0, 26129, 55, 26132, 0, 26132, 0, 25584, 26134, 259);
 __embind_register_smart_ptr(14752, 14696, 25598, 2, 26129, 56, 27044, 17, 26148, 47, 26134, 260);
 __embind_register_class_constructor(14696, 1, 22204, 26129, 57, 261);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 7;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14696, 36071, 4, 22236, 27118, 4, i3 | 0, 0);
 __embind_register_class(14776, 14784, 14800, 0, 26129, 58, 26132, 0, 26132, 0, 25624, 26134, 262);
 __embind_register_smart_ptr(14832, 14776, 25632, 2, 26129, 59, 27044, 18, 26148, 48, 26134, 263);
 __embind_register_class_constructor(14776, 1, 22280, 26129, 60, 264);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 1;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14776, 25652, 3, 22312, 32505, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 2;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14776, 25662, 3, 22312, 32505, 1, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 3;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14776, 36071, 7, 22324, 30006, 2, i3 | 0, 0);
 __embind_register_class(14856, 14864, 14880, 0, 26129, 61, 26132, 0, 26132, 0, 25675, 26134, 265);
 __embind_register_smart_ptr(14912, 14856, 25684, 2, 26129, 62, 27044, 19, 26148, 49, 26134, 266);
 __embind_register_class_constructor(14856, 1, 22380, 26129, 63, 267);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 11;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14856, 36071, 2, 22412, 27124, 8, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 17;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14856, 25705, 3, 22420, 26337, 9, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 18;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14856, 25305, 3, 22420, 26337, 9, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 268;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14856, 24819, 2, 22432, 26726, 10, i3 | 0, 0);
 __embind_register_class(14936, 14944, 14960, 0, 26129, 64, 26132, 0, 26132, 0, 25714, 26134, 269);
 __embind_register_smart_ptr(14992, 14936, 25724, 2, 26129, 65, 27044, 20, 26148, 50, 26134, 270);
 __embind_register_class_constructor(14936, 1, 22468, 26129, 66, 271);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 12;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14936, 36071, 2, 22500, 27124, 9, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 19;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14936, 25705, 3, 22508, 26337, 10, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 20;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14936, 25305, 3, 22508, 26337, 10, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 272;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(14936, 24819, 2, 22520, 26726, 11, i3 | 0, 0);
 __embind_register_class(15016, 15024, 15040, 0, 26129, 67, 26132, 0, 26132, 0, 25746, 26134, 273);
 __embind_register_smart_ptr(15072, 15016, 25755, 2, 26129, 68, 27044, 21, 26148, 51, 26134, 274);
 __embind_register_class_constructor(15016, 1, 22556, 26129, 69, 275);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 13;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(15016, 36071, 2, 22588, 27124, 10, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 21;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(15016, 25705, 3, 22596, 26337, 11, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 22;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(15016, 25305, 3, 22596, 26337, 11, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 276;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(15016, 24819, 2, 22608, 26726, 12, i3 | 0, 0);
 __embind_register_class(15096, 15104, 15120, 0, 26129, 70, 26132, 0, 26132, 0, 25776, 26134, 277);
 __embind_register_smart_ptr(15152, 15096, 25786, 2, 26129, 71, 27044, 22, 26148, 52, 26134, 278);
 __embind_register_class_constructor(15096, 1, 22644, 26129, 72, 279);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 280;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(15096, 25808, 2, 22676, 26726, 13, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 23;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(15096, 25815, 3, 22684, 26337, 12, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 14;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(15096, 25824, 3, 22696, 26137, 7, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 73;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_function(15096, 25840, 2, 22708, 26148, 53, i3 | 0, 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 74;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 15;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15096, 25847, 16112, 26148, 54, i3 | 0, 16112, 26137, 8, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 75;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 16;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(15096, 25847, 16112, 26148, 54, i2 | 0, 16112, 26137, 8, i3 | 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 76;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 17;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15096, 25860, 16112, 26148, 54, i3 | 0, 16112, 26137, 8, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 14;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 18;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(15096, 25869, 16152, 27124, 11, i2 | 0, 16112, 26137, 8, i3 | 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 15;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 19;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15096, 25873, 16152, 27124, 11, i3 | 0, 16112, 26137, 8, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 77;
 HEAP32[i2 + 4 >> 2] = 0;
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 20;
 HEAP32[i3 + 4 >> 2] = 0;
 __embind_register_class_property(15096, 25877, 16064, 26148, 55, i2 | 0, 16112, 26137, 8, i3 | 0);
 i3 = __Znwj(8) | 0;
 HEAP32[i3 >> 2] = 78;
 HEAP32[i3 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 21;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15096, 25882, 16112, 26148, 54, i3 | 0, 16112, 26137, 8, i2 | 0);
 STACKTOP = i1;
 return;
}

function _free(i15) {
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 if (!i15) return;
 i1 = i15 + -8 | 0;
 i7 = HEAP32[6010] | 0;
 if (i1 >>> 0 < i7 >>> 0) _abort();
 i2 = HEAP32[i15 + -4 >> 2] | 0;
 i3 = i2 & 3;
 if ((i3 | 0) == 1) _abort();
 i13 = i2 & -8;
 i16 = i15 + (i13 + -8) | 0;
 do if (!(i2 & 1)) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i3) return;
  i8 = -8 - i1 | 0;
  i10 = i15 + i8 | 0;
  i11 = i1 + i13 | 0;
  if (i10 >>> 0 < i7 >>> 0) _abort();
  if ((i10 | 0) == (HEAP32[6011] | 0)) {
   i1 = i15 + (i13 + -4) | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 & 3 | 0) != 3) {
    i20 = i10;
    i5 = i11;
    break;
   }
   HEAP32[6008] = i11;
   HEAP32[i1 >> 2] = i2 & -2;
   HEAP32[i15 + (i8 + 4) >> 2] = i11 | 1;
   HEAP32[i16 >> 2] = i11;
   return;
  }
  i4 = i1 >>> 3;
  if (i1 >>> 0 < 256) {
   i3 = HEAP32[i15 + (i8 + 8) >> 2] | 0;
   i2 = HEAP32[i15 + (i8 + 12) >> 2] | 0;
   i1 = 24064 + (i4 << 1 << 2) | 0;
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i7 >>> 0) _abort();
    if ((HEAP32[i3 + 12 >> 2] | 0) != (i10 | 0)) _abort();
   }
   if ((i2 | 0) == (i3 | 0)) {
    HEAP32[6006] = HEAP32[6006] & ~(1 << i4);
    i20 = i10;
    i5 = i11;
    break;
   }
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i7 >>> 0) _abort();
    i1 = i2 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i10 | 0)) i6 = i1; else _abort();
   } else i6 = i2 + 8 | 0;
   HEAP32[i3 + 12 >> 2] = i2;
   HEAP32[i6 >> 2] = i3;
   i20 = i10;
   i5 = i11;
   break;
  }
  i6 = HEAP32[i15 + (i8 + 24) >> 2] | 0;
  i3 = HEAP32[i15 + (i8 + 12) >> 2] | 0;
  do if ((i3 | 0) == (i10 | 0)) {
   i2 = i15 + (i8 + 20) | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if (!i1) {
    i2 = i15 + (i8 + 16) | 0;
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i9 = 0;
     break;
    }
   }
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i7 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i9 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i15 + (i8 + 8) >> 2] | 0;
   if (i4 >>> 0 < i7 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i10 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i10 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i9 = i3;
    break;
   } else _abort();
  } while (0);
  if (i6) {
   i1 = HEAP32[i15 + (i8 + 28) >> 2] | 0;
   i2 = 24328 + (i1 << 2) | 0;
   if ((i10 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i9;
    if (!i9) {
     HEAP32[6007] = HEAP32[6007] & ~(1 << i1);
     i20 = i10;
     i5 = i11;
     break;
    }
   } else {
    if (i6 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
    i1 = i6 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i10 | 0)) HEAP32[i1 >> 2] = i9; else HEAP32[i6 + 20 >> 2] = i9;
    if (!i9) {
     i20 = i10;
     i5 = i11;
     break;
    }
   }
   i2 = HEAP32[6010] | 0;
   if (i9 >>> 0 < i2 >>> 0) _abort();
   HEAP32[i9 + 24 >> 2] = i6;
   i1 = HEAP32[i15 + (i8 + 16) >> 2] | 0;
   do if (i1) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
    HEAP32[i9 + 16 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i9;
    break;
   } while (0);
   i1 = HEAP32[i15 + (i8 + 20) >> 2] | 0;
   if (i1) if (i1 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
    HEAP32[i9 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i9;
    i20 = i10;
    i5 = i11;
    break;
   } else {
    i20 = i10;
    i5 = i11;
   }
  } else {
   i20 = i10;
   i5 = i11;
  }
 } else {
  i20 = i1;
  i5 = i13;
 } while (0);
 if (i20 >>> 0 >= i16 >>> 0) _abort();
 i1 = i15 + (i13 + -4) | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 1)) _abort();
 if (!(i2 & 2)) {
  if ((i16 | 0) == (HEAP32[6012] | 0)) {
   i19 = (HEAP32[6009] | 0) + i5 | 0;
   HEAP32[6009] = i19;
   HEAP32[6012] = i20;
   HEAP32[i20 + 4 >> 2] = i19 | 1;
   if ((i20 | 0) != (HEAP32[6011] | 0)) return;
   HEAP32[6011] = 0;
   HEAP32[6008] = 0;
   return;
  }
  if ((i16 | 0) == (HEAP32[6011] | 0)) {
   i19 = (HEAP32[6008] | 0) + i5 | 0;
   HEAP32[6008] = i19;
   HEAP32[6011] = i20;
   HEAP32[i20 + 4 >> 2] = i19 | 1;
   HEAP32[i20 + i19 >> 2] = i19;
   return;
  }
  i5 = (i2 & -8) + i5 | 0;
  i4 = i2 >>> 3;
  do if (i2 >>> 0 >= 256) {
   i6 = HEAP32[i15 + (i13 + 16) >> 2] | 0;
   i1 = HEAP32[i15 + (i13 | 4) >> 2] | 0;
   do if ((i1 | 0) == (i16 | 0)) {
    i2 = i15 + (i13 + 12) | 0;
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i2 = i15 + (i13 + 8) | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i14 = 0;
      break;
     }
    }
    while (1) {
     i3 = i1 + 20 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (i4) {
      i1 = i4;
      i2 = i3;
      continue;
     }
     i3 = i1 + 16 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) break; else {
      i1 = i4;
      i2 = i3;
     }
    }
    if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = 0;
     i14 = i1;
     break;
    }
   } else {
    i2 = HEAP32[i15 + i13 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
    i3 = i2 + 12 | 0;
    if ((HEAP32[i3 >> 2] | 0) != (i16 | 0)) _abort();
    i4 = i1 + 8 | 0;
    if ((HEAP32[i4 >> 2] | 0) == (i16 | 0)) {
     HEAP32[i3 >> 2] = i1;
     HEAP32[i4 >> 2] = i2;
     i14 = i1;
     break;
    } else _abort();
   } while (0);
   if (i6) {
    i1 = HEAP32[i15 + (i13 + 20) >> 2] | 0;
    i2 = 24328 + (i1 << 2) | 0;
    if ((i16 | 0) == (HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = i14;
     if (!i14) {
      HEAP32[6007] = HEAP32[6007] & ~(1 << i1);
      break;
     }
    } else {
     if (i6 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
     i1 = i6 + 16 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i16 | 0)) HEAP32[i1 >> 2] = i14; else HEAP32[i6 + 20 >> 2] = i14;
     if (!i14) break;
    }
    i2 = HEAP32[6010] | 0;
    if (i14 >>> 0 < i2 >>> 0) _abort();
    HEAP32[i14 + 24 >> 2] = i6;
    i1 = HEAP32[i15 + (i13 + 8) >> 2] | 0;
    do if (i1) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
     HEAP32[i14 + 16 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i14;
     break;
    } while (0);
    i1 = HEAP32[i15 + (i13 + 12) >> 2] | 0;
    if (i1) if (i1 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
     HEAP32[i14 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i14;
     break;
    }
   }
  } else {
   i3 = HEAP32[i15 + i13 >> 2] | 0;
   i2 = HEAP32[i15 + (i13 | 4) >> 2] | 0;
   i1 = 24064 + (i4 << 1 << 2) | 0;
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
    if ((HEAP32[i3 + 12 >> 2] | 0) != (i16 | 0)) _abort();
   }
   if ((i2 | 0) == (i3 | 0)) {
    HEAP32[6006] = HEAP32[6006] & ~(1 << i4);
    break;
   }
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort();
    i1 = i2 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i16 | 0)) i12 = i1; else _abort();
   } else i12 = i2 + 8 | 0;
   HEAP32[i3 + 12 >> 2] = i2;
   HEAP32[i12 >> 2] = i3;
  } while (0);
  HEAP32[i20 + 4 >> 2] = i5 | 1;
  HEAP32[i20 + i5 >> 2] = i5;
  if ((i20 | 0) == (HEAP32[6011] | 0)) {
   HEAP32[6008] = i5;
   return;
  }
 } else {
  HEAP32[i1 >> 2] = i2 & -2;
  HEAP32[i20 + 4 >> 2] = i5 | 1;
  HEAP32[i20 + i5 >> 2] = i5;
 }
 i1 = i5 >>> 3;
 if (i5 >>> 0 < 256) {
  i2 = i1 << 1;
  i4 = 24064 + (i2 << 2) | 0;
  i3 = HEAP32[6006] | 0;
  i1 = 1 << i1;
  if (i3 & i1) {
   i1 = 24064 + (i2 + 2 << 2) | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
    i17 = i1;
    i18 = i2;
   }
  } else {
   HEAP32[6006] = i3 | i1;
   i17 = 24064 + (i2 + 2 << 2) | 0;
   i18 = i4;
  }
  HEAP32[i17 >> 2] = i20;
  HEAP32[i18 + 12 >> 2] = i20;
  HEAP32[i20 + 8 >> 2] = i18;
  HEAP32[i20 + 12 >> 2] = i4;
  return;
 }
 i1 = i5 >>> 8;
 if (i1) if (i5 >>> 0 > 16777215) i4 = 31; else {
  i17 = (i1 + 1048320 | 0) >>> 16 & 8;
  i18 = i1 << i17;
  i16 = (i18 + 520192 | 0) >>> 16 & 4;
  i18 = i18 << i16;
  i4 = (i18 + 245760 | 0) >>> 16 & 2;
  i4 = 14 - (i16 | i17 | i4) + (i18 << i4 >>> 15) | 0;
  i4 = i5 >>> (i4 + 7 | 0) & 1 | i4 << 1;
 } else i4 = 0;
 i1 = 24328 + (i4 << 2) | 0;
 HEAP32[i20 + 28 >> 2] = i4;
 HEAP32[i20 + 20 >> 2] = 0;
 HEAP32[i20 + 16 >> 2] = 0;
 i2 = HEAP32[6007] | 0;
 i3 = 1 << i4;
 L199 : do if (i2 & i3) {
  i1 = HEAP32[i1 >> 2] | 0;
  L202 : do if ((HEAP32[i1 + 4 >> 2] & -8 | 0) != (i5 | 0)) {
   i4 = i5 << ((i4 | 0) == 31 ? 0 : 25 - (i4 >>> 1) | 0);
   while (1) {
    i2 = i1 + 16 + (i4 >>> 31 << 2) | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if (!i3) break;
    if ((HEAP32[i3 + 4 >> 2] & -8 | 0) == (i5 | 0)) {
     i19 = i3;
     break L202;
    } else {
     i4 = i4 << 1;
     i1 = i3;
    }
   }
   if (i2 >>> 0 < (HEAP32[6010] | 0) >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = i20;
    HEAP32[i20 + 24 >> 2] = i1;
    HEAP32[i20 + 12 >> 2] = i20;
    HEAP32[i20 + 8 >> 2] = i20;
    break L199;
   }
  } else i19 = i1; while (0);
  i1 = i19 + 8 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i18 = HEAP32[6010] | 0;
  if (i2 >>> 0 >= i18 >>> 0 & i19 >>> 0 >= i18 >>> 0) {
   HEAP32[i2 + 12 >> 2] = i20;
   HEAP32[i1 >> 2] = i20;
   HEAP32[i20 + 8 >> 2] = i2;
   HEAP32[i20 + 12 >> 2] = i19;
   HEAP32[i20 + 24 >> 2] = 0;
   break;
  } else _abort();
 } else {
  HEAP32[6007] = i2 | i3;
  HEAP32[i1 >> 2] = i20;
  HEAP32[i20 + 24 >> 2] = i1;
  HEAP32[i20 + 12 >> 2] = i20;
  HEAP32[i20 + 8 >> 2] = i20;
 } while (0);
 i20 = (HEAP32[6014] | 0) + -1 | 0;
 HEAP32[6014] = i20;
 if (!i20) i1 = 24480; else return;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) break; else i1 = i1 + 8 | 0;
 }
 HEAP32[6014] = -1;
 return;
}

function __ZN46EmscriptenBindingInitializer_my_module_maxiFFTC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 __embind_register_class(15176, 15184, 15200, 0, 26129, 92, 26132, 0, 26132, 0, 33882, 26134, 287);
 __embind_register_smart_ptr(15216, 15176, 33890, 2, 26129, 93, 27044, 27, 26148, 65, 26134, 288);
 __embind_register_class_constructor(15176, 1, 22720, 26129, 94, 289);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 28;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15176, 35516, 5, 22724, 33910, 4, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 3;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15176, 33917, 3, 22744, 33925, 2, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 16;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15176, 33930, 2, 22756, 33939, 12, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 17;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15176, 33943, 2, 22756, 33939, 12, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 18;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15176, 33960, 2, 22756, 33939, 12, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 13;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15176, 33977, 3, 22764, 33990, 3, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 14;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15176, 33995, 3, 22764, 33990, 3, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 15;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15176, 34010, 3, 22764, 33990, 3, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 95;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 46;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15176, 34019, 16112, 26148, 66, i1 | 0, 16112, 26137, 15, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 96;
 HEAP32[i2 + 4 >> 2] = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 47;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_property(15176, 34030, 16112, 26148, 66, i2 | 0, 16112, 26137, 15, i1 | 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 97;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 48;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15176, 34038, 16112, 26148, 66, i1 | 0, 16112, 26137, 15, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 49;
 HEAP32[i2 + 4 >> 2] = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 50;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_property(15176, 34043, 13440, 26148, 67, i2 | 0, 13440, 26137, 16, i1 | 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 51;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 52;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15176, 34054, 13440, 26148, 67, i1 | 0, 13440, 26137, 16, i2 | 0);
 __embind_register_class(15224, 15232, 15248, 0, 26129, 98, 26132, 0, 26132, 0, 34061, 26134, 290);
 __embind_register_smart_ptr(15264, 15224, 34070, 2, 26129, 99, 27044, 28, 26148, 68, 26134, 291);
 __embind_register_class_constructor(15224, 1, 22776, 26129, 100, 292);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 29;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(15224, 35516, 5, 22780, 33910, 5, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 4;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(15224, 33917, 4, 22800, 34091, 2, i2 | 0, 0);
 __embind_register_class(15272, 15280, 15296, 0, 26129, 101, 26132, 0, 26132, 0, 34097, 26134, 293);
 __embind_register_smart_ptr(15312, 15272, 34119, 2, 26129, 102, 27044, 29, 26148, 69, 26134, 294);
 __embind_register_class_constructor(15272, 1, 22816, 26129, 103, 295);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 1;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(15272, 35516, 5, 22820, 34153, 1, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 53;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(15272, 34160, 3, 22840, 26137, 17, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 104;
 HEAP32[i2 + 4 >> 2] = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 54;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34170, 16112, 26148, 70, i2 | 0, 16112, 26137, 18, i1 | 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 105;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 55;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34183, 16112, 26148, 70, i1 | 0, 16112, 26137, 18, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 106;
 HEAP32[i2 + 4 >> 2] = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 56;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34193, 16112, 26148, 70, i2 | 0, 16112, 26137, 18, i1 | 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 107;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 57;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34203, 16112, 26148, 70, i1 | 0, 16112, 26137, 18, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 19;
 HEAP32[i2 + 4 >> 2] = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 24;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34222, 16144, 33939, 16, i2 | 0, 16144, 26664, 15, i1 | 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 20;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 25;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34244, 16144, 33939, 16, i1 | 0, 16144, 26664, 15, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 21;
 HEAP32[i2 + 4 >> 2] = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 26;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34265, 16144, 33939, 16, i2 | 0, 16144, 26664, 15, i1 | 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 17;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15272, 34291, 3, 22852, 33990, 5, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 18;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15272, 34302, 3, 22852, 33990, 5, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 71;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15272, 34310, 3, 22864, 26171, 15, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 108;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 58;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34326, 16112, 26148, 70, i1 | 0, 16112, 26137, 18, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 22;
 HEAP32[i2 + 4 >> 2] = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 27;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34339, 16144, 33939, 16, i2 | 0, 16144, 26664, 15, i1 | 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 72;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15272, 34353, 3, 22864, 26171, 15, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 23;
 HEAP32[i1 + 4 >> 2] = 0;
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 28;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34364, 16144, 33939, 16, i1 | 0, 16144, 26664, 15, i2 | 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 24;
 HEAP32[i2 + 4 >> 2] = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 29;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_property(15272, 34378, 16144, 33939, 16, i2 | 0, 16144, 26664, 15, i1 | 0);
 return;
}

function __Z3FFTibPfS_S_S_(i23, i21, i19, i18, i24, i22) {
 i23 = i23 | 0;
 i21 = i21 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i24 = i24 | 0;
 i22 = i22 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, d9 = 0.0, d10 = 0.0, d11 = 0.0, d12 = 0.0, d13 = 0.0, d14 = 0.0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d20 = 0.0, i25 = 0, d26 = 0.0, d27 = 0.0;
 i25 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i25;
 if ((i23 | 0) < 2) {
  i8 = HEAP32[5946] | 0;
  HEAP32[i1 >> 2] = i23;
  _fprintf(i8, 33856, i1) | 0;
  _exit(1);
 }
 if (i23 + -1 & i23) {
  i8 = HEAP32[5946] | 0;
  HEAP32[i1 >> 2] = i23;
  _fprintf(i8, 33856, i1) | 0;
  _exit(1);
 }
 L7 : do if (!(HEAP32[5679] | 0)) {
  i4 = _malloc(64) | 0;
  HEAP32[5679] = i4;
  i1 = 1;
  i8 = 2;
  while (1) {
   i7 = _malloc(i8 << 2) | 0;
   i3 = i1 + -1 | 0;
   HEAP32[i4 + (i3 << 2) >> 2] = i7;
   if ((i8 | 0) > 0) {
    i6 = HEAP32[(HEAP32[5679] | 0) + (i3 << 2) >> 2] | 0;
    i7 = 0;
    do {
     i4 = i7;
     i5 = 0;
     i3 = 0;
     while (1) {
      i3 = i4 & 1 | i3 << 1;
      i5 = i5 + 1 | 0;
      if ((i5 | 0) == (i1 | 0)) break; else i4 = i4 >> 1;
     }
     HEAP32[i6 + (i7 << 2) >> 2] = i3;
     i7 = i7 + 1 | 0;
    } while ((i7 | 0) != (i8 | 0));
   }
   i1 = i1 + 1 | 0;
   if ((i1 | 0) == 17) break L7;
   i4 = HEAP32[5679] | 0;
   i8 = i8 << 1;
  }
 } while (0);
 d20 = i21 ? -6.283185307179586 : 6.283185307179586;
 i1 = 0;
 while (1) if (!(1 << i1 & i23)) i1 = i1 + 1 | 0; else break;
 i7 = (i23 | 0) > 0;
 L24 : do if (i7) {
  i5 = (i18 | 0) == 0;
  if ((i1 | 0) < 17) {
   i1 = HEAP32[(HEAP32[5679] | 0) + (i1 + -1 << 2) >> 2] | 0;
   i4 = 0;
   while (1) {
    i3 = HEAP32[i1 + (i4 << 2) >> 2] | 0;
    HEAP32[i24 + (i3 << 2) >> 2] = HEAP32[i19 + (i4 << 2) >> 2];
    if (i5) d2 = 0.0; else d2 = +HEAPF32[i18 + (i4 << 2) >> 2];
    HEAPF32[i22 + (i3 << 2) >> 2] = d2;
    i4 = i4 + 1 | 0;
    if ((i4 | 0) == (i23 | 0)) {
     i1 = 1;
     i6 = 2;
     break L24;
    }
   }
  }
  if (i5) {
   i6 = 0;
   do {
    i4 = i6;
    i5 = 0;
    i3 = 0;
    while (1) {
     i3 = i4 & 1 | i3 << 1;
     i5 = i5 + 1 | 0;
     if ((i5 | 0) == (i1 | 0)) break; else i4 = i4 >> 1;
    }
    HEAP32[i24 + (i3 << 2) >> 2] = HEAP32[i19 + (i6 << 2) >> 2];
    HEAPF32[i22 + (i3 << 2) >> 2] = 0.0;
    i6 = i6 + 1 | 0;
   } while ((i6 | 0) != (i23 | 0));
   i1 = 1;
   i6 = 2;
  } else {
   i6 = 0;
   do {
    i4 = i6;
    i5 = 0;
    i3 = 0;
    while (1) {
     i3 = i4 & 1 | i3 << 1;
     i5 = i5 + 1 | 0;
     if ((i5 | 0) == (i1 | 0)) break; else i4 = i4 >> 1;
    }
    HEAP32[i24 + (i3 << 2) >> 2] = HEAP32[i19 + (i6 << 2) >> 2];
    HEAP32[i22 + (i3 << 2) >> 2] = HEAP32[i18 + (i6 << 2) >> 2];
    i6 = i6 + 1 | 0;
   } while ((i6 | 0) != (i23 | 0));
   i1 = 1;
   i6 = 2;
  }
 } else {
  i1 = 1;
  i6 = 2;
 } while (0);
 while (1) {
  d14 = d20 / +(i6 | 0);
  d13 = d14 * -2.0;
  d11 = +Math_sin(+d13);
  d12 = +Math_sin(+-d14);
  d13 = +Math_cos(+d13);
  d14 = +Math_cos(+d14);
  d15 = d14 * 2.0;
  L47 : do if (i7) {
   if ((i1 | 0) > 0) {
    i3 = 0;
    i4 = i1;
   } else {
    i1 = 0;
    while (1) {
     i1 = i1 + i6 | 0;
     if ((i1 | 0) >= (i23 | 0)) break L47;
    }
   }
   while (1) {
    d16 = d12;
    d10 = d11;
    d17 = d14;
    d2 = d13;
    i5 = i3;
    while (1) {
     d9 = d15 * d17 - d2;
     d2 = d15 * d16 - d10;
     i8 = i5 + i1 | 0;
     i19 = i24 + (i8 << 2) | 0;
     d27 = +HEAPF32[i19 >> 2];
     i8 = i22 + (i8 << 2) | 0;
     d10 = +HEAPF32[i8 >> 2];
     d26 = d9 * d27 - d2 * d10;
     d10 = d2 * d27 + d9 * d10;
     i18 = i24 + (i5 << 2) | 0;
     HEAPF32[i19 >> 2] = +HEAPF32[i18 >> 2] - d26;
     i19 = i22 + (i5 << 2) | 0;
     HEAPF32[i8 >> 2] = +HEAPF32[i19 >> 2] - d10;
     HEAPF32[i18 >> 2] = d26 + +HEAPF32[i18 >> 2];
     HEAPF32[i19 >> 2] = d10 + +HEAPF32[i19 >> 2];
     i5 = i5 + 1 | 0;
     if ((i5 | 0) == (i4 | 0)) break; else {
      d27 = d17;
      d10 = d16;
      d16 = d2;
      d17 = d9;
      d2 = d27;
     }
    }
    i3 = i3 + i6 | 0;
    if ((i3 | 0) >= (i23 | 0)) break; else i4 = i4 + i6 | 0;
   }
  } while (0);
  i1 = i6 << 1;
  if ((i1 | 0) > (i23 | 0)) break; else {
   i19 = i6;
   i6 = i1;
   i1 = i19;
  }
 }
 if (!i21) {
  STACKTOP = i25;
  return;
 }
 d2 = +(i23 | 0);
 if (i7) i1 = 0; else {
  STACKTOP = i25;
  return;
 }
 do {
  i21 = i24 + (i1 << 2) | 0;
  HEAPF32[i21 >> 2] = +HEAPF32[i21 >> 2] / d2;
  i21 = i22 + (i1 << 2) | 0;
  HEAPF32[i21 >> 2] = +HEAPF32[i21 >> 2] / d2;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != (i23 | 0));
 STACKTOP = i25;
 return;
}

function ___udivmoddi4(i5, i6, i8, i11, i13) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i14 = 0, i15 = 0;
 i9 = i5;
 i4 = i6;
 i7 = i4;
 i2 = i8;
 i12 = i11;
 i3 = i12;
 if (!i7) {
  i1 = (i13 | 0) != 0;
  if (!i3) {
   if (i1) {
    HEAP32[i13 >> 2] = (i9 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i12 = 0;
   i13 = (i9 >>> 0) / (i2 >>> 0) >>> 0;
   return (tempRet0 = i12, i13) | 0;
  } else {
   if (!i1) {
    i12 = 0;
    i13 = 0;
    return (tempRet0 = i12, i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i6 & 0;
   i12 = 0;
   i13 = 0;
   return (tempRet0 = i12, i13) | 0;
  }
 }
 i1 = (i3 | 0) == 0;
 do if (i2) {
  if (!i1) {
   i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
   if (i1 >>> 0 <= 31) {
    i10 = i1 + 1 | 0;
    i3 = 31 - i1 | 0;
    i6 = i1 - 31 >> 31;
    i2 = i10;
    i5 = i9 >>> (i10 >>> 0) & i6 | i7 << i3;
    i6 = i7 >>> (i10 >>> 0) & i6;
    i1 = 0;
    i3 = i9 << i3;
    break;
   }
   if (!i13) {
    i12 = 0;
    i13 = 0;
    return (tempRet0 = i12, i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
   i12 = 0;
   i13 = 0;
   return (tempRet0 = i12, i13) | 0;
  }
  i1 = i2 - 1 | 0;
  if (i1 & i2) {
   i3 = (Math_clz32(i2 | 0) | 0) + 33 - (Math_clz32(i7 | 0) | 0) | 0;
   i15 = 64 - i3 | 0;
   i10 = 32 - i3 | 0;
   i4 = i10 >> 31;
   i14 = i3 - 32 | 0;
   i6 = i14 >> 31;
   i2 = i3;
   i5 = i10 - 1 >> 31 & i7 >>> (i14 >>> 0) | (i7 << i10 | i9 >>> (i3 >>> 0)) & i6;
   i6 = i6 & i7 >>> (i3 >>> 0);
   i1 = i9 << i15 & i4;
   i3 = (i7 << i15 | i9 >>> (i14 >>> 0)) & i4 | i9 << i10 & i3 - 33 >> 31;
   break;
  }
  if (i13) {
   HEAP32[i13 >> 2] = i1 & i9;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  if ((i2 | 0) == 1) {
   i14 = i4 | i6 & 0;
   i15 = i5 | 0 | 0;
   return (tempRet0 = i14, i15) | 0;
  } else {
   i15 = _llvm_cttz_i32(i2 | 0) | 0;
   i14 = i7 >>> (i15 >>> 0) | 0;
   i15 = i7 << 32 - i15 | i9 >>> (i15 >>> 0) | 0;
   return (tempRet0 = i14, i15) | 0;
  }
 } else {
  if (i1) {
   if (i13) {
    HEAP32[i13 >> 2] = (i7 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i2 >>> 0) >>> 0;
   return (tempRet0 = i14, i15) | 0;
  }
  if (!i9) {
   if (i13) {
    HEAP32[i13 >> 2] = 0;
    HEAP32[i13 + 4 >> 2] = (i7 >>> 0) % (i3 >>> 0);
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i3 >>> 0) >>> 0;
   return (tempRet0 = i14, i15) | 0;
  }
  i1 = i3 - 1 | 0;
  if (!(i1 & i3)) {
   if (i13) {
    HEAP32[i13 >> 2] = i5 | 0;
    HEAP32[i13 + 4 >> 2] = i1 & i7 | i6 & 0;
   }
   i14 = 0;
   i15 = i7 >>> ((_llvm_cttz_i32(i3 | 0) | 0) >>> 0);
   return (tempRet0 = i14, i15) | 0;
  }
  i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
  if (i1 >>> 0 <= 30) {
   i6 = i1 + 1 | 0;
   i3 = 31 - i1 | 0;
   i2 = i6;
   i5 = i7 << i3 | i9 >>> (i6 >>> 0);
   i6 = i7 >>> (i6 >>> 0);
   i1 = 0;
   i3 = i9 << i3;
   break;
  }
  if (!i13) {
   i14 = 0;
   i15 = 0;
   return (tempRet0 = i14, i15) | 0;
  }
  HEAP32[i13 >> 2] = i5 | 0;
  HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
  i14 = 0;
  i15 = 0;
  return (tempRet0 = i14, i15) | 0;
 } while (0);
 if (!i2) {
  i7 = i3;
  i4 = 0;
  i3 = 0;
 } else {
  i10 = i8 | 0 | 0;
  i9 = i12 | i11 & 0;
  i7 = _i64Add(i10 | 0, i9 | 0, -1, -1) | 0;
  i8 = tempRet0;
  i4 = i3;
  i3 = 0;
  do {
   i11 = i4;
   i4 = i1 >>> 31 | i4 << 1;
   i1 = i3 | i1 << 1;
   i11 = i5 << 1 | i11 >>> 31 | 0;
   i12 = i5 >>> 31 | i6 << 1 | 0;
   _i64Subtract(i7, i8, i11, i12) | 0;
   i15 = tempRet0;
   i14 = i15 >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1;
   i3 = i14 & 1;
   i5 = _i64Subtract(i11, i12, i14 & i10, (((i15 | 0) < 0 ? -1 : 0) >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1) & i9) | 0;
   i6 = tempRet0;
   i2 = i2 - 1 | 0;
  } while ((i2 | 0) != 0);
  i7 = i4;
  i4 = 0;
 }
 i2 = 0;
 if (i13) {
  HEAP32[i13 >> 2] = i5;
  HEAP32[i13 + 4 >> 2] = i6;
 }
 i14 = (i1 | 0) >>> 31 | (i7 | i2) << 1 | (i2 << 1 | i1 >>> 31) & 0 | i4;
 i15 = (i1 << 1 | 0 >>> 31) & -2 | i3;
 return (tempRet0 = i14, i15) | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3, i15, i14, i6, i13) {
 i3 = i3 | 0;
 i15 = i15 | 0;
 i14 = i14 | 0;
 i6 = i6 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 L1 : do if ((i3 | 0) == (HEAP32[i15 + 8 >> 2] | 0)) {
  if ((HEAP32[i15 + 4 >> 2] | 0) == (i14 | 0) ? (i1 = i15 + 28 | 0, (HEAP32[i1 >> 2] | 0) != 1) : 0) HEAP32[i1 >> 2] = i6;
 } else {
  if ((i3 | 0) != (HEAP32[i15 >> 2] | 0)) {
   i12 = HEAP32[i3 + 12 >> 2] | 0;
   i4 = i3 + 16 + (i12 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3 + 16 | 0, i15, i14, i6, i13);
   i1 = i3 + 24 | 0;
   if ((i12 | 0) <= 1) break;
   i2 = HEAP32[i3 + 8 >> 2] | 0;
   if ((i2 & 2 | 0) == 0 ? (i5 = i15 + 36 | 0, (HEAP32[i5 >> 2] | 0) != 1) : 0) {
    if (!(i2 & 1)) {
     i2 = i15 + 54 | 0;
     while (1) {
      if (HEAP8[i2 >> 0] | 0) break L1;
      if ((HEAP32[i5 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i15, i14, i6, i13);
      i1 = i1 + 8 | 0;
      if (i1 >>> 0 >= i4 >>> 0) break L1;
     }
    }
    i2 = i15 + 24 | 0;
    i3 = i15 + 54 | 0;
    while (1) {
     if (HEAP8[i3 >> 0] | 0) break L1;
     if ((HEAP32[i5 >> 2] | 0) == 1 ? (HEAP32[i2 >> 2] | 0) == 1 : 0) break L1;
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i15, i14, i6, i13);
     i1 = i1 + 8 | 0;
     if (i1 >>> 0 >= i4 >>> 0) break L1;
    }
   }
   i2 = i15 + 54 | 0;
   while (1) {
    if (HEAP8[i2 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i15, i14, i6, i13);
    i1 = i1 + 8 | 0;
    if (i1 >>> 0 >= i4 >>> 0) break L1;
   }
  }
  if ((HEAP32[i15 + 16 >> 2] | 0) != (i14 | 0) ? (i11 = i15 + 20 | 0, (HEAP32[i11 >> 2] | 0) != (i14 | 0)) : 0) {
   HEAP32[i15 + 32 >> 2] = i6;
   i8 = i15 + 44 | 0;
   if ((HEAP32[i8 >> 2] | 0) == 4) break;
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   i4 = i3 + 16 + (i2 << 3) | 0;
   i5 = i15 + 52 | 0;
   i6 = i15 + 53 | 0;
   i9 = i15 + 54 | 0;
   i7 = i3 + 8 | 0;
   i10 = i15 + 24 | 0;
   L34 : do if ((i2 | 0) > 0) {
    i2 = 0;
    i1 = 0;
    i3 = i3 + 16 | 0;
    while (1) {
     HEAP8[i5 >> 0] = 0;
     HEAP8[i6 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i3, i15, i14, i14, 1, i13);
     if (HEAP8[i9 >> 0] | 0) {
      i12 = 20;
      break L34;
     }
     do if (HEAP8[i6 >> 0] | 0) {
      if (!(HEAP8[i5 >> 0] | 0)) if (!(HEAP32[i7 >> 2] & 1)) {
       i1 = 1;
       i12 = 20;
       break L34;
      } else {
       i1 = 1;
       break;
      }
      if ((HEAP32[i10 >> 2] | 0) == 1) break L34;
      if (!(HEAP32[i7 >> 2] & 2)) break L34; else {
       i2 = 1;
       i1 = 1;
      }
     } while (0);
     i3 = i3 + 8 | 0;
     if (i3 >>> 0 >= i4 >>> 0) {
      i12 = 20;
      break;
     }
    }
   } else {
    i2 = 0;
    i1 = 0;
    i12 = 20;
   } while (0);
   do if ((i12 | 0) == 20) {
    if ((!i2 ? (HEAP32[i11 >> 2] = i14, i14 = i15 + 40 | 0, HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1, (HEAP32[i15 + 36 >> 2] | 0) == 1) : 0) ? (HEAP32[i10 >> 2] | 0) == 2 : 0) {
     HEAP8[i9 >> 0] = 1;
     if (i1) break;
    } else i12 = 24;
    if ((i12 | 0) == 24 ? i1 : 0) break;
    HEAP32[i8 >> 2] = 4;
    break L1;
   } while (0);
   HEAP32[i8 >> 2] = 3;
   break;
  }
  if ((i6 | 0) == 1) HEAP32[i15 + 32 >> 2] = 1;
 } while (0);
 return;
}

function _fmod(d12, d1) {
 d12 = +d12;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 HEAPF64[tempDoublePtr >> 3] = d12;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i9 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i10 = HEAP32[tempDoublePtr >> 2] | 0;
 i11 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i3 = _bitshift64Lshr(i2 | 0, i9 | 0, 52) | 0;
 i3 = i3 & 2047;
 i7 = _bitshift64Lshr(i10 | 0, i11 | 0, 52) | 0;
 i7 = i7 & 2047;
 i13 = i9 & -2147483648;
 i6 = _bitshift64Shl(i10 | 0, i11 | 0, 1) | 0;
 i8 = tempRet0;
 L1 : do if (!((i6 | 0) == 0 & (i8 | 0) == 0) ? (i5 = i11 & 2147483647, !(i5 >>> 0 > 2146435072 | (i5 | 0) == 2146435072 & i10 >>> 0 > 0 | (i3 | 0) == 2047)) : 0) {
  i4 = _bitshift64Shl(i2 | 0, i9 | 0, 1) | 0;
  i5 = tempRet0;
  if (!(i5 >>> 0 > i8 >>> 0 | (i5 | 0) == (i8 | 0) & i4 >>> 0 > i6 >>> 0)) return +((i4 | 0) == (i6 | 0) & (i5 | 0) == (i8 | 0) ? d12 * 0.0 : d12);
  if (!i3) {
   i3 = _bitshift64Shl(i2 | 0, i9 | 0, 12) | 0;
   i4 = tempRet0;
   if ((i4 | 0) > -1 | (i4 | 0) == -1 & i3 >>> 0 > 4294967295) {
    i5 = i3;
    i3 = 0;
    do {
     i3 = i3 + -1 | 0;
     i5 = _bitshift64Shl(i5 | 0, i4 | 0, 1) | 0;
     i4 = tempRet0;
    } while ((i4 | 0) > -1 | (i4 | 0) == -1 & i5 >>> 0 > 4294967295);
   } else i3 = 0;
   i2 = _bitshift64Shl(i2 | 0, i9 | 0, 1 - i3 | 0) | 0;
   i4 = tempRet0;
  } else i4 = i9 & 1048575 | 1048576;
  if (!i7) {
   i5 = _bitshift64Shl(i10 | 0, i11 | 0, 12) | 0;
   i6 = tempRet0;
   if ((i6 | 0) > -1 | (i6 | 0) == -1 & i5 >>> 0 > 4294967295) {
    i7 = 0;
    do {
     i7 = i7 + -1 | 0;
     i5 = _bitshift64Shl(i5 | 0, i6 | 0, 1) | 0;
     i6 = tempRet0;
    } while ((i6 | 0) > -1 | (i6 | 0) == -1 & i5 >>> 0 > 4294967295);
   } else i7 = 0;
   i10 = _bitshift64Shl(i10 | 0, i11 | 0, 1 - i7 | 0) | 0;
   i9 = tempRet0;
  } else i9 = i11 & 1048575 | 1048576;
  i8 = _i64Subtract(i2 | 0, i4 | 0, i10 | 0, i9 | 0) | 0;
  i6 = tempRet0;
  i5 = (i6 | 0) > -1 | (i6 | 0) == -1 & i8 >>> 0 > 4294967295;
  L23 : do if ((i3 | 0) > (i7 | 0)) {
   while (1) {
    if (i5) if ((i2 | 0) == (i10 | 0) & (i4 | 0) == (i9 | 0)) break; else {
     i2 = i8;
     i4 = i6;
    }
    i2 = _bitshift64Shl(i2 | 0, i4 | 0, 1) | 0;
    i4 = tempRet0;
    i3 = i3 + -1 | 0;
    i8 = _i64Subtract(i2 | 0, i4 | 0, i10 | 0, i9 | 0) | 0;
    i6 = tempRet0;
    i5 = (i6 | 0) > -1 | (i6 | 0) == -1 & i8 >>> 0 > 4294967295;
    if ((i3 | 0) <= (i7 | 0)) break L23;
   }
   d1 = d12 * 0.0;
   break L1;
  } while (0);
  if (i5) if ((i2 | 0) == (i10 | 0) & (i4 | 0) == (i9 | 0)) {
   d1 = d12 * 0.0;
   break;
  } else {
   i4 = i6;
   i2 = i8;
  }
  if (i4 >>> 0 < 1048576 | (i4 | 0) == 1048576 & i2 >>> 0 < 0) do {
   i2 = _bitshift64Shl(i2 | 0, i4 | 0, 1) | 0;
   i4 = tempRet0;
   i3 = i3 + -1 | 0;
  } while (i4 >>> 0 < 1048576 | (i4 | 0) == 1048576 & i2 >>> 0 < 0);
  if ((i3 | 0) > 0) {
   i11 = _i64Add(i2 | 0, i4 | 0, 0, -1048576) | 0;
   i2 = tempRet0;
   i3 = _bitshift64Shl(i3 | 0, 0, 52) | 0;
   i2 = i2 | tempRet0;
   i3 = i11 | i3;
  } else {
   i3 = _bitshift64Lshr(i2 | 0, i4 | 0, 1 - i3 | 0) | 0;
   i2 = tempRet0;
  }
  HEAP32[tempDoublePtr >> 2] = i3;
  HEAP32[tempDoublePtr + 4 >> 2] = i2 | i13;
  d1 = +HEAPF64[tempDoublePtr >> 3];
 } else i14 = 3; while (0);
 if ((i14 | 0) == 3) {
  d1 = d12 * d1;
  d1 = d1 / d1;
 }
 return +d1;
}

function __ZN49EmscriptenBindingInitializer_my_module_maxiGrainsC2Ev(i1) {
 i1 = i1 | 0;
 __embind_register_class(15496, 15504, 15520, 0, 26129, 112, 26132, 0, 26132, 0, 35954, 26134, 300);
 __embind_register_smart_ptr(15536, 15496, 35970, 2, 26129, 113, 27044, 31, 26148, 74, 26134, 301);
 __embind_register_class_constructor(15496, 1, 23152, 26129, 114, 302);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 63;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15496, 36015, 3, 23156, 26137, 20, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 25;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15496, 36025, 2, 23168, 27124, 19, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 26;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15496, 36047, 2, 23168, 27124, 19, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 30;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15496, 36059, 3, 23176, 26337, 16, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 1;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15496, 36071, 6, 23188, 36076, 1, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 1;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15496, 36084, 5, 23212, 36090, 1, i1 | 0, 0);
 __embind_register_class(15544, 15552, 15568, 0, 26129, 115, 26132, 0, 26132, 0, 36097, 26134, 303);
 __embind_register_smart_ptr(15584, 15544, 36112, 2, 26129, 116, 27044, 32, 26148, 75, 26134, 304);
 __embind_register_class_constructor(15544, 1, 23232, 26129, 117, 305);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 64;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15544, 36015, 3, 23236, 26137, 21, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 2;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15544, 36071, 6, 23248, 36076, 2, i1 | 0, 0);
 __embind_register_class(15592, 15600, 15616, 0, 26129, 118, 26132, 0, 26132, 0, 36156, 26134, 306);
 __embind_register_smart_ptr(15632, 15592, 35970, 2, 26129, 119, 27044, 33, 26148, 76, 26134, 307);
 __embind_register_class_constructor(15592, 1, 23272, 26129, 120, 308);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 65;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15592, 36015, 3, 23276, 26137, 22, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 27;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15592, 36025, 2, 23288, 27124, 20, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 28;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15592, 36047, 2, 23288, 27124, 20, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 31;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15592, 36059, 3, 23296, 26337, 17, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 32;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15592, 36173, 3, 23296, 26337, 17, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 33;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15592, 36186, 3, 23296, 26337, 17, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 1;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15592, 36071, 7, 23308, 36197, 1, i1 | 0, 0);
 return;
}

function __ZN8maxiIFFT7processERNSt3__16vectorIfNS0_9allocatorIfEEEES5_(i12, i2, i3) {
 i12 = i12 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, d13 = 0.0, i14 = 0, i15 = 0;
 i11 = i12 + 24 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 if (i1) {
  i10 = i12 + 20 | 0;
  i8 = i12 + 4 | 0;
  i9 = i1;
  i8 = HEAP32[i8 >> 2] | 0;
  i8 = i8 + (i9 << 2) | 0;
  d13 = +HEAPF32[i8 >> 2];
  i12 = i12 + 28 | 0;
  i8 = d13 > .9999899864196777;
  d13 = i8 ? .9999899864196777 : d13;
  i8 = d13 < -.9999899864196777;
  d13 = i8 ? -.9999899864196777 : d13;
  HEAPF32[i12 >> 2] = d13;
  i10 = HEAP32[i10 >> 2] | 0;
  i12 = i9 + 1 | 0;
  i10 = (i10 | 0) == (i12 | 0);
  i12 = i10 ? 0 : i12;
  HEAP32[i11 >> 2] = i12;
  return +d13;
 }
 i10 = i12 + 32 | 0;
 _memset(HEAP32[i12 >> 2] | 0, 0, HEAP32[i10 >> 2] << 2 | 0) | 0;
 i7 = HEAP32[i12 + 36 >> 2] | 0;
 i9 = HEAP32[i12 >> 2] | 0;
 i8 = HEAP32[i12 + 8 >> 2] | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 i2 = HEAP32[i7 + 4 >> 2] | 0;
 i5 = HEAP32[i7 + 8 >> 2] | 0;
 i6 = HEAP32[i7 + 16 >> 2] | 0;
 if ((i2 | 0) > 0) {
  i3 = 0;
  do {
   i15 = i4 + (i3 << 2) | 0;
   i14 = i1 + (i3 << 2) | 0;
   d13 = +HEAPF32[i15 >> 2] * +Math_cos(+(+HEAPF32[i14 >> 2]));
   HEAPF32[i5 + (i3 << 2) >> 2] = d13;
   d13 = +HEAPF32[i15 >> 2] * +Math_sin(+(+HEAPF32[i14 >> 2]));
   HEAPF32[i6 + (i3 << 2) >> 2] = d13;
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i2 | 0));
 }
 i1 = i7 + 12 | 0;
 __Z3FFTibPfS_S_S_(HEAP32[i7 >> 2] | 0, 1, i5, i6, HEAP32[i1 >> 2] | 0, HEAP32[i7 + 20 >> 2] | 0);
 i3 = HEAP32[i7 >> 2] | 0;
 if ((i3 | 0) > 0) {
  i1 = HEAP32[i1 >> 2] | 0;
  i2 = 0;
  do {
   i15 = i9 + (i2 << 2) | 0;
   HEAPF32[i15 >> 2] = +HEAPF32[i15 >> 2] + +HEAPF32[i1 + (i2 << 2) >> 2] * +HEAPF32[i8 + (i2 << 2) >> 2];
   i2 = i2 + 1 | 0;
  } while ((i2 | 0) != (i3 | 0));
 }
 i5 = i12 + 4 | 0;
 i15 = HEAP32[i5 >> 2] | 0;
 i6 = i12 + 20 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 _memcpy(i15 | 0, i15 + (i1 << 2) | 0, (HEAP32[i10 >> 2] | 0) - i1 << 2 | 0) | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 _memset((HEAP32[i5 >> 2] | 0) + ((HEAP32[i10 >> 2] | 0) - i1 << 2) | 0, 0, i1 << 2 | 0) | 0;
 i1 = HEAP32[i10 >> 2] | 0;
 if ((i1 | 0) > 0) {
  i2 = HEAP32[i12 >> 2] | 0;
  i3 = HEAP32[i5 >> 2] | 0;
  i4 = 0;
  do {
   i15 = i3 + (i4 << 2) | 0;
   HEAPF32[i15 >> 2] = +HEAPF32[i2 + (i4 << 2) >> 2] + +HEAPF32[i15 >> 2];
   i4 = i4 + 1 | 0;
  } while ((i4 | 0) < (i1 | 0));
 }
 i14 = i6;
 i10 = i5;
 i15 = HEAP32[i11 >> 2] | 0;
 i10 = HEAP32[i10 >> 2] | 0;
 i10 = i10 + (i15 << 2) | 0;
 d13 = +HEAPF32[i10 >> 2];
 i12 = i12 + 28 | 0;
 i10 = d13 > .9999899864196777;
 d13 = i10 ? .9999899864196777 : d13;
 i10 = d13 < -.9999899864196777;
 d13 = i10 ? -.9999899864196777 : d13;
 HEAPF32[i12 >> 2] = d13;
 i14 = HEAP32[i14 >> 2] | 0;
 i15 = i15 + 1 | 0;
 i14 = (i14 | 0) == (i15 | 0);
 i15 = i14 ? 0 : i15;
 HEAP32[i11 >> 2] = i15;
 return +d13;
}

function _pop_arg(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0;
 L1 : do if (i3 >>> 0 <= 20) do switch (i3 | 0) {
 case 9:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   HEAP32[i2 >> 2] = i3;
   break L1;
  }
 case 10:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   i4 = i2;
   HEAP32[i4 >> 2] = i3;
   HEAP32[i4 + 4 >> 2] = ((i3 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 11:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   i4 = i2;
   HEAP32[i4 >> 2] = i3;
   HEAP32[i4 + 4 >> 2] = 0;
   break L1;
  }
 case 12:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   i3 = i4;
   i5 = HEAP32[i3 >> 2] | 0;
   i3 = HEAP32[i3 + 4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 8;
   i4 = i2;
   HEAP32[i4 >> 2] = i5;
   HEAP32[i4 + 4 >> 2] = i3;
   break L1;
  }
 case 13:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i4 = (i4 & 65535) << 16 >> 16;
   i5 = i2;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 14:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i5 = i2;
   HEAP32[i5 >> 2] = i4 & 65535;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 15:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i4 = (i4 & 255) << 24 >> 24;
   i5 = i2;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 16:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i5 = i2;
   HEAP32[i5 >> 2] = i4 & 255;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 17:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i1 >> 2] = i5 + 8;
   HEAPF64[i2 >> 3] = d6;
   break L1;
  }
 case 18:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i1 >> 2] = i5 + 8;
   HEAPF64[i2 >> 3] = d6;
   break L1;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function __ZN7maxiFFT5setupEiii(i15, i2, i3, i4) {
 i15 = i15 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d1 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, d16 = 0.0;
 i14 = __Znwj(24) | 0;
 HEAP32[i14 >> 2] = i2;
 i7 = (i2 | 0) / 2 | 0;
 HEAP32[i14 + 4 >> 2] = i7;
 i9 = i2 << 2;
 i11 = _malloc(i9) | 0;
 HEAP32[i14 + 8 >> 2] = i11;
 i11 = _malloc(i9) | 0;
 HEAP32[i14 + 16 >> 2] = i11;
 i11 = _malloc(i9) | 0;
 HEAP32[i14 + 12 >> 2] = i11;
 i11 = _malloc(i9) | 0;
 HEAP32[i14 + 20 >> 2] = i11;
 HEAP32[i15 + 64 >> 2] = i14;
 i14 = i15 + 60 | 0;
 HEAP32[i14 >> 2] = i2;
 i11 = i15 + 32 | 0;
 HEAP32[i11 >> 2] = i3;
 i10 = i15 + 40 | 0;
 HEAP32[i10 >> 2] = i7;
 i12 = i15 + 36 | 0;
 HEAP32[i12 >> 2] = i4;
 i2 = _malloc(i9) | 0;
 i9 = i15 + 44 | 0;
 HEAP32[i9 >> 2] = i2;
 i2 = i15 + 4 | 0;
 i3 = i15 + 8 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i6 = i4 - i5 >> 2;
 if (i7 >>> 0 <= i6 >>> 0) if (i7 >>> 0 < i6 >>> 0 ? (i8 = i5 + (i7 << 2) | 0, (i4 | 0) != (i8 | 0)) : 0) {
  HEAP32[i3 >> 2] = i4 + (~((i4 + -4 - i8 | 0) >>> 2) << 2);
  i2 = i7;
 } else i2 = i7; else {
  __ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEj(i2, i7 - i6 | 0);
  i2 = HEAP32[i10 >> 2] | 0;
 }
 i3 = _malloc(i2 << 2) | 0;
 HEAP32[i15 >> 2] = i3;
 i3 = i15 + 16 | 0;
 i4 = i15 + 20 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 i7 = i5 - i6 >> 2;
 if (i2 >>> 0 <= i7 >>> 0) {
  if (i2 >>> 0 < i7 >>> 0 ? (i13 = i6 + (i2 << 2) | 0, (i5 | 0) != (i13 | 0)) : 0) HEAP32[i4 >> 2] = i5 + (~((i5 + -4 - i13 | 0) >>> 2) << 2);
 } else __ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEj(i3, i2 - i7 | 0);
 i3 = __Znwj(4) | 0;
 i4 = i15 + 28 | 0;
 HEAP32[i4 >> 2] = i3;
 _memset(HEAP32[i9 >> 2] | 0, 0, HEAP32[i14 >> 2] << 2 | 0) | 0;
 _memset(HEAP32[i15 >> 2] | 0, 0, HEAP32[i10 >> 2] << 2 | 0) | 0;
 HEAPF32[HEAP32[i4 >> 2] >> 2] = 0.0;
 i4 = HEAP32[i11 >> 2] | 0;
 HEAP32[i15 + 52 >> 2] = i4 - (HEAP32[i12 >> 2] | 0);
 HEAP8[i15 + 68 >> 0] = 0;
 i14 = HEAP32[i14 >> 2] << 2;
 i3 = _malloc(i14) | 0;
 HEAP32[i15 + 48 >> 2] = i3;
 _memset(i3 | 0, 0, i14 | 0) | 0;
 if ((i4 | 0) <= 0) return;
 d1 = +(i4 + -1 | 0);
 i2 = 0;
 do {
  d16 = .5 - +Math_cos(+(+(i2 | 0) * 6.283185307179586 / d1)) * .5;
  HEAPF32[i3 + (i2 << 2) >> 2] = d16;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != (i4 | 0));
 return;
}

function __ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(i8, i2, i10) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i9 = i2;
 i7 = i10 - i9 >> 2;
 i5 = i8 + 8 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i6 = HEAP32[i8 >> 2] | 0;
 i4 = i6;
 if (i7 >>> 0 <= i1 - i4 >> 2 >>> 0) {
  i5 = i8 + 4 | 0;
  i1 = (HEAP32[i5 >> 2] | 0) - i4 >> 2;
  i8 = i7 >>> 0 > i1 >>> 0;
  i1 = i8 ? i2 + (i1 << 2) | 0 : i10;
  i3 = i1;
  i9 = i3 - i9 | 0;
  _memmove(i6 | 0, i2 | 0, i9 | 0) | 0;
  i2 = i6 + (i9 >> 2 << 2) | 0;
  if (!i8) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 | 0) == (i2 | 0)) return;
   HEAP32[i5 >> 2] = i1 + (~((i1 + -4 - i2 | 0) >>> 2) << 2);
   return;
  }
  if ((i1 | 0) == (i10 | 0)) return;
  i2 = HEAP32[i5 >> 2] | 0;
  i3 = i2 + (((i10 + -4 - i3 | 0) >>> 2) + 1 << 2) | 0;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i1 = i1 + 4 | 0;
   if ((i1 | 0) == (i10 | 0)) break; else i2 = i2 + 4 | 0;
  }
  HEAP32[i5 >> 2] = i3;
  return;
 }
 if (i6) {
  i1 = i8 + 4 | 0;
  i3 = HEAP32[i1 >> 2] | 0;
  if ((i3 | 0) != (i6 | 0)) HEAP32[i1 >> 2] = i3 + (~((i3 + -4 - i4 | 0) >>> 2) << 2);
  __ZdlPv(i6);
  HEAP32[i5 >> 2] = 0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  i1 = 0;
 }
 if (i7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
  i1 = HEAP32[i5 >> 2] | 0;
  i3 = HEAP32[i8 >> 2] | 0;
 } else i3 = 0;
 i1 = i1 - i3 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i7 >>> 0 ? i7 : i1;
  if (i1 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
   i3 = i1;
  } else i3 = i1;
 } else i3 = 1073741823;
 i1 = __Znwj(i3 << 2) | 0;
 i4 = i8 + 4 | 0;
 HEAP32[i4 >> 2] = i1;
 HEAP32[i8 >> 2] = i1;
 HEAP32[i5 >> 2] = i1 + (i3 << 2);
 if ((i2 | 0) == (i10 | 0)) return;
 i3 = i1 + (((i10 + -4 - i9 | 0) >>> 2) + 1 << 2) | 0;
 while (1) {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i2 = i2 + 4 | 0;
  if ((i2 | 0) == (i10 | 0)) break; else i1 = i1 + 4 | 0;
 }
 HEAP32[i4 >> 2] = i3;
 return;
}

function __ZN16maxiPitchStretchI14hannWinFunctorE4playEdddid(i6, d11, d2, d9, i5, d10) {
 i6 = i6 | 0;
 d11 = +d11;
 d2 = +d2;
 d9 = +d9;
 i5 = i5 | 0;
 d10 = +d10;
 var i1 = 0, i3 = 0, d4 = 0.0, i7 = 0, d8 = 0.0, i12 = 0;
 d2 = +HEAPF64[i6 >> 3] + d2;
 HEAPF64[i6 >> 3] = d2;
 i3 = i6 + 48 | 0;
 d8 = +HEAPF64[i3 >> 3] + 1.0;
 HEAPF64[i3 >> 3] = d8;
 if (d2 >= +(HEAP32[i6 + 36 >> 2] | 0)) {
  d2 = d2 - +(HEAP32[i6 + 40 >> 2] | 0);
  HEAPF64[i6 >> 3] = d2;
 }
 if (d2 < +(HEAP32[i6 + 32 >> 2] | 0)) {
  d2 = d2 + +(HEAP32[i6 + 40 >> 2] | 0);
  HEAPF64[i6 >> 3] = d2;
 }
 i1 = i6 + 24 | 0;
 d4 = +(HEAP32[5083] | 0) * d9 / +(i5 | 0) + +HEAPF64[i1 >> 3];
 if (d8 > d4) {
  HEAPF64[i3 >> 3] = d8 - d4;
  i3 = __Znwj(104) | 0;
  i7 = HEAP32[i6 + 8 >> 2] | 0;
  d10 = d2 / +(HEAP32[i7 + 108 >> 2] | 0) + d10;
  d10 = d10 < 1.0 ? d10 : 1.0;
  __ZN9maxiGrainI14hannWinFunctorEC2EP10maxiSampledddP20maxiGrainWindowCacheIS0_E(i3, i7, d10 < 0.0 ? 0.0 : d10, d9, d11, i6 + 16 | 0);
  i7 = i6 + 12 | 0;
  i6 = HEAP32[i7 >> 2] | 0;
  i5 = __Znwj(12) | 0;
  HEAP32[i5 + 8 >> 2] = i3;
  HEAP32[i5 + 4 >> 2] = i6;
  i3 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = i3;
  HEAP32[i3 + 4 >> 2] = i5;
  HEAP32[i6 >> 2] = i5;
  i6 = i6 + 8 | 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
  d11 = +((_rand() | 0) % 10 | 0 | 0);
  HEAPF64[i1 >> 3] = d11;
  i1 = i7;
 } else i1 = i6 + 12 | 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i1 = HEAP32[i5 + 4 >> 2] | 0;
 if ((i1 | 0) == (i5 | 0)) {
  d11 = 0.0;
  return +d11;
 }
 i6 = i5 + 8 | 0;
 i7 = i1;
 d2 = 0.0;
 do {
  i3 = i7 + 8 | 0;
  i12 = HEAP32[i3 >> 2] | 0;
  d2 = d2 + +FUNCTION_TABLE_di[HEAP32[HEAP32[i12 >> 2] >> 2] & 31](i12);
  i3 = HEAP32[i3 >> 2] | 0;
  if (!(HEAP8[i3 + 4 >> 0] | 0)) i1 = HEAP32[i7 + 4 >> 2] | 0; else {
   if (i3) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 511](i3);
   i7 = i7 + 4 | 0;
   i12 = HEAP32[i7 >> 2] | 0;
   i3 = HEAP32[i1 >> 2] | 0;
   HEAP32[i3 + 4 >> 2] = i12;
   HEAP32[HEAP32[i7 >> 2] >> 2] = i3;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
   __ZdlPv(i1);
   i1 = i12;
  }
  i7 = i1;
 } while ((i7 | 0) != (i5 | 0));
 return +d2;
}

function __ZNSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEC2IS3_N10emscripten15smart_ptr_traitIS4_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISB_PS3_EE5valueENS4_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 23392;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(66, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEC2IS3_N10emscripten15smart_ptr_traitIS4_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISB_PS3_EE5valueENS4_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 23504;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(68, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEC2IS3_N10emscripten15smart_ptr_traitIS4_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISB_PS3_EE5valueENS4_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 23448;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(67, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22912;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(59, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI16maxiMFCCAnalyserIdEEC2IS2_N10emscripten15smart_ptr_traitIS3_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISA_PS2_EE5valueENS3_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 23132;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(62, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI14maxiDistortionEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 21920;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(37, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI13maxiDelaylineEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 20884;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(28, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI13maxiDCBlockerEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22184;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(40, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI10maxiLagExpIdEEC2IS2_N10emscripten15smart_ptr_traitIS3_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISA_PS2_EE5valueENS3_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 21216;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(31, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZN15maxiTimestretchI14hannWinFunctorE4playEddid(i12, d11, d9, i3, d10) {
 i12 = i12 | 0;
 d11 = +d11;
 d9 = +d9;
 i3 = i3 | 0;
 d10 = +d10;
 var i1 = 0, d2 = 0.0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, d8 = 0.0;
 d2 = +HEAPF64[i12 >> 3] + d11;
 HEAPF64[i12 >> 3] = d2;
 i4 = i12 + 32 | 0;
 d8 = +HEAPF64[i4 >> 3] + 1.0;
 HEAPF64[i4 >> 3] = d8;
 i5 = HEAP32[i12 + 8 >> 2] | 0;
 i6 = i5 + 108 | 0;
 d7 = +(HEAP32[i6 >> 2] | 0);
 if (d2 > d7) {
  d2 = d2 - d7;
  HEAPF64[i12 >> 3] = d2;
 }
 if (d2 < 0.0) {
  d2 = d2 + d7;
  HEAPF64[i12 >> 3] = d2;
 }
 i1 = i12 + 24 | 0;
 d7 = +(HEAP32[5083] | 0) * d9 / +(i3 | 0) + +HEAPF64[i1 >> 3];
 if (d8 > d7) {
  HEAPF64[i4 >> 3] = d8 - d7;
  i4 = __Znwj(104) | 0;
  d10 = d2 / +(HEAP32[i6 >> 2] | 0) + d10;
  d10 = d10 < 1.0 ? d10 : 1.0;
  __ZN9maxiGrainI14hannWinFunctorEC2EP10maxiSampledddP20maxiGrainWindowCacheIS0_E(i4, i5, d10 < 0.0 ? 0.0 : d10, d9, d11 > 0.0 ? 1.0 : -1.0, i12 + 16 | 0);
  i12 = i12 + 12 | 0;
  i6 = HEAP32[i12 >> 2] | 0;
  i5 = __Znwj(12) | 0;
  HEAP32[i5 + 8 >> 2] = i4;
  HEAP32[i5 + 4 >> 2] = i6;
  i4 = HEAP32[i6 >> 2] | 0;
  HEAP32[i5 >> 2] = i4;
  HEAP32[i4 + 4 >> 2] = i5;
  HEAP32[i6 >> 2] = i5;
  i6 = i6 + 8 | 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
  d11 = +((_rand() | 0) % 10 | 0 | 0);
  HEAPF64[i1 >> 3] = d11;
  i1 = i12;
 } else i1 = i12 + 12 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 if ((i1 | 0) == (i4 | 0)) {
  d11 = 0.0;
  return +d11;
 }
 i5 = i4 + 8 | 0;
 i6 = i1;
 d2 = 0.0;
 do {
  i3 = i6 + 8 | 0;
  i12 = HEAP32[i3 >> 2] | 0;
  d2 = d2 + +FUNCTION_TABLE_di[HEAP32[HEAP32[i12 >> 2] >> 2] & 31](i12);
  i3 = HEAP32[i3 >> 2] | 0;
  if (!(HEAP8[i3 + 4 >> 0] | 0)) i1 = HEAP32[i6 + 4 >> 2] | 0; else {
   if (i3) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 511](i3);
   i6 = i6 + 4 | 0;
   i12 = HEAP32[i6 >> 2] | 0;
   i3 = HEAP32[i1 >> 2] | 0;
   HEAP32[i3 + 4 >> 2] = i12;
   HEAP32[HEAP32[i6 >> 2] >> 2] = i3;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + -1;
   __ZdlPv(i1);
   i1 = i12;
  }
  i6 = i1;
 } while ((i6 | 0) != (i4 | 0));
 return +d2;
}

function __ZNSt3__110shared_ptrI12maxiEnvelopeEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 20792;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(27, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI11maxiFlangerEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22008;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(38, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI10maxiSampleEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 21312;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(32, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI10maxiFilterEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 20988;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(29, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI10maxiChorusEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22096;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(39, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI9maxiSnareEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22448;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(43, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI9maxiClockEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22624;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(45, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI8maxiKickEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22360;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(42, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI8maxiIFFTEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22968;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(60, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI8maxiHatsEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22536;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(44, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI7maxiSVFEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 22260;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(41, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI7maxiOscEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 20664;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(26, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI7maxiMixEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 21084;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(30, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI7maxiMapEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 21456;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(33, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI7maxiFFTEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 23024;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(61, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI7maxiEnvEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 21696;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(35, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI7maxiDynEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 21556;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(34, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function __ZNSt3__110shared_ptrI7convertEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE(i6, i5, i4, i1) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 HEAP32[i6 >> 2] = i5;
 __THREW__ = 0;
 i1 = invoke_ii(91, 20) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 do if (!(i2 & 1)) {
  i2 = HEAP32[i4 >> 2] | 0;
  __THREW__ = 0;
  invoke_vi(285, i2 | 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   __ZdlPv(i1);
   break;
  }
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = 21848;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i1 + 16 >> 2] = i2;
  HEAP32[i1 + 12 >> 2] = i5;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  }
  HEAP32[i6 + 4 >> 2] = i1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i7);
  } else return;
 } else i3 = ___cxa_find_matching_catch(0) | 0; while (0);
 ___cxa_begin_catch(i3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(36, i4 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (!(i7 & 1)) {
  __THREW__ = 0;
  invoke_v(2);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(3);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i7 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i7);
 } else ___resumeException(i1 | 0);
}

function ___stdio_write(i14, i2, i1) {
 i14 = i14 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i11 = i15 + 16 | 0;
 i10 = i15;
 i3 = i15 + 32 | 0;
 i12 = i14 + 28 | 0;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i3 >> 2] = i4;
 i13 = i14 + 20 | 0;
 i4 = (HEAP32[i13 >> 2] | 0) - i4 | 0;
 HEAP32[i3 + 4 >> 2] = i4;
 HEAP32[i3 + 8 >> 2] = i2;
 HEAP32[i3 + 12 >> 2] = i1;
 i8 = i14 + 60 | 0;
 i9 = i14 + 44 | 0;
 i2 = 2;
 i4 = i4 + i1 | 0;
 while (1) {
  if (!(HEAP32[5935] | 0)) {
   HEAP32[i11 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i11 + 4 >> 2] = i3;
   HEAP32[i11 + 8 >> 2] = i2;
   i6 = ___syscall_ret(___syscall146(146, i11 | 0) | 0) | 0;
  } else {
   _pthread_cleanup_push(310, i14 | 0);
   HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i10 + 4 >> 2] = i3;
   HEAP32[i10 + 8 >> 2] = i2;
   i6 = ___syscall_ret(___syscall146(146, i10 | 0) | 0) | 0;
   _pthread_cleanup_pop(0);
  }
  if ((i4 | 0) == (i6 | 0)) {
   i4 = 6;
   break;
  }
  if ((i6 | 0) < 0) {
   i4 = 8;
   break;
  }
  i4 = i4 - i6 | 0;
  i5 = HEAP32[i3 + 4 >> 2] | 0;
  if (i6 >>> 0 <= i5 >>> 0) if ((i2 | 0) == 2) {
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + i6;
   i7 = i5;
   i2 = 2;
  } else i7 = i5; else {
   i7 = HEAP32[i9 >> 2] | 0;
   HEAP32[i12 >> 2] = i7;
   HEAP32[i13 >> 2] = i7;
   i7 = HEAP32[i3 + 12 >> 2] | 0;
   i6 = i6 - i5 | 0;
   i3 = i3 + 8 | 0;
   i2 = i2 + -1 | 0;
  }
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i6;
  HEAP32[i3 + 4 >> 2] = i7 - i6;
 }
 if ((i4 | 0) == 6) {
  i11 = HEAP32[i9 >> 2] | 0;
  HEAP32[i14 + 16 >> 2] = i11 + (HEAP32[i14 + 48 >> 2] | 0);
  i14 = i11;
  HEAP32[i12 >> 2] = i14;
  HEAP32[i13 >> 2] = i14;
 } else if ((i4 | 0) == 8) {
  HEAP32[i14 + 16 >> 2] = 0;
  HEAP32[i12 >> 2] = 0;
  HEAP32[i13 >> 2] = 0;
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 32;
  if ((i2 | 0) == 2) i1 = 0; else i1 = i1 - (HEAP32[i3 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZN16maxiMFCCAnalyserIdE4mfccERNSt3__16vectorIfNS1_9allocatorIfEEEERNS2_IdNS3_IdEEEE(i13, i1, i10) {
 i13 = i13 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 var d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i12 = i13 + 4 | 0;
 i1 = HEAP32[i12 >> 2] | 0;
 if (i1) {
  i5 = HEAP32[i13 >> 2] | 0;
  i6 = HEAP32[i13 + 40 >> 2] | 0;
  if (!i6) {
   _memset(i5 | 0, 0, (i1 >>> 0 > 1 ? i1 << 3 : 8) | 0) | 0;
   i1 = HEAP32[i12 >> 2] | 0;
  } else {
   i7 = HEAP32[i13 + 36 >> 2] | 0;
   i9 = 0;
   do {
    i4 = i5 + (i9 << 3) | 0;
    HEAPF64[i4 >> 3] = 0.0;
    d2 = 0.0;
    i8 = 0;
    do {
     i11 = i7 + ((Math_imul(i8, i1) | 0) + i9 << 3) | 0;
     d2 = d2 + +HEAPF64[i11 >> 3] * +HEAPF32[i3 + (i8 << 2) >> 2];
     HEAPF64[i4 >> 3] = d2;
     i8 = i8 + 1 | 0;
    } while ((i8 | 0) != (i6 | 0));
    i9 = i9 + 1 | 0;
   } while ((i9 | 0) != (i1 | 0));
  }
  if (i1) {
   i3 = HEAP32[i13 >> 2] | 0;
   i5 = 0;
   do {
    i4 = i3 + (i5 << 3) | 0;
    d2 = +HEAPF64[i4 >> 3];
    if (d2 > 1.0e-06) d2 = +Math_log(+(d2 * d2)); else d2 = 0.0;
    HEAPF64[i4 >> 3] = d2;
    i5 = i5 + 1 | 0;
   } while ((i5 | 0) != (i1 | 0));
  }
 }
 i11 = HEAP32[i10 >> 2] | 0;
 i1 = i13 + 8 | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (!i3) return;
 _memset(i11 | 0, 0, (i3 >>> 0 > 1 ? i3 << 3 : 8) | 0) | 0;
 i10 = HEAP32[i1 >> 2] | 0;
 if (!i10) return;
 i1 = HEAP32[i12 >> 2] | 0;
 i3 = (i1 | 0) == 0;
 i4 = i13 + 44 | 0;
 i8 = 0;
 do {
  if (!i3) {
   i5 = HEAP32[i4 >> 2] | 0;
   i6 = HEAP32[i13 >> 2] | 0;
   i7 = i11 + (i8 << 3) | 0;
   d2 = +HEAPF64[i7 >> 3];
   i9 = 0;
   do {
    i12 = i5 + ((Math_imul(i9, i10) | 0) + i8 << 3) | 0;
    d2 = d2 + +HEAPF64[i12 >> 3] * +HEAPF64[i6 + (i9 << 3) >> 3];
    HEAPF64[i7 >> 3] = d2;
    i9 = i9 + 1 | 0;
   } while ((i9 | 0) != (i1 | 0));
  }
  i8 = i8 + 1 | 0;
 } while ((i8 | 0) != (i10 | 0));
 d2 = +(i10 >>> 0);
 i1 = 0;
 do {
  i13 = i11 + (i1 << 3) | 0;
  HEAPF64[i13 >> 3] = +HEAPF64[i13 >> 3] / d2;
  i1 = i1 + 1 | 0;
 } while ((i1 | 0) != (i10 | 0));
 return;
}

function __Z7RealFFTiPfS_S_(i4, i2, i13, i12) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i13 = i13 | 0;
 i12 = i12 | 0;
 var d1 = 0.0, i3 = 0, d5 = 0.0, d6 = 0.0, d7 = 0.0, d8 = 0.0, i9 = 0, i10 = 0, i11 = 0, i14 = 0, d15 = 0.0, d16 = 0.0, d17 = 0.0, d18 = 0.0, d19 = 0.0, i20 = 0, i21 = 0;
 i9 = (i4 | 0) / 2 | 0;
 d1 = 3.141592653589793 / +(i9 | 0);
 i11 = i9 << 2;
 i10 = _malloc(i11) | 0;
 i11 = _malloc(i11) | 0;
 if ((i4 | 0) > 1) {
  i3 = 0;
  do {
   i14 = i3 << 1;
   HEAP32[i10 + (i3 << 2) >> 2] = HEAP32[i2 + (i14 << 2) >> 2];
   HEAP32[i11 + (i3 << 2) >> 2] = HEAP32[i2 + ((i14 | 1) << 2) >> 2];
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) < (i9 | 0));
 }
 __Z3FFTibPfS_S_S_(i9, 0, i10, i11, i13, i12);
 d8 = d1;
 d7 = +Math_sin(+(d8 * .5));
 d7 = d7 * (d7 * -2.0);
 d8 = +Math_sin(+d8);
 i3 = (i4 | 0) / 4 | 0;
 if ((i4 | 0) <= 7) {
  d7 = +HEAPF32[i13 >> 2];
  d8 = +HEAPF32[i12 >> 2];
  d8 = d7 + d8;
  HEAPF32[i13 >> 2] = d8;
  d8 = +HEAPF32[i12 >> 2];
  d8 = d7 - d8;
  HEAPF32[i12 >> 2] = d8;
  _free(i10);
  _free(i11);
  return;
 }
 i2 = 1;
 d5 = d8;
 d6 = d7 + 1.0;
 while (1) {
  i14 = i9 - i2 | 0;
  i21 = i13 + (i2 << 2) | 0;
  d17 = +HEAPF32[i21 >> 2];
  i4 = i13 + (i14 << 2) | 0;
  d16 = +HEAPF32[i4 >> 2];
  d18 = (d17 + d16) * .5;
  i20 = i12 + (i2 << 2) | 0;
  d19 = +HEAPF32[i20 >> 2];
  i14 = i12 + (i14 << 2) | 0;
  d1 = +HEAPF32[i14 >> 2];
  d15 = (d19 - d1) * .5;
  d1 = (d19 + d1) * .5;
  d16 = (d17 - d16) * -.5;
  d17 = d6 * d1;
  d19 = d5 * d16;
  HEAPF32[i21 >> 2] = d18 + d17 - d19;
  d16 = d6 * d16;
  d1 = d5 * d1;
  HEAPF32[i20 >> 2] = d16 + d15 + d1;
  HEAPF32[i4 >> 2] = d19 + (d18 - d17);
  HEAPF32[i14 >> 2] = d16 - d15 + d1;
  d1 = d6 + (d7 * d6 - d8 * d5);
  i2 = i2 + 1 | 0;
  if ((i2 | 0) >= (i3 | 0)) break; else {
   d5 = d5 + (d7 * d5 + d8 * d6);
   d6 = d1;
  }
 }
 d18 = +HEAPF32[i13 >> 2];
 d19 = +HEAPF32[i12 >> 2];
 d19 = d18 + d19;
 HEAPF32[i13 >> 2] = d19;
 d19 = +HEAPF32[i12 >> 2];
 d19 = d18 - d19;
 HEAPF32[i12 >> 2] = d19;
 _free(i10);
 _free(i11);
 return;
}

function __ZN21maxiFFTOctaveAnalyzer9calculateERNSt3__16vectorIfNS0_9allocatorIfEEEE(i15, i1) {
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i13 = HEAP32[i15 + 4 >> 2] | 0;
 if ((i13 | 0) > 0) {
  i6 = HEAP32[i1 >> 2] | 0;
  i8 = i15 + 56 | 0;
  i9 = i15 + 52 | 0;
  i10 = HEAP32[i15 + 48 >> 2] | 0;
  i11 = i15 + 28 | 0;
  i4 = 0;
  i1 = 0;
  i12 = 0;
  d3 = 0.0;
  while (1) {
   i4 = i4 + 1 | 0;
   d3 = d3 + +HEAPF32[i6 + (i12 << 2) >> 2] * (+HEAPF32[i8 >> 2] + +(i12 | 0) * +HEAPF32[i9 >> 2]);
   i5 = HEAP32[i10 + (i12 << 2) >> 2] | 0;
   if ((i5 | 0) != (i1 | 0)) if ((i1 | 0) < (i5 | 0)) {
    d3 = d3 / +(i4 | 0);
    i2 = HEAP32[i11 >> 2] | 0;
    do {
     HEAPF32[i2 + (i1 << 2) >> 2] = d3;
     i1 = i1 + 1 | 0;
    } while ((i1 | 0) != (i5 | 0));
    i4 = 0;
    d3 = 0.0;
   } else {
    i4 = 0;
    d3 = 0.0;
   }
   i12 = i12 + 1 | 0;
   if ((i12 | 0) >= (i13 | 0)) break; else i1 = i5;
  }
  if ((i4 | 0) > 0) {
   i2 = i15 + 8 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if ((i5 | 0) < (i1 | 0)) HEAPF32[(HEAP32[i15 + 28 >> 2] | 0) + (i5 << 2) >> 2] = d3 / +(i4 | 0);
  } else i14 = 9;
 } else i14 = 9;
 if ((i14 | 0) == 9) {
  i1 = i15 + 8 | 0;
  i2 = i1;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 if ((i1 | 0) <= 0) return;
 i9 = HEAP32[i15 + 28 >> 2] | 0;
 i10 = HEAP32[i15 + 32 >> 2] | 0;
 i11 = i15 + 36 | 0;
 i12 = i15 + 44 | 0;
 i5 = i15 + 40 | 0;
 i8 = 0;
 do {
  d3 = +HEAPF32[i9 + (i8 << 2) >> 2];
  i6 = i10 + (i8 << 2) | 0;
  d7 = +HEAPF32[i6 >> 2];
  do if (!(d3 >= d7)) {
   i1 = (HEAP32[i11 >> 2] | 0) + (i8 << 2) | 0;
   i4 = HEAP32[i1 >> 2] | 0;
   if ((i4 | 0) > 0) {
    HEAP32[i1 >> 2] = i4 + -1;
    break;
   } else {
    HEAPF32[i6 >> 2] = d7 * +HEAPF32[i12 >> 2];
    break;
   }
  } else {
   HEAPF32[i6 >> 2] = d3;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i8 << 2) >> 2] = HEAP32[i5 >> 2];
  } while (0);
  i8 = i8 + 1 | 0;
 } while ((i8 | 0) < (HEAP32[i2 >> 2] | 0));
 return;
}

function __ZN9maxiSnare4playEv(i8) {
 i8 = i8 | 0;
 var d1 = 0.0, d2 = 0.0, i3 = 0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0;
 i7 = i8 + 232 | 0;
 d1 = +__ZN7maxiEnv4adsrEdi(i8 + 176 | 0, 1.0, HEAP32[i7 >> 2] | 0);
 i6 = i8 + 24 | 0;
 HEAPF64[i6 >> 3] = d1;
 if (HEAP8[i8 + 48 >> 0] | 0) {
  d1 = +Math_abs(+(1.0 - d1));
  HEAPF64[i6 >> 3] = d1;
 }
 d2 = +HEAPF64[i8 >> 3] * (d1 * .85 + .1);
 i3 = i8 + 88 | 0;
 d1 = +HEAPF64[i3 >> 3];
 if (d1 >= 1.0) {
  d1 = d1 + -1.0;
  HEAPF64[i3 >> 3] = d1;
 }
 d5 = d1 + 1.0 / (+(HEAP32[5083] | 0) / d2);
 HEAPF64[i3 >> 3] = d5;
 d5 = ((!(d5 <= .5) ? 1.0 - d5 : d5) + -.25) * 4.0;
 HEAPF64[i8 + 112 >> 3] = d5;
 d1 = +(_rand() | 0) * 4.656612873077393e-10 * 2.0 + -1.0;
 HEAPF64[i8 + 160 >> 3] = d1;
 d1 = +HEAPF64[i6 >> 3] * (d5 + d1);
 i6 = i8 + 8 | 0;
 HEAPF64[i6 >> 3] = d1;
 if ((HEAP32[i7 >> 2] | 0) == 1) HEAP32[i7 >> 2] = 0;
 if (HEAP8[i8 + 32 >> 0] | 0) {
  d5 = +HEAPF64[i8 + 40 >> 3];
  d1 = d1 * d5;
  d1 = 1.0 / (d5 / (d5 * d5 * .28 + 1.0)) * (d1 / (d1 * d1 * .28 + 1.0));
  HEAPF64[i6 >> 3] = d1;
 }
 if (HEAP8[i8 + 34 >> 0] | 0) {
  d2 = +HEAPF64[i8 + 56 >> 3];
  d4 = +HEAPF64[i8 + 64 >> 3];
  i3 = i8 + 496 | 0;
  d2 = d2 < 10.0 ? 10.0 : d2;
  HEAPF64[i3 >> 3] = d2;
  d5 = +(HEAP32[5083] | 0);
  if (d2 > d5) {
   HEAPF64[i3 >> 3] = d5;
   d2 = d5;
  }
  d2 = +Math_cos(+(d2 * 6.283185307179586 / d5));
  HEAPF64[i8 + 480 >> 3] = d2;
  d5 = 2.0 - d2 * 2.0;
  HEAPF64[i8 + 488 >> 3] = d5;
  d2 = d2 + -1.0;
  d4 = (d4 < 1.0 ? 1.0 : d4) * d2;
  d4 = (d4 + +Math_sqrt(+-+Math_pow(+d2, 3.0)) * 1.4142135623730951) / d4;
  i7 = i8 + 464 | 0;
  i3 = i8 + 472 | 0;
  d2 = +HEAPF64[i3 >> 3];
  d5 = +HEAPF64[i7 >> 3] + d5 * (d1 - d2);
  d1 = d2 + d5;
  HEAPF64[i3 >> 3] = d1;
  HEAPF64[i7 >> 3] = d4 * d5;
  HEAPF64[i8 + 288 >> 3] = d1;
  HEAPF64[i6 >> 3] = d1;
 }
 d1 = d1 * +HEAPF64[i8 + 72 >> 3];
 if (!(HEAP8[i8 + 33 >> 0] | 0)) {
  d5 = d1;
  return +d5;
 }
 if (d1 > 1.0) {
  d5 = 1.0;
  return +d5;
 }
 d5 = d1 < -1.0 ? -1.0 : d1;
 return +d5;
}

function __ZN14maxiPitchShiftI14hannWinFunctorE4playEddid(i6, d11, d9, i2, d10) {
 i6 = i6 | 0;
 d11 = +d11;
 d9 = +d9;
 i2 = i2 | 0;
 d10 = +d10;
 var d1 = 0.0, i3 = 0, i4 = 0, i5 = 0, d7 = 0.0, d8 = 0.0, i12 = 0;
 d1 = +HEAPF64[i6 >> 3] + 1.0;
 HEAPF64[i6 >> 3] = d1;
 i4 = i6 + 8 | 0;
 i3 = (HEAP32[i4 >> 2] | 0) + 1 | 0;
 HEAP32[i4 >> 2] = i3;
 i4 = HEAP32[i6 + 12 >> 2] | 0;
 i5 = i4 + 108 | 0;
 d7 = +(HEAP32[i5 >> 2] | 0);
 if (!(d1 > d7)) if (d1 < 0.0) {
  HEAPF64[i6 >> 3] = d7;
  d8 = d7;
 } else d8 = d1; else {
  HEAPF64[i6 >> 3] = 0.0;
  d8 = 0.0;
 }
 d7 = +(HEAP32[5083] | 0) * d9 / +(i2 | 0);
 d1 = +_fmod(+(i3 | 0), d7 + +HEAPF64[i6 + 32 >> 3]);
 if (+Math_floor(+d1) == 0.0) {
  i3 = __Znwj(104) | 0;
  d10 = d8 / +(HEAP32[i5 >> 2] | 0) + d10;
  d10 = d10 < 1.0 ? d10 : 1.0;
  __ZN9maxiGrainI14hannWinFunctorEC2EP10maxiSampledddP20maxiGrainWindowCacheIS0_E(i3, i4, d10 < 0.0 ? 0.0 : d10, d9, d11 - d1 / d7 * .1, i6 + 20 | 0);
  i4 = HEAP32[i6 + 16 >> 2] | 0;
  i6 = __Znwj(12) | 0;
  HEAP32[i6 + 8 >> 2] = i3;
  HEAP32[i6 + 4 >> 2] = i4;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i6 >> 2] = i5;
  HEAP32[i5 + 4 >> 2] = i6;
  HEAP32[i4 >> 2] = i6;
  i6 = i4 + 8 | 0;
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
 } else i4 = HEAP32[i6 + 16 >> 2] | 0;
 i2 = HEAP32[i4 + 4 >> 2] | 0;
 if ((i2 | 0) == (i4 | 0)) {
  d11 = 0.0;
  return +d11;
 }
 i5 = i4 + 8 | 0;
 i6 = i2;
 d1 = 0.0;
 do {
  i3 = i6 + 8 | 0;
  i12 = HEAP32[i3 >> 2] | 0;
  d1 = d1 + +FUNCTION_TABLE_di[HEAP32[HEAP32[i12 >> 2] >> 2] & 31](i12);
  i3 = HEAP32[i3 >> 2] | 0;
  if (!(HEAP8[i3 + 4 >> 0] | 0)) i2 = HEAP32[i6 + 4 >> 2] | 0; else {
   if (i3) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 511](i3);
   i6 = i6 + 4 | 0;
   i12 = HEAP32[i6 >> 2] | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   HEAP32[i3 + 4 >> 2] = i12;
   HEAP32[HEAP32[i6 >> 2] >> 2] = i3;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + -1;
   __ZdlPv(i2);
   i2 = i12;
  }
  i6 = i2;
 } while ((i6 | 0) != (i4 | 0));
 return +d1;
}

function __ZN7maxiFFT7processEf(i14, d1) {
 i14 = i14 | 0;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, d15 = 0.0;
 i12 = i14 + 52 | 0;
 i10 = HEAP32[i12 >> 2] | 0;
 i9 = i10 + 1 | 0;
 HEAP32[i12 >> 2] = i9;
 i13 = i14 + 44 | 0;
 i7 = HEAP32[i13 >> 2] | 0;
 HEAPF32[i7 + (i10 << 2) >> 2] = d1;
 i10 = i14 + 32 | 0;
 i9 = (i9 | 0) == (HEAP32[i10 >> 2] | 0);
 i11 = i14 + 68 | 0;
 i2 = i9 & 1;
 HEAP8[i11 >> 0] = i2;
 if (!i9) {
  i14 = i2;
  i14 = i14 << 24 >> 24 != 0;
  return i14 | 0;
 }
 i4 = HEAP32[i14 + 64 >> 2] | 0;
 i2 = HEAP32[i14 + 48 >> 2] | 0;
 i8 = HEAP32[i14 + 4 >> 2] | 0;
 i9 = HEAP32[i14 + 16 >> 2] | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = HEAP32[i4 + 8 >> 2] | 0;
 if ((i5 | 0) > 0) {
  i3 = 0;
  do {
   HEAPF32[i6 + (i3 << 2) >> 2] = +HEAPF32[i7 + (i3 << 2) >> 2] * +HEAPF32[i2 + (i3 << 2) >> 2];
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i5 | 0));
 }
 i2 = i4 + 12 | 0;
 i3 = i4 + 20 | 0;
 __Z7RealFFTiPfS_S_(i5, i6, HEAP32[i2 >> 2] | 0, HEAP32[i3 >> 2] | 0);
 i5 = HEAP32[i4 + 4 >> 2] | 0;
 if ((i5 | 0) > 0) {
  i4 = HEAP32[i2 >> 2] | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  i3 = 0;
  do {
   i7 = i4 + (i3 << 2) | 0;
   d15 = +HEAPF32[i7 >> 2];
   i6 = i2 + (i3 << 2) | 0;
   d1 = +HEAPF32[i6 >> 2];
   d1 = +Math_sqrt(+(d15 * d15 + d1 * d1));
   HEAPF32[i8 + (i3 << 2) >> 2] = d1;
   d1 = +Math_atan2(+(+HEAPF32[i6 >> 2]), +(+HEAPF32[i7 >> 2]));
   HEAPF32[i9 + (i3 << 2) >> 2] = d1;
   i3 = i3 + 1 | 0;
  } while ((i3 | 0) != (i5 | 0));
 }
 i8 = HEAP32[i13 >> 2] | 0;
 i14 = i14 + 36 | 0;
 i9 = HEAP32[i14 >> 2] | 0;
 _memcpy(i8 | 0, i8 + (i9 << 2) | 0, (HEAP32[i10 >> 2] | 0) - i9 << 2 | 0) | 0;
 i9 = HEAP32[i14 >> 2] | 0;
 _memset((HEAP32[i13 >> 2] | 0) + ((HEAP32[i10 >> 2] | 0) - i9 << 2) | 0, 0, i9 << 2 | 0) | 0;
 HEAP32[i12 >> 2] = (HEAP32[i10 >> 2] | 0) - (HEAP32[i14 >> 2] | 0);
 i14 = HEAP8[i11 >> 0] | 0;
 i14 = i14 << 24 >> 24 != 0;
 return i14 | 0;
}

function __ZN7maxiEnv4adsrEdi(i10, d9, i8) {
 i10 = i10 | 0;
 d9 = +d9;
 i8 = i8 | 0;
 var i1 = 0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = (i8 | 0) == 1;
 i1 = i10 + 68 | 0;
 i4 = (HEAP32[i1 >> 2] | 0) == 1;
 if (i7) if (!i4) {
  if ((HEAP32[i10 + 80 >> 2] | 0) != 1 ? (i5 = i10 + 72 | 0, (HEAP32[i5 >> 2] | 0) != 1) : 0) {
   HEAP32[i10 + 64 >> 2] = 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i10 + 76 >> 2] = 0;
   HEAP32[i10 + 84 >> 2] = 0;
   HEAP32[i1 >> 2] = 1;
   i6 = 7;
  }
 } else i6 = 7; else if (i4) i6 = 7;
 if ((i6 | 0) == 7 ? (HEAP32[i10 + 84 >> 2] = 0, i3 = i10 + 48 | 0, d2 = +HEAPF64[i10 + 16 >> 3] + +HEAPF64[i3 >> 3], HEAPF64[i3 >> 3] = d2, HEAPF64[i10 + 8 >> 3] = d2 * d9, d2 >= 1.0) : 0) {
  HEAPF64[i3 >> 3] = 1.0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i10 + 72 >> 2] = 1;
 }
 i1 = i10 + 72 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 1 ? (i6 = i10 + 48 | 0, d2 = +HEAPF64[i10 + 24 >> 3] * +HEAPF64[i6 >> 3], HEAPF64[i6 >> 3] = d2, HEAPF64[i10 + 8 >> 3] = d2 * d9, d2 <= +HEAPF64[i10 + 32 >> 3]) : 0) {
  HEAP32[i1 >> 2] = 0;
  HEAP32[i10 + 80 >> 2] = 1;
 }
 i3 = i10 + 64 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 i4 = HEAP32[i10 + 60 >> 2] | 0;
 if ((i1 | 0) < (i4 | 0) ? (HEAP32[i10 + 80 >> 2] | 0) == 1 : 0) {
  HEAPF64[i10 + 8 >> 3] = +HEAPF64[i10 + 48 >> 3] * d9;
  i1 = i1 + 1 | 0;
  HEAP32[i3 >> 2] = i1;
 }
 i1 = (i1 | 0) >= (i4 | 0);
 if (i7 & i1) HEAPF64[i10 + 8 >> 3] = +HEAPF64[i10 + 48 >> 3] * d9;
 if (!((i8 | 0) != 1 & i1)) {
  if ((HEAP32[i10 + 84 >> 2] | 0) != 1) {
   i10 = i10 + 8 | 0;
   d9 = +HEAPF64[i10 >> 3];
   return +d9;
  }
 } else {
  HEAP32[i10 + 80 >> 2] = 0;
  HEAP32[i10 + 84 >> 2] = 1;
 }
 i1 = i10 + 48 | 0;
 d2 = +HEAPF64[i1 >> 3];
 if (!(d2 > 0.0)) {
  i10 = i10 + 8 | 0;
  d9 = +HEAPF64[i10 >> 3];
  return +d9;
 }
 d2 = d2 * +HEAPF64[i10 + 40 >> 3];
 HEAPF64[i1 >> 3] = d2;
 HEAPF64[i10 + 8 >> 3] = d2 * d9;
 i10 = i10 + 8 | 0;
 d9 = +HEAPF64[i10 >> 3];
 return +d9;
}

function __ZN7maxiEnv4adsrEdddddli(i14, d12, d2, d7, d8, d13, i9, i11) {
 i14 = i14 | 0;
 d12 = +d12;
 d2 = +d2;
 d7 = +d7;
 d8 = +d8;
 d13 = +d13;
 i9 = i9 | 0;
 i11 = i11 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0;
 i10 = (i11 | 0) == 1;
 i1 = i14 + 68 | 0;
 i4 = (HEAP32[i1 >> 2] | 0) == 1;
 if (i10) if (!i4) {
  if ((HEAP32[i14 + 80 >> 2] | 0) != 1 ? (i5 = i14 + 72 | 0, (HEAP32[i5 >> 2] | 0) != 1) : 0) {
   HEAP32[i14 + 64 >> 2] = 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i14 + 76 >> 2] = 0;
   HEAP32[i14 + 84 >> 2] = 0;
   HEAP32[i1 >> 2] = 1;
   i6 = 7;
  }
 } else i6 = 7; else if (i4) i6 = 7;
 if ((i6 | 0) == 7 ? (HEAP32[i14 + 84 >> 2] = 0, i3 = i14 + 48 | 0, d2 = +HEAPF64[i3 >> 3] + d2, HEAPF64[i3 >> 3] = d2, HEAPF64[i14 + 8 >> 3] = d2 * d12, d2 >= 1.0) : 0) {
  HEAPF64[i3 >> 3] = 1.0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i14 + 72 >> 2] = 1;
 }
 i1 = i14 + 72 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 1 ? (i6 = i14 + 48 | 0, d7 = +HEAPF64[i6 >> 3] * d7, HEAPF64[i6 >> 3] = d7, HEAPF64[i14 + 8 >> 3] = d7 * d12, d7 <= d8) : 0) {
  HEAP32[i1 >> 2] = 0;
  HEAP32[i14 + 80 >> 2] = 1;
 }
 i3 = i14 + 64 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i1 | 0) < (i9 | 0) ? (HEAP32[i14 + 80 >> 2] | 0) == 1 : 0) {
  HEAPF64[i14 + 8 >> 3] = +HEAPF64[i14 + 48 >> 3] * d12;
  i1 = i1 + 1 | 0;
  HEAP32[i3 >> 2] = i1;
 }
 i1 = (i1 | 0) >= (i9 | 0);
 if (i10 & i1) HEAPF64[i14 + 8 >> 3] = +HEAPF64[i14 + 48 >> 3] * d12;
 if (!((i11 | 0) != 1 & i1)) {
  if ((HEAP32[i14 + 84 >> 2] | 0) != 1) {
   i14 = i14 + 8 | 0;
   d13 = +HEAPF64[i14 >> 3];
   return +d13;
  }
 } else {
  HEAP32[i14 + 80 >> 2] = 0;
  HEAP32[i14 + 84 >> 2] = 1;
 }
 i1 = i14 + 48 | 0;
 d2 = +HEAPF64[i1 >> 3];
 if (!(d2 > 0.0)) {
  i14 = i14 + 8 | 0;
  d13 = +HEAPF64[i14 >> 3];
  return +d13;
 }
 d13 = d2 * d13;
 HEAPF64[i1 >> 3] = d13;
 HEAPF64[i14 + 8 >> 3] = d13 * d12;
 i14 = i14 + 8 | 0;
 d13 = +HEAPF64[i14 >> 3];
 return +d13;
}

function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(i1) {
 i1 = i1 | 0;
 __embind_register_void(16048, 37796);
 __embind_register_bool(16064, 37801, 1, 1, 0);
 __embind_register_integer(16072, 37806, 1, -128, 127);
 __embind_register_integer(16088, 37811, 1, -128, 127);
 __embind_register_integer(16080, 37823, 1, 0, 255);
 __embind_register_integer(16096, 37837, 2, -32768, 32767);
 __embind_register_integer(16104, 37843, 2, 0, 65535);
 __embind_register_integer(16112, 37858, 4, -2147483648, 2147483647);
 __embind_register_integer(16120, 37862, 4, 0, -1);
 __embind_register_integer(16128, 37875, 4, -2147483648, 2147483647);
 __embind_register_integer(16136, 37880, 4, 0, -1);
 __embind_register_float(16144, 37894, 4);
 __embind_register_float(16152, 37900, 8);
 __embind_register_std_string(15760, 37907);
 __embind_register_std_string(15784, 37919);
 __embind_register_std_wstring(15808, 4, 37952);
 __embind_register_emval(13248, 37965);
 __embind_register_memory_view(15832, 0, 37981);
 __embind_register_memory_view(15840, 0, 38011);
 __embind_register_memory_view(15848, 1, 38048);
 __embind_register_memory_view(15856, 2, 38087);
 __embind_register_memory_view(15864, 3, 38118);
 __embind_register_memory_view(15872, 4, 38158);
 __embind_register_memory_view(15880, 5, 38187);
 __embind_register_memory_view(15888, 4, 38225);
 __embind_register_memory_view(15896, 5, 38255);
 __embind_register_memory_view(15840, 0, 38294);
 __embind_register_memory_view(15848, 1, 38326);
 __embind_register_memory_view(15856, 2, 38359);
 __embind_register_memory_view(15864, 3, 38392);
 __embind_register_memory_view(15872, 4, 38426);
 __embind_register_memory_view(15880, 5, 38459);
 __embind_register_memory_view(15904, 6, 38493);
 __embind_register_memory_view(15912, 7, 38524);
 __embind_register_memory_view(15920, 7, 38556);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEE5shareEPS5_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(37, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEE5shareEPS5_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(35, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEE5shareEPS5_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(36, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN8maxiKick4playEv(i8) {
 i8 = i8 | 0;
 var d1 = 0.0, i2 = 0, d3 = 0.0, d4 = 0.0, d5 = 0.0, i6 = 0, i7 = 0;
 i7 = i8 + 184 | 0;
 d1 = +__ZN7maxiEnv4adsrEdi(i8 + 128 | 0, 1.0, HEAP32[i7 >> 2] | 0);
 i2 = i8 + 24 | 0;
 HEAPF64[i2 >> 3] = d1;
 if (HEAP8[i8 + 48 >> 0] | 0) {
  d1 = +Math_abs(+(1.0 - d1));
  HEAPF64[i2 >> 3] = d1;
 }
 d4 = +HEAPF64[i8 >> 3] * d1;
 i2 = i8 + 88 | 0;
 d3 = +HEAPF64[i2 >> 3];
 d5 = +Math_sin(+(d3 * 6.283185307179586));
 HEAPF64[i8 + 112 >> 3] = d5;
 if (d3 >= 1.0) {
  d3 = d3 + -1.0;
  HEAPF64[i2 >> 3] = d3;
 }
 HEAPF64[i2 >> 3] = d3 + 1.0 / (+(HEAP32[5083] | 0) / d4);
 d1 = d5 * d1;
 i6 = i8 + 8 | 0;
 HEAPF64[i6 >> 3] = d1;
 if ((HEAP32[i7 >> 2] | 0) == 1) HEAP32[i7 >> 2] = 0;
 if (HEAP8[i8 + 32 >> 0] | 0) {
  d5 = +HEAPF64[i8 + 40 >> 3];
  d1 = d1 * d5;
  d1 = 1.0 / (d5 / (d5 * d5 * .28 + 1.0)) * (d1 / (d1 * d1 * .28 + 1.0));
  HEAPF64[i6 >> 3] = d1;
 }
 if (HEAP8[i8 + 34 >> 0] | 0) {
  d3 = +HEAPF64[i8 + 56 >> 3];
  d4 = +HEAPF64[i8 + 64 >> 3];
  i2 = i8 + 448 | 0;
  d3 = d3 < 10.0 ? 10.0 : d3;
  HEAPF64[i2 >> 3] = d3;
  d5 = +(HEAP32[5083] | 0);
  if (d3 > d5) {
   HEAPF64[i2 >> 3] = d5;
   d3 = d5;
  }
  d3 = +Math_cos(+(d3 * 6.283185307179586 / d5));
  HEAPF64[i8 + 432 >> 3] = d3;
  d5 = 2.0 - d3 * 2.0;
  HEAPF64[i8 + 440 >> 3] = d5;
  d3 = d3 + -1.0;
  d4 = (d4 < 1.0 ? 1.0 : d4) * d3;
  d4 = (d4 + +Math_sqrt(+-+Math_pow(+d3, 3.0)) * 1.4142135623730951) / d4;
  i7 = i8 + 416 | 0;
  i2 = i8 + 424 | 0;
  d3 = +HEAPF64[i2 >> 3];
  d5 = +HEAPF64[i7 >> 3] + d5 * (d1 - d3);
  d1 = d3 + d5;
  HEAPF64[i2 >> 3] = d1;
  HEAPF64[i7 >> 3] = d4 * d5;
  HEAPF64[i8 + 240 >> 3] = d1;
  HEAPF64[i6 >> 3] = d1;
 }
 d1 = d1 * +HEAPF64[i8 + 72 >> 3];
 if (!(HEAP8[i8 + 33 >> 0] | 0)) {
  d5 = d1;
  return +d5;
 }
 if (d1 > 1.0) {
  d5 = 1.0;
  return +d5;
 }
 d5 = d1 < -1.0 ? -1.0 : d1;
 return +d5;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(32, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEE5shareEPS4_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(34, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiDistortionEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(19, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDelaylineEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(10, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDCBlockerEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(22, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiLagExpIdEEEE5shareEPS4_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(13, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN8maxiHats4playEv(i4) {
 i4 = i4 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, d5 = 0.0, i6 = 0, d7 = 0.0, d8 = 0.0, d9 = 0.0, i10 = 0;
 i3 = i4 + 232 | 0;
 d1 = +__ZN7maxiEnv4adsrEdi(i4 + 176 | 0, 1.0, HEAP32[i3 >> 2] | 0);
 i2 = i4 + 24 | 0;
 HEAPF64[i2 >> 3] = d1;
 if (HEAP8[i4 + 48 >> 0] | 0) {
  d1 = +Math_abs(+(1.0 - d1));
  HEAPF64[i2 >> 3] = d1;
 }
 i6 = i4 + 88 | 0;
 d1 = 512.0 / (+(HEAP32[5083] | 0) / (+HEAPF64[i4 >> 3] * +HEAPF32[5082])) + +HEAPF64[i6 >> 3];
 d1 = !(d1 >= 511.0) ? d1 : d1 + -512.0;
 HEAPF64[i6 >> 3] = d1;
 d5 = d1 - +Math_floor(+d1);
 i6 = ~~d1;
 d5 = +HEAPF64[8 + (i6 + 2 << 3) >> 3] * d5 + +HEAPF64[8 + (i6 + 1 << 3) >> 3] * (1.0 - d5);
 HEAPF64[i4 + 112 >> 3] = d5;
 d1 = +(_rand() | 0) * 4.656612873077393e-10 * 2.0 + -1.0;
 HEAPF64[i4 + 160 >> 3] = d1;
 d1 = +HEAPF64[i2 >> 3] * (d5 + d1);
 i2 = i4 + 8 | 0;
 HEAPF64[i2 >> 3] = d1;
 if ((HEAP32[i3 >> 2] | 0) == 1) HEAP32[i3 >> 2] = 0;
 if (HEAP8[i4 + 32 >> 0] | 0) {
  d5 = +HEAPF64[i4 + 40 >> 3];
  d1 = d1 * d5;
  d1 = 1.0 / (d5 / (d5 * d5 * .28 + 1.0)) * (d1 / (d1 * d1 * .28 + 1.0));
  HEAPF64[i2 >> 3] = d1;
 }
 if (HEAP8[i4 + 34 >> 0] | 0) {
  i10 = i4 + 280 | 0;
  d5 = +HEAPF64[i10 >> 3];
  i3 = i4 + 288 | 0;
  d9 = +HEAPF64[i3 >> 3];
  i6 = i4 + 272 | 0;
  d8 = d1 + +HEAPF64[i6 >> 3] - d9 * 2.0;
  d7 = d5 + (+HEAPF64[i4 + 328 >> 3] * d8 - d5 * +HEAPF64[i4 + 336 >> 3]);
  HEAPF64[i10 >> 3] = d7;
  d5 = d9 + (d8 * +HEAPF64[i4 + 344 >> 3] + d5 * +HEAPF64[i4 + 352 >> 3]);
  HEAPF64[i3 >> 3] = d5;
  HEAPF64[i6 >> 3] = d1;
  d1 = d1 - d7 * +HEAPF64[i4 + 312 >> 3];
  d1 = d1 * 0.0 + (d1 - d5 + (d7 * 0.0 + d5 * 0.0));
  HEAPF64[i2 >> 3] = d1;
 }
 d1 = d1 * +HEAPF64[i4 + 72 >> 3];
 if (!(HEAP8[i4 + 33 >> 0] | 0)) {
  d9 = d1;
  return +d9;
 }
 if (d1 > 1.0) {
  d9 = 1.0;
  return +d9;
 }
 d9 = d1 < -1.0 ? -1.0 : d1;
 return +d9;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI12maxiEnvelopeEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(9, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI11maxiFlangerEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(20, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiSampleEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(14, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiFilterEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(11, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiChorusEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(21, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiSnareEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(25, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiClockEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(27, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiKickEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(24, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiIFFTEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(31, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiHatsEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(26, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiSVFEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(23, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMixEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(12, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMapEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(15, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiFFTEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(30, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiEnvEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(17, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiDynEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(16, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7convertEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(18, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiOscEEE5shareEPS3_PNS_8internal7_EM_VALE(i4, i8) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i1 = i10;
 i6 = i10 + 12 | 0;
 i2 = i10 + 8 | 0;
 i7 = __Znwj(8) | 0;
 __THREW__ = 0;
 invoke_vi(285, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 do if (!(i11 & 1) ? (HEAP32[i1 >> 2] = i8, __THREW__ = 0, i3 = invoke_iii(64, 13248, i1 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  HEAP32[i6 >> 2] = i3;
  HEAP32[i2 >> 2] = 0;
  __THREW__ = 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  invoke_viiii(8, i7 | 0, i4 | 0, i6 | 0, i1 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch() | 0;
   __THREW__ = 0;
   invoke_vi(286, HEAP32[i6 >> 2] | 0);
   i11 = __THREW__;
   __THREW__ = 0;
   if (!(i11 & 1)) {
    i5 = i1;
    break;
   }
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, HEAP32[i6 >> 2] | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  }
  __THREW__ = 0;
  invoke_vi(286, i8 | 0);
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i11 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i11);
  } else {
   STACKTOP = i10;
   return i7 | 0;
  }
 } else i9 = 9; while (0);
 if ((i9 | 0) == 9) i5 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_vi(286, i8 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i11);
 } else {
  __ZdlPv(i7);
  ___resumeException(i5 | 0);
 }
 return 0;
}

function __ZN10maxiChorus6chorusEdjddd(i10, d9, i3, d8, d2, d6) {
 i10 = i10 | 0;
 d9 = +d9;
 i3 = i3 | 0;
 d8 = +d8;
 d2 = +d2;
 d6 = +d6;
 var i1 = 0, d4 = 0.0, d5 = 0.0, d7 = 0.0, i11 = 0;
 d5 = +(_rand() | 0) * 4.656612873077393e-10 * 2.0 + -1.0;
 HEAPF64[i10 + 1411312 >> 3] = d5;
 i1 = i10 + 1411552 | 0;
 d2 = d2 < 10.0 ? 10.0 : d2;
 HEAPF64[i1 >> 3] = d2;
 d4 = +(HEAP32[5083] | 0);
 if (d2 > d4) {
  HEAPF64[i1 >> 3] = d4;
  d2 = d4;
 }
 d4 = +Math_cos(+(d2 * 6.283185307179586 / d4));
 HEAPF64[i10 + 1411536 >> 3] = d4;
 d7 = 2.0 - d4 * 2.0;
 HEAPF64[i10 + 1411544 >> 3] = d7;
 d4 = d4 + -1.0;
 d4 = (d4 + +Math_sqrt(+-+Math_pow(+d4, 3.0)) * 1.4142135623730951) / d4;
 i1 = i10 + 1411520 | 0;
 i11 = i10 + 1411528 | 0;
 d2 = +HEAPF64[i11 >> 3];
 d7 = +HEAPF64[i1 >> 3] + d7 * (d5 - d2);
 d5 = d2 + d7;
 HEAPF64[i11 >> 3] = d5;
 HEAPF64[i1 >> 3] = d4 * d7;
 HEAPF64[i10 + 1411344 >> 3] = d5;
 d7 = +(i3 >>> 0);
 d5 = d7 * (d5 * 2.0 * d6);
 i3 = i10 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i1 | 0) >= (~~(d7 + d5 + 1.0) | 0)) {
  HEAP32[i3 >> 2] = 0;
  i1 = 0;
 }
 i11 = i10 + 40 + (i1 << 3) | 0;
 i1 = i10 + 32 | 0;
 HEAPF64[i1 >> 3] = +HEAPF64[i11 >> 3];
 HEAPF64[i11 >> 3] = d9 * d8 * .5 + +HEAPF64[i11 >> 3] * d8;
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 d4 = +HEAPF64[i1 >> 3];
 d2 = d8 * .99;
 i3 = i10 + 705648 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i1 | 0) >= (~~((d7 + d5 * 1.02 + 1.0) * .98) | 0)) {
  HEAP32[i3 >> 2] = 0;
  i1 = 0;
 }
 i1 = i10 + 705680 + (i1 << 3) | 0;
 i11 = i10 + 705672 | 0;
 HEAPF64[i11 >> 3] = +HEAPF64[i1 >> 3];
 HEAPF64[i1 >> 3] = d2 * d9 * .5 + d2 * +HEAPF64[i1 >> 3];
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 d8 = +HEAPF64[i11 >> 3];
 return +((d4 * (1.0 - +Math_abs(+d4)) + d8 * (1.0 - +Math_abs(+d8)) + d9) / 3.0);
}

function _log10(d1) {
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i3 = HEAP32[tempDoublePtr >> 2] | 0;
 i2 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i4 = (i2 | 0) < 0;
 do if (i4 | i2 >>> 0 < 1048576) {
  if ((i3 | 0) == 0 & (i2 & 2147483647 | 0) == 0) {
   d1 = -1.0 / (d1 * d1);
   break;
  }
  if (i4) {
   d1 = (d1 - d1) / 0.0;
   break;
  } else {
   HEAPF64[tempDoublePtr >> 3] = d1 * 18014398509481984.0;
   i2 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
   i4 = HEAP32[tempDoublePtr >> 2] | 0;
   i3 = -1077;
   i5 = 9;
   break;
  }
 } else if (i2 >>> 0 <= 2146435071) if ((i3 | 0) == 0 & 0 == 0 & (i2 | 0) == 1072693248) d1 = 0.0; else {
  i4 = i3;
  i3 = -1023;
  i5 = 9;
 } while (0);
 if ((i5 | 0) == 9) {
  i5 = i2 + 614242 | 0;
  HEAP32[tempDoublePtr >> 2] = i4;
  HEAP32[tempDoublePtr + 4 >> 2] = (i5 & 1048575) + 1072079006;
  d10 = +HEAPF64[tempDoublePtr >> 3] + -1.0;
  d1 = d10 * (d10 * .5);
  d8 = d10 / (d10 + 2.0);
  d9 = d8 * d8;
  d7 = d9 * d9;
  HEAPF64[tempDoublePtr >> 3] = d10 - d1;
  i4 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  HEAP32[tempDoublePtr >> 2] = 0;
  HEAP32[tempDoublePtr + 4 >> 2] = i4;
  d6 = +HEAPF64[tempDoublePtr >> 3];
  d1 = d8 * (d1 + (d7 * (d7 * (d7 * .15313837699209373 + .22222198432149784) + .3999999999940942) + d9 * (d7 * (d7 * (d7 * .14798198605116586 + .1818357216161805) + .2857142874366239) + .6666666666666735))) + (d10 - d6 - d1);
  d10 = d6 * .4342944818781689;
  d7 = +(i3 + (i5 >>> 20) | 0);
  d9 = d7 * .30102999566361177;
  d8 = d9 + d10;
  d1 = d8 + (d10 + (d9 - d8) + (d1 * .4342944818781689 + (d7 * 3.694239077158931e-13 + (d6 + d1) * 2.5082946711645275e-11)));
 }
 return +d1;
}

function __ZN16maxiMFCCAnalyserIdE17calcMelFilterBankEdi(i11, d5, i16) {
 i11 = i11 | 0;
 d5 = +d5;
 i16 = i16 | 0;
 var d1 = 0.0, i2 = 0, d3 = 0.0, i4 = 0, d6 = 0.0, d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 d1 = d5 * .5;
 i2 = i11 + 24 | 0;
 d3 = +HEAPF64[i2 >> 3];
 if (d3 > d1) HEAPF64[i2 >> 3] = d1; else d1 = d3;
 d3 = +_log10(d1 / 700.0 + 1.0) * 2595.0;
 d1 = +_log10(+HEAPF64[i11 + 16 >> 3] / 700.0 + 1.0) * 2595.0;
 i14 = HEAP32[i11 + 4 >> 2] | 0;
 d3 = (d3 - d1) / +((i14 + 1 | 0) >>> 0);
 i15 = _malloc((i14 << 3) + 16 | 0) | 0;
 if ((i14 | 0) == -2) i2 = -2; else {
  i2 = i14 + 2 | 0;
  i4 = 0;
  while (1) {
   d10 = (+Math_pow(10.0, +(d1 / 2595.0)) + -1.0) * 700.0;
   HEAPF64[i15 + (i4 << 3) >> 3] = d10;
   i4 = i4 + 1 | 0;
   if (i4 >>> 0 >= i2 >>> 0) {
    i2 = i14;
    break;
   } else d1 = d3 + d1;
  }
 }
 i13 = _malloc(Math_imul(i16 << 3, i2) | 0) | 0;
 HEAP32[i11 + 36 >> 2] = i13;
 if (i14 >>> 0 <= 1) return;
 d1 = d5 / +(i16 | 0);
 if ((i16 | 0) > 0) i11 = 1; else return;
 do {
  d7 = +HEAPF64[i15 + (i11 << 3) >> 3];
  i12 = i11;
  i11 = i11 + 1 | 0;
  d5 = +HEAPF64[i15 + (i11 << 3) >> 3];
  d6 = +HEAPF64[i15 + (i12 + -1 << 3) >> 3];
  d9 = 2.0 / (d5 - d6);
  d10 = d9 / (d7 - d6);
  d8 = -d9 / (d5 - d7);
  i4 = 0;
  do {
   d3 = +(i4 | 0) * d1;
   i2 = (Math_imul(i14, i4) | 0) + i12 | 0;
   do if (!(d3 > d5 | d3 < d6)) if (d3 < d7) {
    HEAPF64[i13 + (i2 << 3) >> 3] = (d3 - d6) * d10;
    break;
   } else {
    HEAPF64[i13 + (i2 << 3) >> 3] = d9 + (d3 - d7) * d8;
    break;
   } else HEAPF64[i13 + (i2 << 3) >> 3] = 0.0; while (0);
   i4 = i4 + 1 | 0;
  } while ((i4 | 0) != (i16 | 0));
 } while (i11 >>> 0 < i14 >>> 0);
 return;
}

function __ZN10maxiSample5play4Eddd(i7, d3, d5, d6) {
 i7 = i7 | 0;
 d3 = +d3;
 d5 = +d5;
 d6 = +d6;
 var d1 = 0.0, i2 = 0, i4 = 0, d8 = 0.0, d9 = 0.0, d10 = 0.0, i11 = 0;
 i2 = i7 + 40 | 0;
 d1 = +HEAPF64[i2 >> 3];
 if (!(d3 > 0.0)) {
  if (d1 <= d5) {
   HEAPF64[i2 >> 3] = d6;
   d1 = d6;
  }
  d10 = d1 - (d6 - d5) / (+(HEAP32[5083] | 0) / -(+HEAPF32[5082] * d3));
  HEAPF64[i2 >> 3] = d10;
  d9 = d10 - +Math_floor(+d10);
  i11 = d10 > d5;
  i4 = HEAP32[i7 + 128 >> 2] | 0;
  i2 = ~~d10;
  d3 = +(HEAP16[(i11 & d10 < d6 + -1.0 ? i4 + (i2 + 1 << 1) | 0 : i4) >> 1] | 0);
  d8 = +(HEAP16[i4 + (i2 << 1) >> 1] | 0);
  d1 = +(HEAP16[(i11 ? i4 + (i2 + -1 << 1) | 0 : i4) >> 1] | 0);
  d5 = +(HEAP16[(d10 > d5 + 1.0 ? i4 + (i2 + -2 << 1) | 0 : i4) >> 1] | 0);
  d6 = -d9;
  d6 = (d8 + ((d1 - d3) * .5 + (d3 - d8 * 2.5 + d1 * 2.0 - d5 * .5 + d9 * ((d8 - d1) * 1.5 + (d5 - d3) * .5)) * d6) * d6) / 32767.0;
  HEAPF64[i7 + 64 >> 3] = d6;
  return +d6;
 }
 if (d1 < d5) {
  HEAPF64[i2 >> 3] = d5;
  d1 = d5;
 }
 if (d1 >= d6) {
  HEAPF64[i2 >> 3] = d5;
  d1 = d5;
 }
 d5 = (d6 - d5) / (+(HEAP32[5083] | 0) / (+HEAPF32[5082] * d3)) + d1;
 HEAPF64[i2 >> 3] = d5;
 d1 = +Math_floor(+d5);
 d3 = d5 - d1;
 i4 = HEAP32[i7 + 128 >> 2] | 0;
 if (d5 > 0.0) i2 = i4 + (~~d1 + -1 << 1) | 0; else i2 = i4;
 d10 = +(HEAP16[i2 >> 1] | 0);
 i11 = ~~d5;
 d1 = +(HEAP16[i4 + (i11 << 1) >> 1] | 0);
 d8 = +(HEAP16[(d5 < d6 + -2.0 ? i4 + (i11 + 1 << 1) | 0 : i4) >> 1] | 0);
 d9 = +(HEAP16[(d5 < d6 + -3.0 ? i4 + (i11 + 2 << 1) | 0 : i4) >> 1] | 0);
 d10 = (d1 + d3 * ((d8 - d10) * .5 + d3 * (d10 - d1 * 2.5 + d8 * 2.0 - d9 * .5 + d3 * ((d1 - d8) * 1.5 + (d9 - d10) * .5)))) / 32767.0;
 HEAPF64[i7 + 64 >> 3] = d10;
 return +d10;
}

function __ZNSt3__111make_sharedI8maxiHatsJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, d6 = 0.0;
 i2 = __Znwj(392) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22568;
 i3 = i2 + 24 | 0;
 HEAP8[i2 + 48 >> 0] = 0;
 HEAP8[i2 + 49 >> 0] = 0;
 HEAP8[i2 + 50 >> 0] = 0;
 HEAPF64[i2 + 56 >> 3] = 0.0;
 HEAP8[i2 + 64 >> 0] = 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAPF64[i2 + 88 >> 3] = 1.0;
 HEAPF64[i2 + 104 >> 3] = 0.0;
 HEAPF64[i2 + 152 >> 3] = 0.0;
 i3 = i2 + 288 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 d5 = +(HEAP32[5083] | 0);
 d6 = 1.0 - +Math_pow(.01, +(1.0 / (d5 * 0.0 * .001)));
 HEAPF64[i2 + 208 >> 3] = d6;
 i3 = i2 + 16 | 0;
 HEAPF64[i3 >> 3] = 12.0e3;
 d6 = +Math_pow(.01, +(1.0 / (d5 * 20.0 * .001)));
 HEAPF64[i2 + 216 >> 3] = d6;
 HEAPF64[i2 + 224 >> 3] = .1;
 d6 = +Math_pow(.01, +(1.0 / (d5 * 300.0 * .001)));
 HEAPF64[i2 + 232 >> 3] = d6;
 HEAP32[i2 + 252 >> 2] = 1;
 HEAP32[i2 + 248 >> 2] = 0;
 HEAPF64[i2 + 376 >> 3] = 8.0e3;
 d5 = +Math_tan(+(25132.741228718343 / d5));
 HEAPF64[i2 + 384 >> 3] = 1.0;
 HEAPF64[i2 + 312 >> 3] = d5;
 HEAPF64[i2 + 320 >> 3] = 1.0;
 HEAPF64[i2 + 328 >> 3] = 1.0;
 d6 = d5 + 1.0;
 d4 = d5 / (d5 * d6 + 1.0);
 HEAPF64[i2 + 336 >> 3] = d4;
 HEAPF64[i2 + 344 >> 3] = d4;
 HEAPF64[i2 + 352 >> 3] = d4 * (d6 * 2.0);
 HEAPF64[i2 + 360 >> 3] = d5 * d4;
 HEAPF64[i2 + 368 >> 3] = d4 * 2.0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN15maxiTimestretchI14hannWinFunctorE5play2Eddi(i4, d3, d1, i2) {
 i4 = i4 | 0;
 d3 = +d3;
 d1 = +d1;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0, i7 = 0, d8 = 0.0, i9 = 0;
 i7 = i4 + 32 | 0;
 d8 = +HEAPF64[i7 >> 3] + 1.0;
 HEAPF64[i7 >> 3] = d8;
 if (+Math_floor(+(+_fmod(d8, +(HEAP32[5083] | 0) * d1 / +(i2 | 0)))) == 0.0) {
  i5 = HEAP32[i4 + 8 >> 2] | 0;
  i7 = i5 + 108 | 0;
  d8 = +(HEAP32[i7 >> 2] | 0) * d3;
  i6 = __Znwj(104) | 0;
  d8 = d8 / +(HEAP32[i7 >> 2] | 0);
  d8 = d8 < 1.0 ? d8 : 1.0;
  __ZN9maxiGrainI14hannWinFunctorEC2EP10maxiSampledddP20maxiGrainWindowCacheIS0_E(i6, i5, d8 < 0.0 ? 0.0 : d8, d1, 1.0, i4 + 16 | 0);
  i5 = HEAP32[i4 + 12 >> 2] | 0;
  i7 = __Znwj(12) | 0;
  HEAP32[i7 + 8 >> 2] = i6;
  HEAP32[i7 + 4 >> 2] = i5;
  i6 = HEAP32[i5 >> 2] | 0;
  HEAP32[i7 >> 2] = i6;
  HEAP32[i6 + 4 >> 2] = i7;
  HEAP32[i5 >> 2] = i7;
  i7 = i5 + 8 | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
 } else i5 = HEAP32[i4 + 12 >> 2] | 0;
 i2 = HEAP32[i5 + 4 >> 2] | 0;
 if ((i2 | 0) == (i5 | 0)) {
  d8 = 0.0;
  return +d8;
 }
 i6 = i5 + 8 | 0;
 i7 = i2;
 d1 = 0.0;
 do {
  i4 = i7 + 8 | 0;
  i9 = HEAP32[i4 >> 2] | 0;
  d1 = d1 + +FUNCTION_TABLE_di[HEAP32[HEAP32[i9 >> 2] >> 2] & 31](i9);
  i4 = HEAP32[i4 >> 2] | 0;
  if (!(HEAP8[i4 + 4 >> 0] | 0)) i2 = HEAP32[i7 + 4 >> 2] | 0; else {
   if (i4) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 511](i4);
   i7 = i7 + 4 | 0;
   i9 = HEAP32[i7 >> 2] | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   HEAP32[i4 + 4 >> 2] = i9;
   HEAP32[HEAP32[i7 >> 2] >> 2] = i4;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
   __ZdlPv(i2);
   i2 = i9;
  }
  i7 = i2;
 } while ((i7 | 0) != (i5 | 0));
 return +d1;
}

function __ZN9maxiGrainI14hannWinFunctorEC2EP10maxiSampledddP20maxiGrainWindowCacheIS0_E(i9, i1, d2, d5, d6, i3) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d5 = +d5;
 d6 = +d6;
 i3 = i3 | 0;
 var i4 = 0, i7 = 0, i8 = 0, i10 = 0;
 HEAP32[i9 >> 2] = 23344;
 HEAP32[i9 + 8 >> 2] = i1;
 HEAPF64[i9 + 24 >> 3] = d5;
 HEAPF64[i9 + 56 >> 3] = d6;
 HEAP32[i9 + 84 >> 2] = HEAP32[i1 + 128 >> 2];
 i4 = i1 + 108 | 0;
 i10 = ~~(+(HEAP32[i4 >> 2] | 0) * d2);
 HEAP32[i9 + 32 >> 2] = i10;
 i8 = ~~(+(HEAP32[i1 + 104 >> 2] | 0) * d5);
 HEAP32[i9 + 40 >> 2] = i8;
 i7 = i8 + -1 | 0;
 HEAP32[i9 + 96 >> 2] = i7;
 HEAP32[i9 + 36 >> 2] = 0;
 HEAP8[i9 + 4 >> 0] = 0;
 d2 = 1.0 / d5;
 HEAPF64[i9 + 48 >> 3] = d2;
 i1 = i8 + i10 | 0;
 i4 = HEAP32[i4 >> 2] | 0;
 i4 = (i1 | 0) < (i4 | 0) ? i1 : i4;
 HEAP32[i9 + 44 >> 2] = i4;
 d2 = d2 * d6;
 HEAPF64[i9 + 72 >> 3] = d2;
 HEAPF64[i9 + 16 >> 3] = +((d2 > 0.0 ? i10 : i4) | 0);
 if (d2 != 0.0) d2 = +(i8 | 0) / (+(HEAP32[5083] | 0) / d2); else d2 = 0.0;
 HEAPF64[i9 + 64 >> 3] = d2;
 i4 = i3 + 4 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (i8 << 2) | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3) {
  i8 = i3;
  i10 = i9 + 80 | 0;
  HEAP32[i10 >> 2] = i8;
  return;
 }
 i10 = _malloc(i8 << 3) | 0;
 HEAP32[i1 >> 2] = i10;
 if (!i8) {
  i8 = HEAP32[HEAP32[i4 >> 2] >> 2] | 0;
  i10 = i9 + 80 | 0;
  HEAP32[i10 >> 2] = i8;
  return;
 }
 d2 = +(i7 >>> 0);
 i1 = HEAP32[(HEAP32[i4 >> 2] | 0) + (i8 << 2) >> 2] | 0;
 i3 = 0;
 do {
  d6 = (1.0 - +Math_cos(+(+(i3 >>> 0) * 6.283185307179586 / d2))) * .5;
  HEAPF64[i1 + (i3 << 3) >> 3] = d6;
  i3 = i3 + 1 | 0;
 } while ((i3 | 0) != (i8 | 0));
 i10 = i9 + 80 | 0;
 HEAP32[i10 >> 2] = i1;
 return;
}

function __ZN10maxiSample9setSampleERNSt3__16vectorIdNS0_9allocatorIdEEEEi(i15, i14, i13) {
 i15 = i15 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i1 = HEAP32[i14 >> 2] | 0;
 i12 = (HEAP32[i14 + 4 >> 2] | 0) - i1 | 0;
 i11 = i15 + 108 | 0;
 HEAP32[i11 >> 2] = i12 >> 3;
 if ((i12 | 0) <= 0) {
  i15 = i15 + 104 | 0;
  HEAP32[i15 >> 2] = i13;
  return;
 }
 i12 = i15 + 128 | 0;
 i9 = i15 + 132 | 0;
 i10 = i15 + 136 | 0;
 i2 = 0;
 while (1) {
  i8 = ~~(+HEAPF64[i1 + (i2 << 3) >> 3] * 32767.0);
  i4 = HEAP32[i9 >> 2] | 0;
  i1 = HEAP32[i10 >> 2] | 0;
  if (i4 >>> 0 >= i1 >>> 0) {
   i3 = HEAP32[i12 >> 2] | 0;
   i5 = i3;
   i7 = i4 - i5 | 0;
   i6 = (i7 >> 1) + 1 | 0;
   if ((i7 | 0) < -2) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i12);
    i7 = HEAP32[i12 >> 2] | 0;
    i1 = HEAP32[i10 >> 2] | 0;
    i3 = i7;
    i4 = HEAP32[i9 >> 2] | 0;
   } else i7 = i5;
   i5 = i3;
   i1 = i1 - i5 | 0;
   i6 = i1 >> 1 >>> 0 < 1073741823 ? (i1 >>> 0 < i6 >>> 0 ? i6 : i1) : 2147483647;
   i1 = i4 - i5 | 0;
   i4 = i1 >> 1;
   if (!i6) i5 = 0; else i5 = __Znwj(i6 << 1) | 0;
   HEAP16[i5 + (i4 << 1) >> 1] = i8;
   _memcpy(i5 | 0, i3 | 0, i1 | 0) | 0;
   HEAP32[i12 >> 2] = i5;
   HEAP32[i9 >> 2] = i5 + (i4 + 1 << 1);
   HEAP32[i10 >> 2] = i5 + (i6 << 1);
   if (i7) __ZdlPv(i7);
  } else {
   HEAP16[i4 >> 1] = i8;
   HEAP32[i9 >> 2] = i4 + 2;
  }
  i2 = i2 + 1 | 0;
  if ((i2 | 0) >= (HEAP32[i11 >> 2] | 0)) break;
  i1 = HEAP32[i14 >> 2] | 0;
 }
 i15 = i15 + 104 | 0;
 HEAP32[i15 >> 2] = i13;
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3, i7, i6, i2, i4) {
 i3 = i3 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i8 = 0, i9 = 0;
 L1 : do if ((i3 | 0) == (HEAP32[i7 + 8 >> 2] | 0)) {
  if ((HEAP32[i7 + 4 >> 2] | 0) == (i6 | 0) ? (i1 = i7 + 28 | 0, (HEAP32[i1 >> 2] | 0) != 1) : 0) HEAP32[i1 >> 2] = i2;
 } else {
  if ((i3 | 0) != (HEAP32[i7 >> 2] | 0)) {
   i8 = HEAP32[i3 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 24 >> 2] & 7](i8, i7, i6, i2, i4);
   break;
  }
  if ((HEAP32[i7 + 16 >> 2] | 0) != (i6 | 0) ? (i5 = i7 + 20 | 0, (HEAP32[i5 >> 2] | 0) != (i6 | 0)) : 0) {
   HEAP32[i7 + 32 >> 2] = i2;
   i2 = i7 + 44 | 0;
   if ((HEAP32[i2 >> 2] | 0) == 4) break;
   i1 = i7 + 52 | 0;
   HEAP8[i1 >> 0] = 0;
   i9 = i7 + 53 | 0;
   HEAP8[i9 >> 0] = 0;
   i3 = HEAP32[i3 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 3](i3, i7, i6, i6, 1, i4);
   if (HEAP8[i9 >> 0] | 0) {
    if (!(HEAP8[i1 >> 0] | 0)) {
     i1 = 1;
     i8 = 13;
    }
   } else {
    i1 = 0;
    i8 = 13;
   }
   do if ((i8 | 0) == 13) {
    HEAP32[i5 >> 2] = i6;
    i9 = i7 + 40 | 0;
    HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 1;
    if ((HEAP32[i7 + 36 >> 2] | 0) == 1 ? (HEAP32[i7 + 24 >> 2] | 0) == 2 : 0) {
     HEAP8[i7 + 54 >> 0] = 1;
     if (i1) break;
    } else i8 = 16;
    if ((i8 | 0) == 16 ? i1 : 0) break;
    HEAP32[i2 >> 2] = 4;
    break L1;
   } while (0);
   HEAP32[i2 >> 2] = 3;
   break;
  }
  if ((i2 | 0) == 1) HEAP32[i7 + 32 >> 2] = 1;
 } while (0);
 return;
}

function ___dynamic_cast(i2, i3, i12, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i13 = i14;
 i11 = HEAP32[i2 >> 2] | 0;
 i10 = i2 + (HEAP32[i11 + -8 >> 2] | 0) | 0;
 i11 = HEAP32[i11 + -4 >> 2] | 0;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i13 + 4 >> 2] = i2;
 HEAP32[i13 + 8 >> 2] = i3;
 HEAP32[i13 + 12 >> 2] = i1;
 i1 = i13 + 16 | 0;
 i2 = i13 + 20 | 0;
 i3 = i13 + 24 | 0;
 i4 = i13 + 28 | 0;
 i5 = i13 + 32 | 0;
 i6 = i13 + 40 | 0;
 i7 = (i11 | 0) == (i12 | 0);
 i8 = i1;
 i9 = i8 + 36 | 0;
 do {
  HEAP32[i8 >> 2] = 0;
  i8 = i8 + 4 | 0;
 } while ((i8 | 0) < (i9 | 0));
 HEAP16[i1 + 36 >> 1] = 0;
 HEAP8[i1 + 38 >> 0] = 0;
 L1 : do if (i7) {
  HEAP32[i13 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 3](i12, i13, i10, i10, 1, 0);
  i1 = (HEAP32[i3 >> 2] | 0) == 1 ? i10 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 24 >> 2] & 7](i11, i13, i10, 1, 0);
  switch (HEAP32[i13 + 36 >> 2] | 0) {
  case 0:
   {
    i1 = (HEAP32[i6 >> 2] | 0) == 1 & (HEAP32[i4 >> 2] | 0) == 1 & (HEAP32[i5 >> 2] | 0) == 1 ? HEAP32[i2 >> 2] | 0 : 0;
    break L1;
   }
  case 1:
   break;
  default:
   {
    i1 = 0;
    break L1;
   }
  }
  if ((HEAP32[i3 >> 2] | 0) != 1 ? !((HEAP32[i6 >> 2] | 0) == 0 & (HEAP32[i4 >> 2] | 0) == 1 & (HEAP32[i5 >> 2] | 0) == 1) : 0) {
   i1 = 0;
   break;
  }
  i1 = HEAP32[i1 >> 2] | 0;
 } while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function _vfprintf(i15, i11, i1) {
 i15 = i15 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i10 = i16 + 80 | 0;
 i14 = i16 + 96 | 0;
 i13 = i16;
 i12 = i16 + 136 | 0;
 i2 = i14;
 i3 = i2 + 40 | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = i2 + 4 | 0;
 } while ((i2 | 0) < (i3 | 0));
 HEAP32[i10 >> 2] = HEAP32[i1 >> 2];
 if ((_printf_core(0, i11, i10, i13, i14) | 0) < 0) i1 = -1; else {
  if ((HEAP32[i15 + 76 >> 2] | 0) > -1) i8 = ___lockfile(i15) | 0; else i8 = 0;
  i1 = HEAP32[i15 >> 2] | 0;
  i9 = i1 & 32;
  if ((HEAP8[i15 + 74 >> 0] | 0) < 1) HEAP32[i15 >> 2] = i1 & -33;
  i1 = i15 + 48 | 0;
  if (!(HEAP32[i1 >> 2] | 0)) {
   i3 = i15 + 44 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   HEAP32[i3 >> 2] = i12;
   i5 = i15 + 28 | 0;
   HEAP32[i5 >> 2] = i12;
   i6 = i15 + 20 | 0;
   HEAP32[i6 >> 2] = i12;
   HEAP32[i1 >> 2] = 80;
   i7 = i15 + 16 | 0;
   HEAP32[i7 >> 2] = i12 + 80;
   i2 = _printf_core(i15, i11, i10, i13, i14) | 0;
   if (i4) {
    FUNCTION_TABLE_iiii[HEAP32[i15 + 36 >> 2] & 15](i15, 0, 0) | 0;
    i2 = (HEAP32[i6 >> 2] | 0) == 0 ? -1 : i2;
    HEAP32[i3 >> 2] = i4;
    HEAP32[i1 >> 2] = 0;
    HEAP32[i7 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
   }
  } else i2 = _printf_core(i15, i11, i10, i13, i14) | 0;
  i1 = HEAP32[i15 >> 2] | 0;
  HEAP32[i15 >> 2] = i1 | i9;
  if (i8) ___unlockfile(i15);
  i1 = (i1 & 32 | 0) == 0 ? i2 : -1;
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZN10maxiSample9setSampleERNSt3__16vectorIdNS0_9allocatorIdEEEE(i14, i13) {
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i1 = HEAP32[i13 >> 2] | 0;
 i12 = (HEAP32[i13 + 4 >> 2] | 0) - i1 | 0;
 i11 = i14 + 108 | 0;
 HEAP32[i11 >> 2] = i12 >> 3;
 if ((i12 | 0) <= 0) {
  i14 = i14 + 104 | 0;
  HEAP32[i14 >> 2] = 44100;
  return;
 }
 i12 = i14 + 128 | 0;
 i9 = i14 + 132 | 0;
 i10 = i14 + 136 | 0;
 i2 = 0;
 while (1) {
  i8 = ~~(+HEAPF64[i1 + (i2 << 3) >> 3] * 32767.0);
  i4 = HEAP32[i9 >> 2] | 0;
  i1 = HEAP32[i10 >> 2] | 0;
  if (i4 >>> 0 >= i1 >>> 0) {
   i3 = HEAP32[i12 >> 2] | 0;
   i5 = i3;
   i7 = i4 - i5 | 0;
   i6 = (i7 >> 1) + 1 | 0;
   if ((i7 | 0) < -2) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i12);
    i7 = HEAP32[i12 >> 2] | 0;
    i1 = HEAP32[i10 >> 2] | 0;
    i3 = i7;
    i4 = HEAP32[i9 >> 2] | 0;
   } else i7 = i5;
   i5 = i3;
   i1 = i1 - i5 | 0;
   i6 = i1 >> 1 >>> 0 < 1073741823 ? (i1 >>> 0 < i6 >>> 0 ? i6 : i1) : 2147483647;
   i1 = i4 - i5 | 0;
   i4 = i1 >> 1;
   if (!i6) i5 = 0; else i5 = __Znwj(i6 << 1) | 0;
   HEAP16[i5 + (i4 << 1) >> 1] = i8;
   _memcpy(i5 | 0, i3 | 0, i1 | 0) | 0;
   HEAP32[i12 >> 2] = i5;
   HEAP32[i9 >> 2] = i5 + (i4 + 1 << 1);
   HEAP32[i10 >> 2] = i5 + (i6 << 1);
   if (i7) __ZdlPv(i7);
  } else {
   HEAP16[i4 >> 1] = i8;
   HEAP32[i9 >> 2] = i4 + 2;
  }
  i2 = i2 + 1 | 0;
  if ((i2 | 0) >= (HEAP32[i11 >> 2] | 0)) break;
  i1 = HEAP32[i13 >> 2] | 0;
 }
 i14 = i14 + 104 | 0;
 HEAP32[i14 >> 2] = 44100;
 return;
}

function __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEjRKd(i12, i14, i15) {
 i12 = i12 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0;
 i11 = i12 + 8 | 0;
 i2 = HEAP32[i11 >> 2] | 0;
 i13 = i12 + 4 | 0;
 i3 = HEAP32[i13 >> 2] | 0;
 i1 = i3;
 if (i2 - i1 >> 3 >>> 0 >= i14 >>> 0) {
  i1 = i14;
  i2 = i3;
  while (1) {
   HEAPF64[i2 >> 3] = +HEAPF64[i15 >> 3];
   i1 = i1 + -1 | 0;
   if (!i1) break; else i2 = i2 + 8 | 0;
  }
  HEAP32[i13 >> 2] = i3 + (i14 << 3);
  return;
 }
 i3 = HEAP32[i12 >> 2] | 0;
 i4 = i3;
 i6 = (i1 - i4 >> 3) + i14 | 0;
 if (i6 >>> 0 > 536870911) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i12);
  i4 = HEAP32[i12 >> 2] | 0;
  i2 = HEAP32[i11 >> 2] | 0;
  i3 = i4;
 }
 i5 = i3;
 i1 = i2 - i5 | 0;
 if (i1 >> 3 >>> 0 < 268435455) {
  i1 = i1 >> 2;
  i1 = i1 >>> 0 < i6 >>> 0 ? i6 : i1;
  i5 = (HEAP32[i13 >> 2] | 0) - i5 | 0;
  i2 = i5 >> 3;
  if (!i1) {
   i7 = 0;
   i9 = 0;
   i8 = i2;
   i6 = i5;
  } else i10 = 9;
 } else {
  i5 = (HEAP32[i13 >> 2] | 0) - i5 | 0;
  i1 = 536870911;
  i2 = i5 >> 3;
  i10 = 9;
 }
 if ((i10 | 0) == 9) {
  i7 = i1;
  i9 = __Znwj(i1 << 3) | 0;
  i8 = i2;
  i6 = i5;
 }
 i2 = i9 + (i7 << 3) | 0;
 i1 = i14;
 i5 = i9 + (i8 << 3) | 0;
 while (1) {
  HEAPF64[i5 >> 3] = +HEAPF64[i15 >> 3];
  i1 = i1 + -1 | 0;
  if (!i1) break; else i5 = i5 + 8 | 0;
 }
 _memcpy(i9 | 0, i3 | 0, i6 | 0) | 0;
 HEAP32[i12 >> 2] = i9;
 HEAP32[i13 >> 2] = i9 + (i8 + i14 << 3);
 HEAP32[i11 >> 2] = i2;
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEjRKi(i12, i14, i15) {
 i12 = i12 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0;
 i11 = i12 + 8 | 0;
 i2 = HEAP32[i11 >> 2] | 0;
 i13 = i12 + 4 | 0;
 i3 = HEAP32[i13 >> 2] | 0;
 i1 = i3;
 if (i2 - i1 >> 2 >>> 0 >= i14 >>> 0) {
  i1 = i14;
  i2 = i3;
  while (1) {
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   i1 = i1 + -1 | 0;
   if (!i1) break; else i2 = i2 + 4 | 0;
  }
  HEAP32[i13 >> 2] = i3 + (i14 << 2);
  return;
 }
 i3 = HEAP32[i12 >> 2] | 0;
 i4 = i3;
 i6 = (i1 - i4 >> 2) + i14 | 0;
 if (i6 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i12);
  i4 = HEAP32[i12 >> 2] | 0;
  i2 = HEAP32[i11 >> 2] | 0;
  i3 = i4;
 }
 i5 = i3;
 i1 = i2 - i5 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i6 >>> 0 ? i6 : i1;
  i5 = (HEAP32[i13 >> 2] | 0) - i5 | 0;
  i2 = i5 >> 2;
  if (!i1) {
   i7 = 0;
   i9 = 0;
   i8 = i2;
   i6 = i5;
  } else i10 = 9;
 } else {
  i5 = (HEAP32[i13 >> 2] | 0) - i5 | 0;
  i1 = 1073741823;
  i2 = i5 >> 2;
  i10 = 9;
 }
 if ((i10 | 0) == 9) {
  i7 = i1;
  i9 = __Znwj(i1 << 2) | 0;
  i8 = i2;
  i6 = i5;
 }
 i2 = i9 + (i7 << 2) | 0;
 i1 = i14;
 i5 = i9 + (i8 << 2) | 0;
 while (1) {
  HEAP32[i5 >> 2] = HEAP32[i15 >> 2];
  i1 = i1 + -1 | 0;
  if (!i1) break; else i5 = i5 + 4 | 0;
 }
 _memcpy(i9 | 0, i3 | 0, i6 | 0) | 0;
 HEAP32[i12 >> 2] = i9;
 HEAP32[i13 >> 2] = i9 + (i8 + i14 << 2);
 HEAP32[i11 >> 2] = i2;
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEjRKf(i12, i2, i14) {
 i12 = i12 | 0;
 i2 = i2 | 0;
 i14 = i14 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0;
 i11 = i12 + 8 | 0;
 i4 = HEAP32[i11 >> 2] | 0;
 i13 = i12 + 4 | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 i3 = i1;
 if (i4 - i3 >> 2 >>> 0 >= i2 >>> 0) {
  i3 = i1 + (i2 << 2) | 0;
  while (1) {
   HEAP32[i1 >> 2] = HEAP32[i14 >> 2];
   i2 = i2 + -1 | 0;
   if (!i2) break; else i1 = i1 + 4 | 0;
  }
  HEAP32[i13 >> 2] = i3;
  return;
 }
 i1 = HEAP32[i12 >> 2] | 0;
 i5 = i1;
 i6 = (i3 - i5 >> 2) + i2 | 0;
 if (i6 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i12);
  i5 = HEAP32[i12 >> 2] | 0;
  i4 = HEAP32[i11 >> 2] | 0;
  i9 = i5;
 } else i9 = i1;
 i3 = i9;
 i1 = i4 - i3 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i6 >>> 0 ? i6 : i1;
  i4 = (HEAP32[i13 >> 2] | 0) - i3 | 0;
  i3 = i4 >> 2;
  if (!i1) {
   i6 = 0;
   i8 = 0;
   i7 = i4;
  } else i10 = 10;
 } else {
  i4 = (HEAP32[i13 >> 2] | 0) - i3 | 0;
  i1 = 1073741823;
  i3 = i4 >> 2;
  i10 = 10;
 }
 if ((i10 | 0) == 10) {
  i6 = i1;
  i8 = __Znwj(i1 << 2) | 0;
  i7 = i4;
 }
 i4 = i8 + (i6 << 2) | 0;
 i6 = i3 + i2 | 0;
 i1 = i8 + (i3 << 2) | 0;
 while (1) {
  HEAP32[i1 >> 2] = HEAP32[i14 >> 2];
  i2 = i2 + -1 | 0;
  if (!i2) break; else i1 = i1 + 4 | 0;
 }
 _memcpy(i8 | 0, i9 | 0, i7 | 0) | 0;
 HEAP32[i12 >> 2] = i8;
 HEAP32[i13 >> 2] = i8 + (i6 << 2);
 HEAP32[i11 >> 2] = i4;
 if (!i5) return;
 __ZdlPv(i5);
 return;
}

function __ZN16maxiMFCCAnalyserIdE5setupEjjjddj(i7, i5, i4, i3, d2, d1, i6) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 d2 = +d2;
 d1 = +d1;
 i6 = i6 | 0;
 var d8 = 0.0, d9 = 0.0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, i14 = 0;
 i11 = i7 + 4 | 0;
 HEAP32[i11 >> 2] = i4;
 i10 = i7 + 8 | 0;
 HEAP32[i10 >> 2] = i3;
 HEAPF64[i7 + 16 >> 3] = d2;
 HEAPF64[i7 + 24 >> 3] = d1;
 HEAP32[i7 + 32 >> 2] = i6;
 HEAP32[i7 + 40 >> 2] = i5;
 HEAP32[i7 + 36 >> 2] = 0;
 i4 = i4 << 3;
 i12 = _malloc(i4) | 0;
 HEAP32[i7 >> 2] = i12;
 i4 = _malloc(Math_imul(i4, i3) | 0) | 0;
 i12 = i7 + 44 | 0;
 HEAP32[i12 >> 2] = i4;
 __ZN16maxiMFCCAnalyserIdE17calcMelFilterBankEdi(i7, +(i6 >>> 0), i5);
 i7 = HEAP32[i11 >> 2] | 0;
 d9 = +(i7 >>> 0);
 d2 = 3.141592653589793 / d9;
 d8 = 1.0 / +Math_sqrt(+d9);
 d9 = +Math_sqrt(+(2.0 / d9));
 i10 = HEAP32[i10 >> 2] | 0;
 if (!i10) return;
 i11 = (i7 | 0) == 0;
 i4 = 0;
 while (1) {
  if (!i11) {
   i3 = i4 + 1 | 0;
   d1 = d2 * +(i3 | 0);
   i6 = HEAP32[i12 >> 2] | 0;
   if (!i4) {
    i4 = 0;
    do {
     d13 = d8 * +Math_cos(+(d1 * (+(i4 | 0) + .5)));
     i5 = i6 + ((Math_imul(i4, i10) | 0) << 3) | 0;
     HEAPF64[i5 >> 3] = d13;
     i4 = i4 + 1 | 0;
    } while ((i4 | 0) != (i7 | 0));
   } else {
    i5 = 0;
    do {
     d13 = d9 * +Math_cos(+(d1 * (+(i5 | 0) + .5)));
     i14 = i6 + ((Math_imul(i5, i10) | 0) + i4 << 3) | 0;
     HEAPF64[i14 >> 3] = d13;
     i5 = i5 + 1 | 0;
    } while ((i5 | 0) != (i7 | 0));
   }
  } else i3 = i4 + 1 | 0;
  if (i3 >>> 0 < i10 >>> 0) i4 = i3; else break;
 }
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i12, i11, i10, i13, i14) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i11 = i11 | 0;
 i10 = i10 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 if ((i1 | 0) == (HEAP32[i12 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i12, i11, i10, i13); else {
  i6 = i12 + 52 | 0;
  i7 = HEAP8[i6 >> 0] | 0;
  i8 = i12 + 53 | 0;
  i9 = HEAP8[i8 >> 0] | 0;
  i5 = HEAP32[i1 + 12 >> 2] | 0;
  i2 = i1 + 16 + (i5 << 3) | 0;
  HEAP8[i6 >> 0] = 0;
  HEAP8[i8 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1 + 16 | 0, i12, i11, i10, i13, i14);
  L4 : do if ((i5 | 0) > 1) {
   i3 = i12 + 24 | 0;
   i4 = i1 + 8 | 0;
   i5 = i12 + 54 | 0;
   i1 = i1 + 24 | 0;
   do {
    if (HEAP8[i5 >> 0] | 0) break L4;
    if (!(HEAP8[i6 >> 0] | 0)) {
     if ((HEAP8[i8 >> 0] | 0) != 0 ? (HEAP32[i4 >> 2] & 1 | 0) == 0 : 0) break L4;
    } else {
     if ((HEAP32[i3 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[i4 >> 2] & 2)) break L4;
    }
    HEAP8[i6 >> 0] = 0;
    HEAP8[i8 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i12, i11, i10, i13, i14);
    i1 = i1 + 8 | 0;
   } while (i1 >>> 0 < i2 >>> 0);
  } while (0);
  HEAP8[i6 >> 0] = i7;
  HEAP8[i8 >> 0] = i9;
 }
 return;
}

function __ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEjRKc(i10, i2, i9) {
 i10 = i10 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i8 = i10 + 8 | 0;
 i4 = HEAP32[i8 >> 2] | 0;
 i11 = i10 + 4 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 i3 = i1;
 if ((i4 - i3 | 0) >>> 0 >= i2 >>> 0) {
  do {
   HEAP8[i1 >> 0] = HEAP8[i9 >> 0] | 0;
   i1 = (HEAP32[i11 >> 2] | 0) + 1 | 0;
   HEAP32[i11 >> 2] = i1;
   i2 = i2 + -1 | 0;
  } while ((i2 | 0) != 0);
  return;
 }
 i1 = HEAP32[i10 >> 2] | 0;
 i5 = i3 - i1 + i2 | 0;
 if ((i5 | 0) < 0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
  i4 = HEAP32[i8 >> 2] | 0;
  i1 = HEAP32[i10 >> 2] | 0;
 }
 i3 = i4 - i1 | 0;
 if (i3 >>> 0 < 1073741823) {
  i3 = i3 << 1;
  i3 = i3 >>> 0 < i5 >>> 0 ? i5 : i3;
  i1 = (HEAP32[i11 >> 2] | 0) - i1 | 0;
  if (!i3) {
   i4 = 0;
   i6 = 0;
   i5 = i1;
  } else i7 = 8;
 } else {
  i3 = 2147483647;
  i1 = (HEAP32[i11 >> 2] | 0) - i1 | 0;
  i7 = 8;
 }
 if ((i7 | 0) == 8) {
  i4 = i3;
  i6 = __Znwj(i3) | 0;
  i5 = i1;
 }
 i1 = i6 + i5 | 0;
 i4 = i6 + i4 | 0;
 i3 = i1;
 do {
  HEAP8[i3 >> 0] = HEAP8[i9 >> 0] | 0;
  i3 = i1 + 1 | 0;
  i1 = i3;
  i2 = i2 + -1 | 0;
 } while ((i2 | 0) != 0);
 i2 = HEAP32[i10 >> 2] | 0;
 i7 = (HEAP32[i11 >> 2] | 0) - i2 | 0;
 i9 = i6 + (i5 - i7) | 0;
 _memcpy(i9 | 0, i2 | 0, i7 | 0) | 0;
 HEAP32[i10 >> 2] = i9;
 HEAP32[i11 >> 2] = i1;
 HEAP32[i8 >> 2] = i4;
 if (!i2) return;
 __ZdlPv(i2);
 return;
}

function __ZN7maxiDyn4gateEddldd(i11, d9, d3, i8, d5, d10) {
 i11 = i11 | 0;
 d9 = +d9;
 d3 = +d3;
 i8 = i8 | 0;
 d5 = +d5;
 d10 = +d10;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0, i7 = 0;
 i4 = +Math_abs(+d9) > d3;
 i7 = i11 + 72 | 0;
 i1 = (HEAP32[i7 >> 2] | 0) == 1;
 if (i4) if (!i1 ? (HEAP32[i11 + 68 >> 2] = 0, HEAP32[i11 + 80 >> 2] = 0, HEAP32[i7 >> 2] = 1, i2 = i11 + 56 | 0, +HEAPF64[i2 >> 3] == 0.0) : 0) {
  HEAPF64[i2 >> 3] = .01;
  i6 = 7;
 } else i6 = 7; else if (i1) i6 = 7; else {
  i2 = i11 + 56 | 0;
  i4 = i2;
  d3 = +HEAPF64[i2 >> 3];
 }
 if ((i6 | 0) == 7) {
  i1 = i11 + 56 | 0;
  d3 = +HEAPF64[i1 >> 3];
  if (d3 < 1.0) {
   d3 = (d5 + 1.0) * d3;
   HEAPF64[i1 >> 3] = d3;
   HEAPF64[i11 + 32 >> 3] = d3 * d9;
   i4 = i1;
  } else i4 = i1;
 }
 if (d3 >= 1.0) {
  HEAP32[i7 >> 2] = 0;
  HEAP32[i11 + 76 >> 2] = 1;
 }
 i2 = i11 + 68 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if ((i1 | 0) < (i8 | 0) ? (HEAP32[i11 + 76 >> 2] | 0) == 1 : 0) {
  HEAPF64[i11 + 32 >> 3] = d9;
  i1 = i1 + 1 | 0;
  HEAP32[i2 >> 2] = i1;
 }
 if ((i1 | 0) == (i8 | 0)) {
  HEAP32[i11 + 76 >> 2] = 0;
  HEAP32[i11 + 80 >> 2] = 1;
  if (!(d3 > 0.0)) {
   i11 = i11 + 32 | 0;
   d10 = +HEAPF64[i11 >> 3];
   return +d10;
  }
 } else if (!(d3 > 0.0 ? (HEAP32[i11 + 80 >> 2] | 0) == 1 : 0)) {
  i11 = i11 + 32 | 0;
  d10 = +HEAPF64[i11 >> 3];
  return +d10;
 }
 d10 = d3 * d10;
 HEAPF64[i4 >> 3] = d10;
 HEAPF64[i11 + 32 >> 3] = d10 * d9;
 i11 = i11 + 32 | 0;
 d10 = +HEAPF64[i11 >> 3];
 return +d10;
}

function __ZN7maxiEnv2arEdddli(i9, d7, d2, d8, i5, i10) {
 i9 = i9 | 0;
 d7 = +d7;
 d2 = +d2;
 d8 = +d8;
 i5 = i5 | 0;
 i10 = i10 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = (i10 | 0) == 1;
 i3 = i9 + 68 | 0;
 i1 = (HEAP32[i3 >> 2] | 0) == 1;
 if (i6) if (!i1) if ((HEAP32[i9 + 80 >> 2] | 0) == 1) i1 = 6; else {
  HEAP32[i9 + 64 >> 2] = 0;
  HEAP32[i9 + 84 >> 2] = 0;
  HEAP32[i3 >> 2] = 1;
  i1 = 7;
 } else i1 = 7; else if (i1) i1 = 7; else i1 = 6;
 if ((i1 | 0) == 6) {
  i1 = i9 + 48 | 0;
  i4 = i1;
  d2 = +HEAPF64[i1 >> 3];
 } else if ((i1 | 0) == 7) {
  i4 = i9 + 48 | 0;
  d2 = +HEAPF64[i4 >> 3] + d2;
  HEAPF64[i4 >> 3] = d2;
  HEAPF64[i9 + 8 >> 3] = d2 * d7;
 }
 if (d2 >= 1.0) {
  HEAPF64[i4 >> 3] = 1.0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i9 + 80 >> 2] = 1;
  d2 = 1.0;
 }
 i3 = i9 + 64 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i1 | 0) < (i5 | 0) ? (HEAP32[i9 + 80 >> 2] | 0) == 1 : 0) {
  HEAPF64[i9 + 8 >> 3] = d7;
  i1 = i1 + 1 | 0;
  HEAP32[i3 >> 2] = i1;
 }
 i1 = (i1 | 0) == (i5 | 0);
 if (i6 & i1) HEAPF64[i9 + 8 >> 3] = d7;
 if ((i10 | 0) != 1 & i1) {
  HEAP32[i9 + 80 >> 2] = 0;
  HEAP32[i9 + 84 >> 2] = 1;
  if (!(d2 > 0.0)) {
   i10 = i9 + 8 | 0;
   d8 = +HEAPF64[i10 >> 3];
   return +d8;
  }
 } else if (!(d2 > 0.0 ? (HEAP32[i9 + 84 >> 2] | 0) == 1 : 0)) {
  i10 = i9 + 8 | 0;
  d8 = +HEAPF64[i10 >> 3];
  return +d8;
 }
 d8 = d2 * d8;
 HEAPF64[i4 >> 3] = d8;
 HEAPF64[i9 + 8 >> 3] = d8 * d7;
 i10 = i9 + 8 | 0;
 d8 = +HEAPF64[i10 >> 3];
 return +d8;
}

function __ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv(i1, i2, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i8 = i9;
 HEAP32[i7 >> 2] = HEAP32[HEAP32[i7 >> 2] >> 2];
 if (!((i1 | 0) == (i2 | 0) | (i2 | 0) == 16056)) if (((i2 | 0) != 0 ? (i3 = ___dynamic_cast(i2, 15968, 16016, 0) | 0, (i3 | 0) != 0) : 0) ? (HEAP32[i3 + 8 >> 2] & ~HEAP32[i1 + 8 >> 2] | 0) == 0 : 0) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  i1 = i3 + 12 | 0;
  if (!((i2 | 0) == 16048 ? 1 : (i2 | 0) == (HEAP32[i1 >> 2] | 0))) if ((((i2 | 0) != 0 ? (i5 = ___dynamic_cast(i2, 15968, 15984, 0) | 0, (i5 | 0) != 0) : 0) ? (i4 = HEAP32[i1 >> 2] | 0, (i4 | 0) != 0) : 0) ? (i6 = ___dynamic_cast(i4, 15968, 15984, 0) | 0, (i6 | 0) != 0) : 0) {
   i1 = i8;
   i2 = i1 + 56 | 0;
   do {
    HEAP32[i1 >> 2] = 0;
    i1 = i1 + 4 | 0;
   } while ((i1 | 0) < (i2 | 0));
   HEAP32[i8 >> 2] = i6;
   HEAP32[i8 + 8 >> 2] = i5;
   HEAP32[i8 + 12 >> 2] = -1;
   HEAP32[i8 + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, i8, HEAP32[i7 >> 2] | 0, 1);
   if ((HEAP32[i8 + 24 >> 2] | 0) == 1) {
    HEAP32[i7 >> 2] = HEAP32[i8 + 16 >> 2];
    i1 = 1;
   } else i1 = 0;
  } else i1 = 0; else i1 = 1;
 } else i1 = 0; else i1 = 1;
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN10maxiSample4playEdddRd(i8, d5, d7, d1, i6) {
 i8 = i8 | 0;
 d5 = +d5;
 d7 = +d7;
 d1 = +d1;
 i6 = i6 | 0;
 var d2 = 0.0, i3 = 0, i4 = 0, i9 = 0, i10 = 0, i11 = 0;
 i3 = HEAP32[i8 + 108 >> 2] | 0;
 i4 = i3 + -1 | 0;
 d2 = !(+(i3 | 0) <= d1) ? d1 : +(i4 | 0);
 d1 = +HEAPF64[i6 >> 3];
 if (!(d5 > 0.0)) {
  if (d1 <= d7) {
   HEAPF64[i6 >> 3] = d2;
   d1 = d2;
  }
  d7 = d1 - (d2 - d7) / (+(HEAP32[5083] | 0) / -(+HEAPF32[5082] * d5));
  HEAPF64[i6 >> 3] = d7;
  d5 = +Math_floor(+d7);
  d7 = d7 - d5;
  i3 = ~~d5;
  i6 = i3 + -2 | 0;
  i4 = HEAP32[i8 + 128 >> 2] | 0;
  d7 = ((-1.0 - d7) * +(HEAP16[i4 + (((i3 | 0) > 0 ? i3 + -1 | 0 : 0) << 1) >> 1] | 0) + d7 * +(HEAP16[i4 + (((i6 | 0) < 0 ? 0 : i6) << 1) >> 1] | 0)) / 32767.0;
  HEAPF64[i8 + 64 >> 3] = d7;
  return +d7;
 }
 if (d1 < d7) {
  HEAPF64[i6 >> 3] = d7;
  d1 = d7;
 }
 if (d1 >= d2) {
  HEAPF64[i6 >> 3] = d7;
  d1 = d7;
 }
 d7 = (d2 - d7) / (+(HEAP32[5083] | 0) / (+HEAPF32[5082] * d5)) + d1;
 HEAPF64[i6 >> 3] = d7;
 d5 = +Math_floor(+d7);
 d7 = d7 - d5;
 i10 = ~~d5;
 i11 = i10 + 1 | 0;
 i6 = i10 + 2 | 0;
 i9 = HEAP32[i8 + 128 >> 2] | 0;
 d7 = ((1.0 - d7) * +(HEAP16[i9 + (((i11 | 0) < (i3 | 0) ? i11 : i10 + -1 | 0) << 1) >> 1] | 0) + d7 * +(HEAP16[i9 + (((i6 | 0) < (i3 | 0) ? i6 : i4) << 1) >> 1] | 0)) / 32767.0;
 HEAPF64[i8 + 64 >> 3] = d7;
 return +d7;
}

function __ZNSt3__111make_sharedI9maxiSnareJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0;
 i2 = __Znwj(528) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22480;
 i3 = i2 + 24 | 0;
 HEAP8[i2 + 48 >> 0] = 0;
 HEAP8[i2 + 49 >> 0] = 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP8[i2 + 50 >> 0] = 1;
 HEAPF64[i2 + 56 >> 3] = 0.0;
 HEAP8[i2 + 64 >> 0] = 0;
 HEAPF64[i2 + 88 >> 3] = 1.0;
 HEAPF64[i2 + 104 >> 3] = 0.0;
 HEAPF64[i2 + 152 >> 3] = 0.0;
 i3 = i2 + 480 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 d4 = +(HEAP32[5083] | 0);
 d5 = 1.0 - +Math_pow(.01, +(1.0 / (d4 * 0.0 * .001)));
 HEAPF64[i2 + 208 >> 3] = d5;
 i3 = i2 + 16 | 0;
 HEAPF64[i3 >> 3] = 800.0;
 d5 = +Math_pow(.01, +(1.0 / (d4 * 20.0 * .001)));
 HEAPF64[i2 + 216 >> 3] = d5;
 HEAPF64[i2 + 224 >> 3] = .05;
 d4 = +Math_pow(.01, +(1.0 / (d4 * 300.0 * .001)));
 HEAPF64[i2 + 232 >> 3] = d4;
 HEAP32[i2 + 252 >> 2] = 1;
 HEAP32[i2 + 248 >> 2] = 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEj(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0;
 i8 = i11 + 8 | 0;
 i3 = HEAP32[i8 >> 2] | 0;
 i9 = i11 + 4 | 0;
 i1 = HEAP32[i9 >> 2] | 0;
 i2 = i1;
 if (i3 - i2 >> 2 >>> 0 >= i10 >>> 0) {
  _memset(i1 | 0, 0, i10 << 2 | 0) | 0;
  HEAP32[i9 >> 2] = i1 + (i10 << 2);
  return;
 }
 i1 = HEAP32[i11 >> 2] | 0;
 i4 = i1;
 i5 = (i2 - i4 >> 2) + i10 | 0;
 if (i5 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i11);
  i4 = HEAP32[i11 >> 2] | 0;
  i3 = HEAP32[i8 >> 2] | 0;
  i7 = i4;
 } else i7 = i1;
 i2 = i7;
 i1 = i3 - i2 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i5 >>> 0 ? i5 : i1;
  i3 = (HEAP32[i9 >> 2] | 0) - i2 | 0;
  i2 = i3 >> 2;
  if (!i1) {
   i6 = 0;
   i5 = 0;
   i1 = i3;
  } else i12 = 8;
 } else {
  i3 = (HEAP32[i9 >> 2] | 0) - i2 | 0;
  i1 = 1073741823;
  i2 = i3 >> 2;
  i12 = 8;
 }
 if ((i12 | 0) == 8) {
  i6 = i1;
  i5 = __Znwj(i1 << 2) | 0;
  i1 = i3;
 }
 _memset(i5 + (i2 << 2) | 0, 0, i10 << 2 | 0) | 0;
 _memcpy(i5 | 0, i7 | 0, i1 | 0) | 0;
 HEAP32[i11 >> 2] = i5;
 HEAP32[i9 >> 2] = i5 + (i2 + i10 << 2);
 HEAP32[i8 >> 2] = i5 + (i6 << 2);
 if (!i4) return;
 __ZdlPv(i4);
 return;
}

function __ZL25default_terminate_handlerv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i7 = i1 + 32 | 0;
 i3 = i1 + 24 | 0;
 i8 = i1 + 16 | 0;
 i6 = i1;
 i5 = i1 + 36 | 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if ((i1 | 0) != 0 ? (i4 = HEAP32[i1 >> 2] | 0, (i4 | 0) != 0) : 0) {
  i1 = i4 + 48 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i1 = HEAP32[i1 + 4 >> 2] | 0;
  if (!((i2 & -256 | 0) == 1126902528 & (i1 | 0) == 1129074247)) {
   HEAP32[i3 >> 2] = HEAP32[5934];
   _abort_message(40005, i3);
  }
  if ((i2 | 0) == 1126902529 & (i1 | 0) == 1129074247) i1 = HEAP32[i4 + 44 >> 2] | 0; else i1 = i4 + 80 | 0;
  HEAP32[i5 >> 2] = i1;
  i4 = HEAP32[i4 >> 2] | 0;
  i1 = HEAP32[i4 + 4 >> 2] | 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[15952 >> 2] | 0) + 16 >> 2] & 15](15952, i4, i5) | 0) {
   i8 = HEAP32[i5 >> 2] | 0;
   i5 = HEAP32[5934] | 0;
   i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 8 >> 2] & 127](i8) | 0;
   HEAP32[i6 >> 2] = i5;
   HEAP32[i6 + 4 >> 2] = i1;
   HEAP32[i6 + 8 >> 2] = i8;
   _abort_message(39919, i6);
  } else {
   HEAP32[i8 >> 2] = HEAP32[5934];
   HEAP32[i8 + 4 >> 2] = i1;
   _abort_message(39964, i8);
  }
 }
 _abort_message(40043, i7);
}

function __ZNSt3__16vectorIcNS_9allocatorIcEEE9push_backERKc(i12, i11) {
 i12 = i12 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0;
 i9 = i12 + 4 | 0;
 i1 = HEAP32[i9 >> 2] | 0;
 i10 = i12 + 8 | 0;
 if ((i1 | 0) != (HEAP32[i10 >> 2] | 0)) {
  HEAP8[i1 >> 0] = HEAP8[i11 >> 0] | 0;
  HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 1;
  return;
 }
 i2 = HEAP32[i12 >> 2] | 0;
 i3 = i2;
 i4 = i1 - i3 + 1 | 0;
 if ((i4 | 0) < 0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i12);
  i3 = HEAP32[i12 >> 2] | 0;
  i1 = HEAP32[i10 >> 2] | 0;
  i2 = i3;
 }
 i8 = i2;
 i1 = i1 - i8 | 0;
 if (i1 >>> 0 < 1073741823) {
  i1 = i1 << 1;
  i1 = i1 >>> 0 < i4 >>> 0 ? i4 : i1;
  i5 = HEAP32[i9 >> 2] | 0;
  i4 = i5 - i8 | 0;
  if (!i1) {
   i7 = 0;
   i6 = 0;
   i1 = i5;
  } else i13 = 8;
 } else {
  i4 = HEAP32[i9 >> 2] | 0;
  i1 = 2147483647;
  i5 = i4;
  i4 = i4 - i8 | 0;
  i13 = 8;
 }
 if ((i13 | 0) == 8) {
  i7 = i1;
  i6 = __Znwj(i1) | 0;
  i1 = i5;
 }
 HEAP8[i6 + i4 >> 0] = HEAP8[i11 >> 0] | 0;
 i11 = i1 - i8 | 0;
 i13 = i6 + (i4 - i11) | 0;
 _memcpy(i13 | 0, i2 | 0, i11 | 0) | 0;
 HEAP32[i12 >> 2] = i13;
 HEAP32[i9 >> 2] = i6 + (i4 + 1);
 HEAP32[i10 >> 2] = i6 + i7;
 if (!i3) return;
 __ZdlPv(i3);
 return;
}

function __ZNSt3__111make_sharedI8maxiKickJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0;
 i2 = __Znwj(480) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22392;
 i3 = i2 + 24 | 0;
 HEAP8[i2 + 48 >> 0] = 0;
 HEAP8[i2 + 49 >> 0] = 0;
 HEAP8[i2 + 50 >> 0] = 0;
 HEAPF64[i2 + 56 >> 3] = 0.0;
 HEAP8[i2 + 64 >> 0] = 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAPF64[i2 + 88 >> 3] = 1.0;
 HEAPF64[i2 + 104 >> 3] = 0.0;
 i3 = i2 + 432 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 d4 = +(HEAP32[5083] | 0);
 d5 = 1.0 - +Math_pow(.01, +(1.0 / (d4 * 0.0 * .001)));
 HEAPF64[i2 + 160 >> 3] = d5;
 i3 = i2 + 16 | 0;
 HEAPF64[i3 >> 3] = 200.0;
 d5 = +Math_pow(.01, +(1.0 / (d4 * .001)));
 HEAPF64[i2 + 168 >> 3] = d5;
 HEAPF64[i2 + 176 >> 3] = 1.0;
 d4 = +Math_pow(.01, +(1.0 / (d4 * 500.0 * .001)));
 HEAPF64[i2 + 184 >> 3] = d4;
 HEAP32[i2 + 204 >> 2] = 1;
 HEAP32[i2 + 200 >> 2] = 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__16vectorIfNS_9allocatorIfEEEC2ERKS3_(i7, i4) {
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 HEAP32[i7 >> 2] = 0;
 i8 = i7 + 4 | 0;
 HEAP32[i8 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 i6 = i4 + 4 | 0;
 i2 = (HEAP32[i6 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) | 0;
 i3 = i2 >> 2;
 if (!i3) return;
 if (!(i3 >>> 0 > 1073741823 ? (__THREW__ = 0, invoke_vi(296, i7 | 0), i9 = __THREW__, __THREW__ = 0, i9 & 1) : 0)) i5 = 4;
 if ((i5 | 0) == 4 ? (__THREW__ = 0, i1 = invoke_ii(91, i2 | 0) | 0, i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) {
  HEAP32[i8 >> 2] = i1;
  HEAP32[i7 >> 2] = i1;
  HEAP32[i7 + 8 >> 2] = i1 + (i3 << 2);
  i2 = HEAP32[i4 >> 2] | 0;
  i3 = HEAP32[i6 >> 2] | 0;
  if ((i2 | 0) == (i3 | 0)) return;
  i4 = i1 + (((i3 + -4 - i2 | 0) >>> 2) + 1 << 2) | 0;
  while (1) {
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   i2 = i2 + 4 | 0;
   if ((i2 | 0) == (i3 | 0)) break; else i1 = i1 + 4 | 0;
  }
  HEAP32[i8 >> 2] = i4;
  return;
 }
 i3 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i7 >> 2] | 0;
 if (!i1) ___resumeException(i3 | 0);
 i2 = HEAP32[i8 >> 2] | 0;
 if ((i2 | 0) != (i1 | 0)) HEAP32[i8 >> 2] = i2 + (~((i2 + -4 - i1 | 0) >>> 2) << 2);
 __ZdlPv(i1);
 ___resumeException(i3 | 0);
}

function __ZN21maxiFFTOctaveAnalyzer5setupEfii(i10, d2, i4, i1) {
 i10 = i10 | 0;
 d2 = +d2;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i3 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, d8 = 0.0, i9 = 0;
 i3 = i10 + 4 | 0;
 HEAP32[i3 >> 2] = i4;
 d8 = d2 * .5 / +(i4 | 0);
 HEAPF32[i10 + 16 >> 2] = d8;
 i9 = i10 + 8 | 0;
 HEAP32[i9 >> 2] = i4;
 d6 = +_exp2((i1 | 0) == 0 ? 1.0 : 1.0 / +(i1 | 0));
 HEAPF32[i10 + 24 >> 2] = d6;
 HEAPF32[i10 + 20 >> 2] = 55.0;
 i7 = __Znaj(i4 >>> 0 > 1073741823 ? -1 : i4 << 2) | 0;
 HEAP32[i10 + 48 >> 2] = i7;
 if ((i4 | 0) > 0) {
  i3 = HEAP32[i3 >> 2] | 0;
  d2 = 55.0;
  i1 = 0;
  d5 = d8;
  i4 = 0;
  while (1) {
   if (d5 > d2) do {
    i1 = i1 + 1 | 0;
    d2 = d2 * d6;
   } while (d5 > d2);
   HEAP32[i7 + (i4 << 2) >> 2] = i1;
   i4 = i4 + 1 | 0;
   if ((i4 | 0) >= (i3 | 0)) break; else d5 = d5 + d8;
  }
 } else i1 = 0;
 HEAP32[i9 >> 2] = i1;
 i9 = i1 >>> 0 > 1073741823 ? -1 : i1 << 2;
 i7 = __Znaj(i9) | 0;
 HEAP32[i10 + 28 >> 2] = i7;
 i7 = __Znaj(i9) | 0;
 HEAP32[i10 + 32 >> 2] = i7;
 i9 = __Znaj(i9) | 0;
 HEAP32[i10 + 36 >> 2] = i9;
 HEAP32[i10 + 40 >> 2] = 0;
 HEAPF32[i10 + 44 >> 2] = .8999999761581421;
 HEAPF32[i10 + 56 >> 2] = 1.0;
 HEAPF32[i10 + 52 >> 2] = 0.0;
 return;
}

function __ZN12maxiEnvelope4lineEiRNSt3__16vectorIdNS0_9allocatorIdEEEE(i10, i9, i2) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 var d1 = 0.0, d3 = 0.0, d4 = 0.0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0;
 if ((HEAP32[i10 + 40 >> 2] | 0) != 1) {
  HEAPF64[i10 + 8 >> 3] = 0.0;
  d6 = 0.0;
  return +d6;
 }
 i7 = i10 + 44 | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 d3 = 4.0 / (+HEAPF64[i5 + (i8 + 1 << 3) >> 3] * .0044);
 HEAPF64[i10 >> 3] = d3;
 i2 = i8 + 2 | 0;
 HEAPF64[i10 + 32 >> 3] = +HEAPF64[i5 + (i2 << 3) >> 3];
 d4 = +HEAPF64[i5 + (i8 << 3) >> 3];
 HEAPF64[i10 + 24 >> 3] = d4;
 i5 = i10 + 48 | 0;
 d1 = +HEAPF64[i5 >> 3];
 d6 = d4 - d1;
 do if (!(d6 > 1.0e-07 & (i8 | 0) < (i9 | 0))) {
  if (d6 < -1.0e-07 & (i8 | 0) < (i9 | 0)) {
   d1 = d1 - -(d4 - +HEAPF64[i10 + 16 >> 3]) / (+(HEAP32[5083] | 0) / d3);
   HEAPF64[i5 >> 3] = d1;
   break;
  }
  if ((i8 | 0) > (i9 + -1 | 0)) {
   HEAP32[i7 >> 2] = i9 + -2;
   break;
  } else {
   HEAP32[i7 >> 2] = i2;
   HEAPF64[i10 + 16 >> 3] = d4;
   break;
  }
 } else {
  d1 = d1 + (d4 - +HEAPF64[i10 + 16 >> 3]) / (+(HEAP32[5083] | 0) / d3);
  HEAPF64[i5 >> 3] = d1;
 } while (0);
 HEAPF64[i10 + 8 >> 3] = d1;
 d6 = d1;
 return +d6;
}

function _memchr(i1, i5, i2) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = i5 & 255;
 i3 = (i2 | 0) != 0;
 L1 : do if (i3 & (i1 & 3 | 0) != 0) {
  i4 = i5 & 255;
  while (1) {
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) {
    i7 = 6;
    break L1;
   }
   i1 = i1 + 1 | 0;
   i2 = i2 + -1 | 0;
   i3 = (i2 | 0) != 0;
   if (!(i3 & (i1 & 3 | 0) != 0)) {
    i7 = 5;
    break;
   }
  }
 } else i7 = 5; while (0);
 if ((i7 | 0) == 5) if (i3) i7 = 6; else i2 = 0;
 L8 : do if ((i7 | 0) == 6) {
  i4 = i5 & 255;
  if ((HEAP8[i1 >> 0] | 0) != i4 << 24 >> 24) {
   i3 = Math_imul(i6, 16843009) | 0;
   L11 : do if (i2 >>> 0 > 3) while (1) {
    i6 = HEAP32[i1 >> 2] ^ i3;
    if ((i6 & -2139062144 ^ -2139062144) & i6 + -16843009) break;
    i1 = i1 + 4 | 0;
    i2 = i2 + -4 | 0;
    if (i2 >>> 0 <= 3) {
     i7 = 11;
     break L11;
    }
   } else i7 = 11; while (0);
   if ((i7 | 0) == 11) if (!i2) {
    i2 = 0;
    break;
   }
   while (1) {
    if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) break L8;
    i1 = i1 + 1 | 0;
    i2 = i2 + -1 | 0;
    if (!i2) {
     i2 = 0;
     break;
    }
   }
  }
 } while (0);
 return ((i2 | 0) != 0 ? i1 : 0) | 0;
}

function __ZN7maxiDyn8compressEd(i7, d6) {
 i7 = i7 | 0;
 d6 = +d6;
 var d1 = 0.0, i2 = 0, i3 = 0, d4 = 0.0, i5 = 0, i8 = 0, i9 = 0, i10 = 0;
 d4 = +Math_abs(+d6);
 i5 = i7 + 72 | 0;
 i2 = (HEAP32[i5 >> 2] | 0) == 1;
 if (d4 > +HEAPF64[i7 + 24 >> 3]) if (!i2 ? (HEAP32[i7 + 68 >> 2] = 0, HEAP32[i7 + 80 >> 2] = 0, HEAP32[i5 >> 2] = 1, i3 = i7 + 16 | 0, +HEAPF64[i3 >> 3] == 0.0) : 0) {
  HEAPF64[i3 >> 3] = +HEAPF64[i7 + 8 >> 3];
  i8 = 7;
 } else i8 = 7; else if (i2) i8 = 7; else {
  i9 = i7 + 16 | 0;
  i10 = i7 + 8 | 0;
  i2 = i10;
  i3 = i9;
  d4 = +HEAPF64[i10 >> 3];
  d1 = +HEAPF64[i9 >> 3];
 }
 if ((i8 | 0) == 7) {
  i3 = i7 + 16 | 0;
  d1 = +HEAPF64[i3 >> 3];
  i2 = i7 + 8 | 0;
  d4 = +HEAPF64[i2 >> 3];
  if (d1 < d4 + -1.0) {
   d1 = d1 * (+HEAPF64[i7 + 40 >> 3] + 1.0);
   HEAPF64[i3 >> 3] = d1;
  }
 }
 if (!(d1 >= d4 + -1.0)) {
  if (d1 > 0.0 ? (HEAP32[i7 + 80 >> 2] | 0) == 1 : 0) i8 = 12;
 } else {
  HEAP32[i5 >> 2] = 0;
  HEAP32[i7 + 80 >> 2] = 1;
  if (d1 > 0.0) i8 = 12;
 }
 if ((i8 | 0) == 12) {
  d1 = d1 * +HEAPF64[i7 + 48 >> 3];
  HEAPF64[i3 >> 3] = d1;
 }
 d6 = d6 / (d1 + 1.0);
 HEAPF64[i7 + 32 >> 3] = d6;
 return +(d6 * (+Math_log(+(+HEAPF64[i2 >> 3])) + 1.0));
}

function __ZN10maxiSample4playEd(i7, d2) {
 i7 = i7 | 0;
 d2 = +d2;
 var d1 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d8 = 0.0, d9 = 0.0, d10 = 0.0;
 i3 = i7 + 40 | 0;
 d1 = +HEAPF64[i3 >> 3] + +HEAPF32[5082] * d2 / +((HEAP32[5083] | 0) / (HEAP32[i7 + 104 >> 2] | 0) | 0 | 0);
 HEAPF64[i3 >> 3] = d1;
 i4 = ~~d1;
 if (!(d2 >= 0.0)) {
  if ((i4 | 0) < 0) {
   d1 = +(HEAP32[i7 + 108 >> 2] | 0);
   HEAPF64[i3 >> 3] = d1;
  }
  d8 = d1 - +Math_floor(+d1);
  d9 = d1 + -1.0;
  d2 = d1 + -2.0;
  i6 = HEAP32[i7 + 128 >> 2] | 0;
  d2 = ((-1.0 - d8) * +(HEAP16[i6 + ((!(d9 >= 0.0) ? 0 : ~~d9) << 1) >> 1] | 0) + d8 * +(HEAP16[i6 + ((!(d2 >= 0.0) ? 0 : ~~d2) << 1) >> 1] | 0)) / 32767.0;
  HEAPF64[i7 + 64 >> 3] = d2;
  return +d2;
 } else {
  i5 = HEAP32[i7 + 108 >> 2] | 0;
  i6 = i5 + -1 | 0;
  if ((i4 | 0) >= (i6 | 0)) {
   HEAPF64[i3 >> 3] = 1.0;
   d1 = 1.0;
  }
  d2 = d1 - +Math_floor(+d1);
  d10 = d1 + 1.0;
  d8 = +(i5 | 0);
  d9 = d1 + 2.0;
  i5 = HEAP32[i7 + 128 >> 2] | 0;
  d9 = ((1.0 - d2) * +(HEAP16[i5 + ((d10 < d8 ? ~~d10 : i6) << 1) >> 1] | 0) + d2 * +(HEAP16[i5 + ((d9 < d8 ? ~~d9 : i6) << 1) >> 1] | 0)) / 32767.0;
  HEAPF64[i7 + 64 >> 3] = d9;
  return +d9;
 }
 return 0.0;
}

function __ZN10emscripten8internal12SetterPolicyIM7maxiFFTFvNSt3__16vectorIfNS3_9allocatorIfEEEEEE3setIS2_EEvRKS9_RT_PS7_(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i5 = i6;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 __ZNSt3__16vectorIfNS_9allocatorIfEEEC2ERKS3_(i5, i4);
 __THREW__ = 0;
 invoke_vii(i1 | 0, i2 | 0, i5 | 0);
 i7 = __THREW__;
 __THREW__ = 0;
 if (i7 & 1) {
  i3 = ___cxa_find_matching_catch() | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  if (!i4) ___resumeException(i3 | 0);
  i1 = i5 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if ((i2 | 0) != (i4 | 0)) HEAP32[i1 >> 2] = i2 + (~((i2 + -4 - i4 | 0) >>> 2) << 2);
  __ZdlPv(i4);
  ___resumeException(i3 | 0);
 } else {
  i3 = HEAP32[i5 >> 2] | 0;
  if (!i3) {
   STACKTOP = i6;
   return;
  }
  i1 = i5 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if ((i2 | 0) != (i3 | 0)) HEAP32[i1 >> 2] = i2 + (~((i2 + -4 - i3 | 0) >>> 2) << 2);
  __ZdlPv(i3);
  STACKTOP = i6;
  return;
 }
}

function __ZNSt3__111make_sharedI15maxiTimestretchI14hannWinFunctorEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS5_EEE4typeEDpOT0_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(56) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 23476;
 i4 = ~~(+(HEAP32[5083] | 0) * .5) >>> 0;
 HEAP32[i2 + 32 >> 2] = i4;
 i1 = _malloc(i4 << 2) | 0;
 i3 = i2 + 36 | 0;
 HEAP32[i3 >> 2] = i1;
 if ((((((((i4 | 0) != 0 ? (HEAP32[i1 >> 2] = 0, i4 >>> 0 > 1) : 0) ? (HEAP32[i1 + 4 >> 2] = 0, (i4 | 0) != 2) : 0) ? (HEAP32[i1 + 8 >> 2] = 0, (i4 | 0) != 3) : 0) ? (HEAP32[i1 + 12 >> 2] = 0, (i4 | 0) != 4) : 0) ? (HEAP32[i1 + 16 >> 2] = 0, (i4 | 0) != 5) : 0) ? (HEAP32[i1 + 20 >> 2] = 0, (i4 | 0) != 6) : 0) ? (HEAP32[i1 + 24 >> 2] = 0, (i4 | 0) != 7) : 0) {
  i1 = 7;
  do {
   HEAP32[(HEAP32[i3 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != (i4 | 0));
 }
 i4 = i2 + 16 | 0;
 HEAPF64[i4 >> 3] = 0.0;
 i3 = i2 + 40 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i5 >> 2] = i4;
 HEAP32[i5 + 4 >> 2] = i2;
 return;
}

function __ZN10maxiSampleD2Ev(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i7 + 128 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 i6 = i7 + 132 | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i2 | 0) != (i1 | 0)) HEAP32[i6 >> 2] = i2 + (~((i2 + -2 - i1 | 0) >>> 1) << 1);
 i4 = i7 + 116 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i5 = i7 + 120 | 0;
 i2 = HEAP32[i5 >> 2] | 0;
 if ((i2 | 0) != (i1 | 0)) HEAP32[i5 >> 2] = i2 + (~((i2 + -8 - i1 | 0) >>> 3) << 3);
 _printf(25888, i8) | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 i2 = i1;
 if (i1) {
  i3 = HEAP32[i6 >> 2] | 0;
  if ((i3 | 0) != (i1 | 0)) HEAP32[i6 >> 2] = i3 + (~((i3 + -2 - i2 | 0) >>> 1) << 1);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (!i1) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
  STACKTOP = i8;
  return;
 }
 i2 = HEAP32[i5 >> 2] | 0;
 if ((i2 | 0) != (i1 | 0)) HEAP32[i5 >> 2] = i2 + (~((i2 + -8 - i1 | 0) >>> 3) << 3);
 __ZdlPv(i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0;
 i9 = i11 + 4 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 i2 = i1;
 i5 = ((HEAP32[i9 >> 2] | 0) - i2 >> 3) + 1 | 0;
 if (i5 >>> 0 > 536870911) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i11);
  i2 = HEAP32[i11 >> 2] | 0;
  i1 = i2;
 }
 i8 = i11 + 8 | 0;
 i4 = i1;
 i3 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 if (i3 >> 3 >>> 0 < 268435455) {
  i3 = i3 >> 2;
  i3 = i3 >>> 0 < i5 >>> 0 ? i5 : i3;
  i5 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
  i4 = i5 >> 3;
  if (!i3) {
   i7 = 0;
   i6 = 0;
   i3 = i5;
  } else i12 = 6;
 } else {
  i5 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
  i3 = 536870911;
  i4 = i5 >> 3;
  i12 = 6;
 }
 if ((i12 | 0) == 6) {
  i7 = i3;
  i6 = __Znwj(i3 << 3) | 0;
  i3 = i5;
 }
 HEAPF64[i6 + (i4 << 3) >> 3] = +HEAPF64[i10 >> 3];
 _memcpy(i6 | 0, i1 | 0, i3 | 0) | 0;
 HEAP32[i11 >> 2] = i6;
 HEAP32[i9 >> 2] = i6 + (i4 + 1 << 3);
 HEAP32[i8 >> 2] = i6 + (i7 << 3);
 if (!i2) return;
 __ZdlPv(i2);
 return;
}

function __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0;
 i9 = i11 + 4 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 i2 = i1;
 i5 = ((HEAP32[i9 >> 2] | 0) - i2 >> 2) + 1 | 0;
 if (i5 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i11);
  i2 = HEAP32[i11 >> 2] | 0;
  i1 = i2;
 }
 i8 = i11 + 8 | 0;
 i4 = i1;
 i3 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 if (i3 >> 2 >>> 0 < 536870911) {
  i3 = i3 >> 1;
  i3 = i3 >>> 0 < i5 >>> 0 ? i5 : i3;
  i5 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
  i4 = i5 >> 2;
  if (!i3) {
   i7 = 0;
   i6 = 0;
   i3 = i5;
  } else i12 = 6;
 } else {
  i5 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
  i3 = 1073741823;
  i4 = i5 >> 2;
  i12 = 6;
 }
 if ((i12 | 0) == 6) {
  i7 = i3;
  i6 = __Znwj(i3 << 2) | 0;
  i3 = i5;
 }
 HEAP32[i6 + (i4 << 2) >> 2] = HEAP32[i10 >> 2];
 _memcpy(i6 | 0, i1 | 0, i3 | 0) | 0;
 HEAP32[i11 >> 2] = i6;
 HEAP32[i9 >> 2] = i6 + (i4 + 1 << 2);
 HEAP32[i8 >> 2] = i6 + (i7 << 2);
 if (!i2) return;
 __ZdlPv(i2);
 return;
}

function __ZNSt3__16vectorIfNS_9allocatorIfEEE21__push_back_slow_pathIRKfEEvOT_(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0;
 i9 = i11 + 4 | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 i2 = i1;
 i5 = ((HEAP32[i9 >> 2] | 0) - i2 >> 2) + 1 | 0;
 if (i5 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i11);
  i2 = HEAP32[i11 >> 2] | 0;
  i1 = i2;
 }
 i8 = i11 + 8 | 0;
 i4 = i1;
 i3 = (HEAP32[i8 >> 2] | 0) - i4 | 0;
 if (i3 >> 2 >>> 0 < 536870911) {
  i3 = i3 >> 1;
  i3 = i3 >>> 0 < i5 >>> 0 ? i5 : i3;
  i5 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
  i4 = i5 >> 2;
  if (!i3) {
   i7 = 0;
   i6 = 0;
   i3 = i5;
  } else i12 = 6;
 } else {
  i5 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
  i3 = 1073741823;
  i4 = i5 >> 2;
  i12 = 6;
 }
 if ((i12 | 0) == 6) {
  i7 = i3;
  i6 = __Znwj(i3 << 2) | 0;
  i3 = i5;
 }
 HEAP32[i6 + (i4 << 2) >> 2] = HEAP32[i10 >> 2];
 _memcpy(i6 | 0, i1 | 0, i3 | 0) | 0;
 HEAP32[i11 >> 2] = i6;
 HEAP32[i9 >> 2] = i6 + (i4 + 1 << 2);
 HEAP32[i8 >> 2] = i6 + (i7 << 2);
 if (!i2) return;
 __ZdlPv(i2);
 return;
}

function __ZNSt3__111make_sharedI16maxiPitchStretchI14hannWinFunctorEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS5_EEE4typeEDpOT0_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(72) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 23364;
 i4 = ~~(+(HEAP32[5083] | 0) * .5) >>> 0;
 HEAP32[i2 + 32 >> 2] = i4;
 i1 = _malloc(i4 << 2) | 0;
 i3 = i2 + 36 | 0;
 HEAP32[i3 >> 2] = i1;
 if ((((((((i4 | 0) != 0 ? (HEAP32[i1 >> 2] = 0, i4 >>> 0 > 1) : 0) ? (HEAP32[i1 + 4 >> 2] = 0, (i4 | 0) != 2) : 0) ? (HEAP32[i1 + 8 >> 2] = 0, (i4 | 0) != 3) : 0) ? (HEAP32[i1 + 12 >> 2] = 0, (i4 | 0) != 4) : 0) ? (HEAP32[i1 + 16 >> 2] = 0, (i4 | 0) != 5) : 0) ? (HEAP32[i1 + 20 >> 2] = 0, (i4 | 0) != 6) : 0) ? (HEAP32[i1 + 24 >> 2] = 0, (i4 | 0) != 7) : 0) {
  i1 = 7;
  do {
   HEAP32[(HEAP32[i3 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != (i4 | 0));
 }
 HEAPF64[i2 + 40 >> 3] = 0.0;
 HEAP32[i2 + 48 >> 2] = 0;
 i4 = i2 + 16 | 0;
 HEAPF64[i4 >> 3] = 0.0;
 HEAPF64[i2 + 64 >> 3] = 0.0;
 HEAP32[i5 >> 2] = i4;
 HEAP32[i5 + 4 >> 2] = i2;
 return;
}

function _exp2(d1) {
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i3 = i2 & 2147483647;
 do if (i3 >>> 0 > 1083174911) {
  i2 = (i2 | 0) > -1 | (i2 | 0) == -1 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 4294967295;
  if (i2 & i3 >>> 0 > 1083179007) {
   d1 = d1 * 8988465674311579538646525.0e283;
   break;
  }
  if (i3 >>> 0 <= 2146435071) if (!(d1 <= -1075.0) | i2) {
   i4 = 9;
   break;
  } else {
   d1 = 0.0;
   break;
  } else {
   d1 = -1.0 / d1;
   break;
  }
 } else if (i3 >>> 0 < 1016070144) d1 = d1 + 1.0; else i4 = 9; while (0);
 if ((i4 | 0) == 9) {
  d6 = d1 + 26388279066624.0;
  HEAPF64[tempDoublePtr >> 3] = d6;
  i4 = (HEAP32[tempDoublePtr >> 2] | 0) + 128 | 0;
  i3 = i4 << 1 & 510;
  d5 = +HEAPF64[16192 + (i3 << 3) >> 3];
  d1 = d1 - (d6 + -26388279066624.0) - +HEAPF64[16192 + ((i3 | 1) << 3) >> 3];
  d1 = +_scalbn(d5 + d5 * d1 * (d1 * (d1 * (d1 * (d1 * 1.3333559164630223e-03 + .009618129842126066) + .0555041086648214) + .2402265069591) + .6931471805599453), (i4 & -256 | 0) / 256 | 0);
 }
 return +d1;
}

function __ZN8maxiIFFT5setupEiii(i4, i2, i5, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var d1 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0;
 i8 = __Znwj(24) | 0;
 HEAP32[i8 >> 2] = i2;
 i7 = (i2 | 0) / 2 | 0;
 HEAP32[i8 + 4 >> 2] = i7;
 i6 = i2 << 2;
 i9 = _malloc(i6) | 0;
 HEAP32[i8 + 8 >> 2] = i9;
 i9 = _malloc(i6) | 0;
 HEAP32[i8 + 16 >> 2] = i9;
 i9 = _malloc(i6) | 0;
 HEAP32[i8 + 12 >> 2] = i9;
 i9 = _malloc(i6) | 0;
 HEAP32[i8 + 20 >> 2] = i9;
 HEAP32[i4 + 36 >> 2] = i8;
 HEAP32[i4 + 32 >> 2] = i2;
 HEAP32[i4 + 12 >> 2] = i5;
 HEAP32[i4 + 16 >> 2] = i7;
 HEAP32[i4 + 20 >> 2] = i3;
 i3 = _malloc(i6) | 0;
 HEAP32[i4 + 4 >> 2] = i3;
 i2 = _malloc(i6) | 0;
 HEAP32[i4 >> 2] = i2;
 _memset(i3 | 0, 0, i5 << 2 | 0) | 0;
 HEAP32[i4 + 24 >> 2] = 0;
 i3 = _malloc(i6) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 _memset(i3 | 0, 0, i6 | 0) | 0;
 if ((i5 | 0) <= 0) return;
 d1 = +(i5 + -1 | 0);
 i2 = 0;
 do {
  d10 = .5 - +Math_cos(+(+(i2 | 0) * 6.283185307179586 / d1)) * .5;
  HEAPF32[i3 + (i2 << 2) >> 2] = d10;
  i2 = i2 + 1 | 0;
 } while ((i2 | 0) != (i5 | 0));
 return;
}

function __ZNSt3__111make_sharedI14maxiPitchShiftI14hannWinFunctorEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS5_EEE4typeEDpOT0_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(56) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 23420;
 i4 = ~~(+(HEAP32[5083] | 0) * .5) >>> 0;
 HEAP32[i2 + 36 >> 2] = i4;
 i1 = _malloc(i4 << 2) | 0;
 i3 = i2 + 40 | 0;
 HEAP32[i3 >> 2] = i1;
 if ((((((((i4 | 0) != 0 ? (HEAP32[i1 >> 2] = 0, i4 >>> 0 > 1) : 0) ? (HEAP32[i1 + 4 >> 2] = 0, (i4 | 0) != 2) : 0) ? (HEAP32[i1 + 8 >> 2] = 0, (i4 | 0) != 3) : 0) ? (HEAP32[i1 + 12 >> 2] = 0, (i4 | 0) != 4) : 0) ? (HEAP32[i1 + 16 >> 2] = 0, (i4 | 0) != 5) : 0) ? (HEAP32[i1 + 20 >> 2] = 0, (i4 | 0) != 6) : 0) ? (HEAP32[i1 + 24 >> 2] = 0, (i4 | 0) != 7) : 0) {
  i1 = 7;
  do {
   HEAP32[(HEAP32[i3 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) != (i4 | 0));
 }
 i4 = i2 + 16 | 0;
 HEAPF64[i4 >> 3] = 0.0;
 HEAP32[i2 + 24 >> 2] = 0;
 HEAPF64[i2 + 48 >> 3] = 0.0;
 HEAP32[i5 >> 2] = i4;
 HEAP32[i5 + 4 >> 2] = i2;
 return;
}

function __ZN7maxiDyn10compressorEddddd(i10, d8, d9, d1, d5, d7) {
 i10 = i10 | 0;
 d8 = +d8;
 d9 = +d9;
 d1 = +d1;
 d5 = +d5;
 d7 = +d7;
 var i2 = 0, d3 = 0.0, i4 = 0, i6 = 0, i11 = 0, i12 = 0;
 i12 = +Math_abs(+d8) > d1;
 i6 = i10 + 72 | 0;
 i2 = (HEAP32[i6 >> 2] | 0) == 1;
 if (i12) if (!i2 ? (HEAP32[i10 + 68 >> 2] = 0, HEAP32[i10 + 80 >> 2] = 0, HEAP32[i6 >> 2] = 1, i4 = i10 + 16 | 0, +HEAPF64[i4 >> 3] == 0.0) : 0) {
  HEAPF64[i4 >> 3] = d9;
  i11 = 7;
 } else i11 = 7; else if (i2) i11 = 7; else {
  i12 = i10 + 16 | 0;
  i2 = i12;
  d3 = d9 + -1.0;
  d1 = +HEAPF64[i12 >> 3];
 }
 if ((i11 | 0) == 7) {
  i2 = i10 + 16 | 0;
  d1 = +HEAPF64[i2 >> 3];
  d3 = d9 + -1.0;
  if (d1 < d3) {
   d1 = (d5 + 1.0) * d1;
   HEAPF64[i2 >> 3] = d1;
  }
 }
 if (!(d1 >= d3)) {
  if (d1 > 0.0 ? (HEAP32[i10 + 80 >> 2] | 0) == 1 : 0) i11 = 12;
 } else {
  HEAP32[i6 >> 2] = 0;
  HEAP32[i10 + 80 >> 2] = 1;
  if (d1 > 0.0) i11 = 12;
 }
 if ((i11 | 0) == 12) {
  d1 = d1 * d7;
  HEAPF64[i2 >> 3] = d1;
 }
 d8 = d8 / (d1 + 1.0);
 HEAPF64[i10 + 32 >> 3] = d8;
 return +(d8 * (+Math_log(+d9) + 1.0));
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN9maxiGrainI14hannWinFunctorE4playEv(i9) {
 i9 = i9 | 0;
 var d1 = 0.0, i2 = 0, d3 = 0.0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i6 = i9 + 4 | 0;
 i7 = i9 + 36 | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 if (!(HEAP8[i6 >> 0] | 0)) {
  d5 = +HEAPF64[(HEAP32[i9 + 80 >> 2] | 0) + (i8 << 3) >> 3];
  HEAPF64[i9 + 88 >> 3] = d5;
  i2 = i9 + 16 | 0;
  d1 = +HEAPF64[i9 + 64 >> 3] + +HEAPF64[i2 >> 3];
  HEAPF64[i2 >> 3] = d1;
  i4 = HEAP32[(HEAP32[i9 + 8 >> 2] | 0) + 108 >> 2] | 0;
  d3 = +(i4 | 0);
  if (!(d1 >= d3)) {
   if (d1 < 0.0) {
    d1 = d1 + d3;
    HEAPF64[i2 >> 3] = d1;
   }
  } else {
   d1 = d1 - d3;
   HEAPF64[i2 >> 3] = d1;
  }
  i11 = ~~+Math_floor(+d1);
  d1 = d1 - +(i11 | 0);
  i2 = i11 + 1 | 0;
  i10 = HEAP32[i9 + 84 >> 2] | 0;
  d1 = ((1.0 - d1) * +(HEAP16[i10 + (i11 << 1) >> 1] | 0) + d1 * +(HEAP16[i10 + (((i2 | 0) >= (i4 | 0) ? 0 : i2) << 1) >> 1] | 0)) / 32767.0 * d5;
 } else d1 = 0.0;
 i11 = i8 + 1 | 0;
 HEAP32[i7 >> 2] = i11;
 if ((i11 | 0) != (HEAP32[i9 + 40 >> 2] | 0)) return +d1;
 HEAP8[i6 >> 0] = 1;
 return +d1;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiDistortionEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDelaylineEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDCBlockerEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiLagExpIdEEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI12maxiEnvelopeEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI11maxiFlangerEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiSampleEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiFilterEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiChorusEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiSnareEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiClockEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiKickEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiIFFTEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiHatsEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiSVFEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiOscEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMixEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMapEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiFFTEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiEnvEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiDynEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7convertEEE11val_deleterclEPKv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = __emval_call(HEAP32[i2 >> 2] | 0, 0, 20684, i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(286, i3 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i2 >> 2] | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i1 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i1 | 0);
 } else {
  HEAP32[i2 >> 2] = 1;
  __THREW__ = 0;
  invoke_vi(286, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else {
   STACKTOP = i1;
   return;
  }
 }
}

function ___fwritex(i3, i4, i6) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i7 = 0;
 i1 = i6 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) if (!(___towrite(i6) | 0)) {
  i2 = HEAP32[i1 >> 2] | 0;
  i5 = 4;
 } else i1 = 0; else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i7 = i6 + 20 | 0;
  i5 = HEAP32[i7 >> 2] | 0;
  if ((i2 - i5 | 0) >>> 0 < i4 >>> 0) {
   i1 = FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 15](i6, i3, i4) | 0;
   break;
  }
  L9 : do if ((HEAP8[i6 + 75 >> 0] | 0) > -1) {
   i1 = i4;
   while (1) {
    if (!i1) {
     i2 = i5;
     i1 = 0;
     break L9;
    }
    i2 = i1 + -1 | 0;
    if ((HEAP8[i3 + i2 >> 0] | 0) == 10) break; else i1 = i2;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 15](i6, i3, i1) | 0) >>> 0 < i1 >>> 0) break L4;
   i4 = i4 - i1 | 0;
   i3 = i3 + i1 | 0;
   i2 = HEAP32[i7 >> 2] | 0;
  } else {
   i2 = i5;
   i1 = 0;
  } while (0);
  _memcpy(i2 | 0, i3 | 0, i4 | 0) | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i4;
  i1 = i1 + i4 | 0;
 } while (0);
 return i1 | 0;
}

function __ZN10emscripten15register_vectorIfEENS_6class_INSt3__16vectorIT_NS2_9allocatorIS4_EEEENS_8internal11NoBaseClassEEEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __embind_register_class(13440, 13464, 13480, 0, 26129, 88, 26132, 0, 26132, 0, i2 | 0, 26134, 284);
 __embind_register_class_constructor(13440, 1, 20548, 26129, 89, 26);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 25;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13440, 25907, 3, 20552, 26664, 14, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 14;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13440, 25917, 4, 20564, 26669, 3, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 90;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13440, 25924, 2, 20580, 26148, 62, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 63;
 __embind_register_class_function(13440, 25929, 3, 20588, 26171, 13, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 14;
 __embind_register_class_function(13440, 25933, 4, 20600, 26675, 2, i2 | 0, 0);
 return;
}

function __ZN10emscripten15register_vectorIcEENS_6class_INSt3__16vectorIT_NS2_9allocatorIS4_EEEENS_8internal11NoBaseClassEEEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __embind_register_class(13360, 13384, 13400, 0, 26129, 85, 26132, 0, 26132, 0, i2 | 0, 26134, 283);
 __embind_register_class_constructor(13360, 1, 20480, 26129, 86, 25);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 24;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13360, 25907, 3, 20484, 26137, 12, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 13;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13360, 25917, 4, 20496, 26142, 7, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 87;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13360, 25924, 2, 20512, 26148, 60, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 61;
 __embind_register_class_function(13360, 25929, 3, 20520, 26171, 11, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 12;
 __embind_register_class_function(13360, 25933, 4, 20532, 26176, 2, i2 | 0, 0);
 return;
}

function __ZN10emscripten15register_vectorIdEENS_6class_INSt3__16vectorIT_NS2_9allocatorIS4_EEEENS_8internal11NoBaseClassEEEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __embind_register_class(13280, 13304, 13320, 0, 26129, 82, 26132, 0, 26132, 0, i2 | 0, 26134, 282);
 __embind_register_class_constructor(13280, 1, 20412, 26129, 83, 24);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 23;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13280, 25907, 3, 20416, 26337, 13, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 11;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13280, 25917, 4, 20428, 26342, 2, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 84;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13280, 25924, 2, 20444, 26148, 58, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 59;
 __embind_register_class_function(13280, 25929, 3, 20452, 26171, 9, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 10;
 __embind_register_class_function(13280, 25933, 4, 20464, 26348, 1, i2 | 0, 0);
 return;
}

function __ZN10emscripten15register_vectorIiEENS_6class_INSt3__16vectorIT_NS2_9allocatorIS4_EEEENS_8internal11NoBaseClassEEEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __embind_register_class(13192, 13216, 13232, 0, 26129, 79, 26132, 0, 26132, 0, i2 | 0, 26134, 281);
 __embind_register_class_constructor(13192, 1, 20344, 26129, 80, 23);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 22;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13192, 25907, 3, 20348, 26137, 9, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 10;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13192, 25917, 4, 20360, 26142, 6, i2 | 0, 0);
 i2 = __Znwj(8) | 0;
 HEAP32[i2 >> 2] = 81;
 HEAP32[i2 + 4 >> 2] = 0;
 __embind_register_class_function(13192, 25924, 2, 20376, 26148, 56, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 57;
 __embind_register_class_function(13192, 25929, 3, 20384, 26171, 7, i2 | 0, 0);
 i2 = __Znwj(4) | 0;
 HEAP32[i2 >> 2] = 8;
 __embind_register_class_function(13192, 25933, 4, 20396, 26176, 1, i2 | 0, 0);
 return;
}

function __ZN10emscripten8internal12GetterPolicyIM7maxiFFTKFNSt3__16vectorIfNS3_9allocatorIfEEEEvEE3getIS2_EEPS7_RKS9_RKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i5 = i4;
 i1 = HEAP32[i2 >> 2] | 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i6 >> 1) | 0;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_vii[i1 & 127](i5, i2);
 __THREW__ = 0;
 i1 = invoke_ii(91, 12) | 0;
 i6 = __THREW__;
 __THREW__ = 0;
 if (!(i6 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  STACKTOP = i4;
  return i1 | 0;
 }
 i3 = ___cxa_find_matching_catch() | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 if (!i4) ___resumeException(i3 | 0);
 i1 = i5 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (i4 | 0)) HEAP32[i1 >> 2] = i2 + (~((i2 + -4 - i4 | 0) >>> 2) << 2);
 __ZdlPv(i4);
 ___resumeException(i3 | 0);
 return 0;
}

function __ZNSt3__111make_sharedI7maxiSVFJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, d4 = 0.0, d5 = 0.0, d6 = 0.0;
 i2 = __Znwj(120) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22292;
 i3 = i2 + 16 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAPF64[i2 + 104 >> 3] = 1.0e3;
 HEAPF64[i2 + 112 >> 3] = 1.0;
 d5 = +Math_tan(+(3141.592653589793 / +(HEAP32[5083] | 0)));
 HEAPF64[i2 + 40 >> 3] = d5;
 HEAPF64[i2 + 48 >> 3] = 1.0;
 HEAPF64[i2 + 56 >> 3] = 1.0;
 d6 = d5 + 1.0;
 d4 = d5 / (d5 * d6 + 1.0);
 HEAPF64[i2 + 64 >> 3] = d4;
 HEAPF64[i2 + 72 >> 3] = d4;
 HEAPF64[i2 + 80 >> 3] = d4 * (d6 * 2.0);
 HEAPF64[i2 + 88 >> 3] = d5 * d4;
 HEAPF64[i2 + 96 >> 3] = d4 * 2.0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN7maxiMix9ambisonicEdRNSt3__16vectorIdNS0_9allocatorIdEEEEddd(i3, d2, i1, d4, d5, d6) {
 i3 = i3 | 0;
 d2 = +d2;
 i1 = i1 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 var d7 = 0.0, d8 = 0.0, d9 = 0.0, d10 = 0.0;
 d9 = d4 > 1.0 ? 1.0 : d4;
 d9 = d9 < 0.0 ? 0.0 : d9;
 d4 = d5 > 1.0 ? 1.0 : d5;
 d4 = d6 < 0.0 ? 0.0 : d6 > 1.0 ? 1.0 : d4 < 0.0 ? 0.0 : d4;
 d7 = 1.0 - d9;
 d8 = +Math_sqrt(+(d7 * d4));
 i3 = HEAP32[i1 >> 2] | 0;
 HEAPF64[i3 >> 3] = (d8 - d6) * d2;
 d5 = 1.0 - d4;
 d7 = +Math_sqrt(+(d7 * d5));
 HEAPF64[i3 + 8 >> 3] = (d7 - d6) * d2;
 d4 = d9 * d4;
 d10 = (+Math_sqrt(+d4) - d6) * d2;
 HEAPF64[i3 + 16 >> 3] = d10;
 d5 = d9 * d5;
 d9 = (+Math_sqrt(+d5) - d6) * d2;
 HEAPF64[i3 + 24 >> 3] = d9;
 HEAPF64[i3 + 32 >> 3] = d8 * d6 * d2;
 HEAPF64[i3 + 40 >> 3] = d7 * d6 * d2;
 d4 = +Math_sqrt(+(d4 * d6)) * d2;
 HEAPF64[i3 + 48 >> 3] = d4;
 d6 = +Math_sqrt(+(d5 * d6)) * d2;
 HEAPF64[i3 + 56 >> 3] = d6;
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(i2, i5, i3, i1, i4) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 HEAP8[i5 + 53 >> 0] = 1;
 do if ((HEAP32[i5 + 4 >> 2] | 0) == (i1 | 0)) {
  HEAP8[i5 + 52 >> 0] = 1;
  i1 = i5 + 16 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) {
   HEAP32[i1 >> 2] = i3;
   HEAP32[i5 + 24 >> 2] = i4;
   HEAP32[i5 + 36 >> 2] = 1;
   if (!((i4 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  if ((i2 | 0) != (i3 | 0)) {
   i4 = i5 + 36 | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  i2 = i5 + 24 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == 2) {
   HEAP32[i2 >> 2] = i4;
   i1 = i4;
  }
  if ((i1 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0) HEAP8[i5 + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZN16maxiPitchStretchI14hannWinFunctorED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i3 = HEAP32[i4 + 12 >> 2] | 0;
 if (i3) {
  i2 = i3 + 8 | 0;
  if ((HEAP32[i2 >> 2] | 0) != 0 ? (i1 = HEAP32[i3 + 4 >> 2] | 0, i5 = (HEAP32[i3 >> 2] | 0) + 4 | 0, i6 = HEAP32[i1 >> 2] | 0, HEAP32[i6 + 4 >> 2] = HEAP32[i5 >> 2], HEAP32[HEAP32[i5 >> 2] >> 2] = i6, HEAP32[i2 >> 2] = 0, (i1 | 0) != (i3 | 0)) : 0) do {
   i6 = i1;
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   __ZdlPv(i6);
  } while ((i1 | 0) != (i3 | 0));
  __ZdlPv(i3);
 }
 i5 = i4 + 16 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i4 = i4 + 20 | 0;
 if (!i1) {
  i6 = HEAP32[i4 >> 2] | 0;
  _free(i6);
  return;
 } else i3 = 0;
 do {
  i2 = HEAP32[(HEAP32[i4 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i2) {
   _free(i2);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i3 + 1 | 0;
 } while (i3 >>> 0 < i1 >>> 0);
 i6 = HEAP32[i4 >> 2] | 0;
 _free(i6);
 return;
}

function __ZN15maxiTimestretchI14hannWinFunctorED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i3 = HEAP32[i4 + 12 >> 2] | 0;
 if (i3) {
  i2 = i3 + 8 | 0;
  if ((HEAP32[i2 >> 2] | 0) != 0 ? (i1 = HEAP32[i3 + 4 >> 2] | 0, i5 = (HEAP32[i3 >> 2] | 0) + 4 | 0, i6 = HEAP32[i1 >> 2] | 0, HEAP32[i6 + 4 >> 2] = HEAP32[i5 >> 2], HEAP32[HEAP32[i5 >> 2] >> 2] = i6, HEAP32[i2 >> 2] = 0, (i1 | 0) != (i3 | 0)) : 0) do {
   i6 = i1;
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   __ZdlPv(i6);
  } while ((i1 | 0) != (i3 | 0));
  __ZdlPv(i3);
 }
 i5 = i4 + 16 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i4 = i4 + 20 | 0;
 if (!i1) {
  i6 = HEAP32[i4 >> 2] | 0;
  _free(i6);
  return;
 } else i3 = 0;
 do {
  i2 = HEAP32[(HEAP32[i4 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i2) {
   _free(i2);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i3 + 1 | 0;
 } while (i3 >>> 0 < i1 >>> 0);
 i6 = HEAP32[i4 >> 2] | 0;
 _free(i6);
 return;
}

function __ZN14maxiPitchShiftI14hannWinFunctorED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i3 = HEAP32[i4 + 16 >> 2] | 0;
 if (i3) {
  i2 = i3 + 8 | 0;
  if ((HEAP32[i2 >> 2] | 0) != 0 ? (i1 = HEAP32[i3 + 4 >> 2] | 0, i5 = (HEAP32[i3 >> 2] | 0) + 4 | 0, i6 = HEAP32[i1 >> 2] | 0, HEAP32[i6 + 4 >> 2] = HEAP32[i5 >> 2], HEAP32[HEAP32[i5 >> 2] >> 2] = i6, HEAP32[i2 >> 2] = 0, (i1 | 0) != (i3 | 0)) : 0) do {
   i6 = i1;
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   __ZdlPv(i6);
  } while ((i1 | 0) != (i3 | 0));
  __ZdlPv(i3);
 }
 i5 = i4 + 20 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i4 = i4 + 24 | 0;
 if (!i1) {
  i6 = HEAP32[i4 >> 2] | 0;
  _free(i6);
  return;
 } else i3 = 0;
 do {
  i2 = HEAP32[(HEAP32[i4 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i2) {
   _free(i2);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i3 + 1 | 0;
 } while (i3 >>> 0 < i1 >>> 0);
 i6 = HEAP32[i4 >> 2] | 0;
 _free(i6);
 return;
}

function __ZN16maxiPitchStretchI14hannWinFunctorE9setSampleEP10maxiSample(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i3 = i6 + 12 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 if (i4) {
  i2 = i4 + 8 | 0;
  if ((HEAP32[i2 >> 2] | 0) != 0 ? (i1 = HEAP32[i4 + 4 >> 2] | 0, i7 = (HEAP32[i4 >> 2] | 0) + 4 | 0, i8 = HEAP32[i1 >> 2] | 0, HEAP32[i8 + 4 >> 2] = HEAP32[i7 >> 2], HEAP32[HEAP32[i7 >> 2] >> 2] = i8, HEAP32[i2 >> 2] = 0, (i1 | 0) != (i4 | 0)) : 0) do {
   i8 = i1;
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   __ZdlPv(i8);
  } while ((i1 | 0) != (i4 | 0));
  __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
 }
 HEAP32[i6 + 8 >> 2] = i5;
 i8 = __Znwj(16) | 0;
 HEAP32[i8 >> 2] = i8;
 HEAP32[i8 + 4 >> 2] = i8;
 HEAP32[i8 + 8 >> 2] = 0;
 HEAP32[i8 + 12 >> 2] = i5;
 HEAP32[i3 >> 2] = i8;
 i8 = HEAP32[i5 + 108 >> 2] | 0;
 HEAP32[i6 + 36 >> 2] = i8;
 HEAP32[i6 + 40 >> 2] = i8;
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv(i6, i1, i4) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i5 = i7;
 if ((i6 | 0) != (i1 | 0)) if ((i1 | 0) != 0 ? (i3 = ___dynamic_cast(i1, 15968, 15984, 0) | 0, (i3 | 0) != 0) : 0) {
  i1 = i5;
  i2 = i1 + 56 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
  HEAP32[i5 >> 2] = i3;
  HEAP32[i5 + 8 >> 2] = i6;
  HEAP32[i5 + 12 >> 2] = -1;
  HEAP32[i5 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 63](i3, i5, HEAP32[i4 >> 2] | 0, 1);
  if ((HEAP32[i5 + 24 >> 2] | 0) == 1) {
   HEAP32[i4 >> 2] = HEAP32[i5 + 16 >> 2];
   i1 = 1;
  } else i1 = 0;
 } else i1 = 0; else i1 = 1;
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i5, i4, i6) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0;
 L1 : do if ((i1 | 0) != (HEAP32[i5 + 8 >> 2] | 0)) {
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  i2 = i1 + 16 + (i3 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1 + 16 | 0, i5, i4, i6);
  if ((i3 | 0) > 1) {
   i3 = i5 + 54 | 0;
   i1 = i1 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i5, i4, i6);
    if (HEAP8[i3 >> 0] | 0) break L1;
    i1 = i1 + 8 | 0;
   } while (i1 >>> 0 < i2 >>> 0);
  }
 } else __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i5, i4, i6); while (0);
 return;
}

function __ZNSt3__111make_sharedI10maxiSampleJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(160) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21344;
 i3 = i2 + 16 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 i4 = i2 + 56 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAPF64[i2 + 88 >> 3] = .5;
 HEAPF64[i2 + 96 >> 3] = .5;
 HEAPF64[i2 + 104 >> 3] = 0.0;
 HEAP16[i2 + 116 >> 1] = 1;
 HEAP32[i2 + 120 >> 2] = HEAP32[5083];
 i4 = i2 + 132 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i6, i4, i3, i5, i7) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0;
 do if ((i6 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) {
  if ((HEAP32[i4 + 4 >> 2] | 0) == (i3 | 0) ? (i2 = i4 + 28 | 0, (HEAP32[i2 >> 2] | 0) != 1) : 0) HEAP32[i2 >> 2] = i5;
 } else if ((i6 | 0) == (HEAP32[i4 >> 2] | 0)) {
  if ((HEAP32[i4 + 16 >> 2] | 0) != (i3 | 0) ? (i1 = i4 + 20 | 0, (HEAP32[i1 >> 2] | 0) != (i3 | 0)) : 0) {
   HEAP32[i4 + 32 >> 2] = i5;
   HEAP32[i1 >> 2] = i3;
   i7 = i4 + 40 | 0;
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
   if ((HEAP32[i4 + 36 >> 2] | 0) == 1 ? (HEAP32[i4 + 24 >> 2] | 0) == 2 : 0) HEAP8[i4 + 54 >> 0] = 1;
   HEAP32[i4 + 44 >> 2] = 4;
   break;
  }
  if ((i5 | 0) == 1) HEAP32[i4 + 32 >> 2] = 1;
 } while (0);
 return;
}

function _wcrtomb(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 do if (i1) {
  if (i3 >>> 0 < 128) {
   HEAP8[i1 >> 0] = i3;
   i1 = 1;
   break;
  }
  if (i3 >>> 0 < 2048) {
   HEAP8[i1 >> 0] = i3 >>> 6 | 192;
   HEAP8[i1 + 1 >> 0] = i3 & 63 | 128;
   i1 = 2;
   break;
  }
  if (i3 >>> 0 < 55296 | (i3 & -8192 | 0) == 57344) {
   HEAP8[i1 >> 0] = i3 >>> 12 | 224;
   HEAP8[i1 + 1 >> 0] = i3 >>> 6 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i3 & 63 | 128;
   i1 = 3;
   break;
  }
  if ((i3 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[i1 >> 0] = i3 >>> 18 | 240;
   HEAP8[i1 + 1 >> 0] = i3 >>> 12 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i3 >>> 6 & 63 | 128;
   HEAP8[i1 + 3 >> 0] = i3 & 63 | 128;
   i1 = 4;
   break;
  } else {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = 84;
   i1 = -1;
   break;
  }
 } else i1 = 1; while (0);
 return i1 | 0;
}

function __ZN11maxiFlanger6flangeEdjddd(i8, d7, i2, d6, d4, d5) {
 i8 = i8 | 0;
 d7 = +d7;
 i2 = i2 | 0;
 d6 = +d6;
 d4 = +d4;
 d5 = +d5;
 var i1 = 0, d3 = 0.0;
 i1 = i8 + 705648 | 0;
 d3 = +HEAPF64[i1 >> 3];
 if (d3 >= 1.0) {
  d3 = d3 + -1.0;
  HEAPF64[i1 >> 3] = d3;
 }
 d4 = d3 + 1.0 / (+(HEAP32[5083] | 0) / d4);
 HEAPF64[i1 >> 3] = d4;
 d4 = ((!(d4 <= .5) ? 1.0 - d4 : d4) + -.25) * 4.0;
 HEAPF64[i8 + 705672 >> 3] = d4;
 d3 = +(i2 >>> 0);
 i2 = i8 + 8 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if ((i1 | 0) >= (~~(d3 + d3 * (d4 * d5) + 1.0) | 0)) {
  HEAP32[i2 >> 2] = 0;
  i1 = 0;
 }
 i1 = i8 + 40 + (i1 << 3) | 0;
 i8 = i8 + 32 | 0;
 HEAPF64[i8 >> 3] = +HEAPF64[i1 >> 3];
 HEAPF64[i1 >> 3] = d7 * d6 * .5 + +HEAPF64[i1 >> 3] * d6;
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 d6 = +HEAPF64[i8 >> 3];
 return +((d6 * (1.0 - +Math_abs(+d6)) + d7) * .5);
}

function __ZN15maxiTimestretchI14hannWinFunctorE9setSampleEP10maxiSample(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i3 = i6 + 12 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 if (i4) {
  i2 = i4 + 8 | 0;
  if ((HEAP32[i2 >> 2] | 0) != 0 ? (i1 = HEAP32[i4 + 4 >> 2] | 0, i7 = (HEAP32[i4 >> 2] | 0) + 4 | 0, i8 = HEAP32[i1 >> 2] | 0, HEAP32[i8 + 4 >> 2] = HEAP32[i7 >> 2], HEAP32[HEAP32[i7 >> 2] >> 2] = i8, HEAP32[i2 >> 2] = 0, (i1 | 0) != (i4 | 0)) : 0) do {
   i8 = i1;
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   __ZdlPv(i8);
  } while ((i1 | 0) != (i4 | 0));
  __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
 }
 HEAP32[i6 + 8 >> 2] = i5;
 i8 = __Znwj(16) | 0;
 HEAP32[i8 >> 2] = i8;
 HEAP32[i8 + 4 >> 2] = i8;
 HEAP32[i8 + 8 >> 2] = 0;
 HEAP32[i8 + 12 >> 2] = i5;
 HEAP32[i3 >> 2] = i8;
 return;
}

function __ZN14maxiPitchShiftI14hannWinFunctorE9setSampleEP10maxiSample(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i3 = i6 + 16 | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 if (i4) {
  i2 = i4 + 8 | 0;
  if ((HEAP32[i2 >> 2] | 0) != 0 ? (i1 = HEAP32[i4 + 4 >> 2] | 0, i7 = (HEAP32[i4 >> 2] | 0) + 4 | 0, i8 = HEAP32[i1 >> 2] | 0, HEAP32[i8 + 4 >> 2] = HEAP32[i7 >> 2], HEAP32[HEAP32[i7 >> 2] >> 2] = i8, HEAP32[i2 >> 2] = 0, (i1 | 0) != (i4 | 0)) : 0) do {
   i8 = i1;
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   __ZdlPv(i8);
  } while ((i1 | 0) != (i4 | 0));
  __ZdlPv(i4);
  HEAP32[i3 >> 2] = 0;
 }
 HEAP32[i6 + 12 >> 2] = i5;
 i8 = __Znwj(16) | 0;
 HEAP32[i8 >> 2] = i8;
 HEAP32[i8 + 4 >> 2] = i8;
 HEAP32[i8 + 8 >> 2] = 0;
 HEAP32[i8 + 12 >> 2] = i5;
 HEAP32[i3 >> 2] = i8;
 return;
}

function ___overflow(i8, i6) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i7 = i9;
 i5 = i6 & 255;
 HEAP8[i7 >> 0] = i5;
 i2 = i8 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) if (!(___towrite(i8) | 0)) {
  i3 = HEAP32[i2 >> 2] | 0;
  i4 = 4;
 } else i1 = -1; else i4 = 4;
 do if ((i4 | 0) == 4) {
  i2 = i8 + 20 | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if (i4 >>> 0 < i3 >>> 0 ? (i1 = i6 & 255, (i1 | 0) != (HEAP8[i8 + 75 >> 0] | 0)) : 0) {
   HEAP32[i2 >> 2] = i4 + 1;
   HEAP8[i4 >> 0] = i5;
   break;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[i8 + 36 >> 2] & 15](i8, i7, 1) | 0) == 1) i1 = HEAPU8[i7 >> 0] | 0; else i1 = -1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__16vectorIiNS3_9allocatorIiEEEEjES2_S9_JjEE6invokeEPSB_PS7_j(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i1 = FUNCTION_TABLE_iii[HEAP32[i2 >> 2] & 127](i3, i1) | 0;
 __THREW__ = 0;
 invoke_vi(285, i1 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i2 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, i1 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i2 | 0);
 } else {
  __THREW__ = 0;
  invoke_vi(286, i1 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else return i1 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__16vectorIfNS3_9allocatorIfEEEEjES2_S9_JjEE6invokeEPSB_PS7_j(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i1 = FUNCTION_TABLE_iii[HEAP32[i2 >> 2] & 127](i3, i1) | 0;
 __THREW__ = 0;
 invoke_vi(285, i1 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i2 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, i1 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i2 | 0);
 } else {
  __THREW__ = 0;
  invoke_vi(286, i1 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else return i1 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__16vectorIdNS3_9allocatorIdEEEEjES2_S9_JjEE6invokeEPSB_PS7_j(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i1 = FUNCTION_TABLE_iii[HEAP32[i2 >> 2] & 127](i3, i1) | 0;
 __THREW__ = 0;
 invoke_vi(285, i1 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i2 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, i1 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i2 | 0);
 } else {
  __THREW__ = 0;
  invoke_vi(286, i1 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else return i1 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__16vectorIcNS3_9allocatorIcEEEEjES2_S9_JjEE6invokeEPSB_PS7_j(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i1 = FUNCTION_TABLE_iii[HEAP32[i2 >> 2] & 127](i3, i1) | 0;
 __THREW__ = 0;
 invoke_vi(285, i1 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i2 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_vi(286, i1 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else ___resumeException(i2 | 0);
 } else {
  __THREW__ = 0;
  invoke_vi(286, i1 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate(i3);
  } else return i1 | 0;
 }
 return 0;
}

function __ZN10maxiFilter8bandpassEddd(i7, d5, d3, d6) {
 i7 = i7 | 0;
 d5 = +d5;
 d3 = +d3;
 d6 = +d6;
 var d1 = 0.0, i2 = 0, d4 = 0.0, i8 = 0;
 i2 = i7 + 224 | 0;
 HEAPF64[i2 >> 3] = d3;
 d4 = +(HEAP32[5083] | 0);
 d1 = d4 * .5;
 if (d1 < d3) HEAPF64[i2 >> 3] = d1; else d1 = d3;
 d6 = !(d6 >= 1.0) ? d6 : .999999;
 d3 = +Math_cos(+(d1 * 6.283185307179586 / d4));
 HEAPF64[i7 + 208 >> 3] = d3;
 d1 = (1.0 - d6) * +Math_sqrt(+(d6 * (d6 - d3 * d3 * 4.0 + 2.0) + 1.0));
 HEAPF64[i7 + 24 >> 3] = d1;
 d3 = d6 * (d3 * 2.0);
 HEAPF64[i7 + 32 >> 3] = d3;
 d6 = d6 * d6;
 HEAPF64[i7 + 40 >> 3] = d6;
 i2 = i7 + 112 | 0;
 d4 = +HEAPF64[i2 >> 3];
 i8 = i7 + 120 | 0;
 d6 = d1 * d5 + d3 * d4 + d6 * +HEAPF64[i8 >> 3];
 HEAPF64[i7 + 16 >> 3] = d6;
 HEAPF64[i8 >> 3] = d4;
 HEAPF64[i2 >> 3] = d6;
 return +d6;
}

function _pad(i6, i2, i5, i4, i1) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i3 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i7 = i8;
 do if ((i5 | 0) > (i4 | 0) & (i1 & 73728 | 0) == 0) {
  i1 = i5 - i4 | 0;
  _memset(i7 | 0, i2 | 0, (i1 >>> 0 > 256 ? 256 : i1) | 0) | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  i3 = (i2 & 32 | 0) == 0;
  if (i1 >>> 0 > 255) {
   i4 = i5 - i4 | 0;
   do {
    if (i3) {
     ___fwritex(i7, 256, i6) | 0;
     i2 = HEAP32[i6 >> 2] | 0;
    }
    i1 = i1 + -256 | 0;
    i3 = (i2 & 32 | 0) == 0;
   } while (i1 >>> 0 > 255);
   if (i3) i1 = i4 & 255; else break;
  } else if (!i3) break;
  ___fwritex(i7, i1, i6) | 0;
 } while (0);
 STACKTOP = i8;
 return;
}

function __ZN10maxiFilter5hiresEddd(i6, d4, d1, d5) {
 i6 = i6 | 0;
 d4 = +d4;
 d1 = +d1;
 d5 = +d5;
 var i2 = 0, d3 = 0.0, i7 = 0, d8 = 0.0;
 i2 = i6 + 224 | 0;
 d1 = d1 < 10.0 ? 10.0 : d1;
 HEAPF64[i2 >> 3] = d1;
 d3 = +(HEAP32[5083] | 0);
 if (d1 > d3) {
  HEAPF64[i2 >> 3] = d3;
  d1 = d3;
 }
 d8 = +Math_cos(+(d1 * 6.283185307179586 / d3));
 HEAPF64[i6 + 208 >> 3] = d8;
 d3 = 2.0 - d8 * 2.0;
 HEAPF64[i6 + 216 >> 3] = d3;
 d8 = d8 + -1.0;
 d1 = (d5 < 1.0 ? 1.0 : d5) * d8;
 d1 = (d1 + +Math_sqrt(+-+Math_pow(+d8, 3.0)) * 1.4142135623730951) / d1;
 i2 = i6 + 192 | 0;
 i7 = i6 + 200 | 0;
 d5 = +HEAPF64[i7 >> 3];
 d3 = +HEAPF64[i2 >> 3] + d3 * (d4 - d5);
 d5 = d5 + d3;
 HEAPF64[i7 >> 3] = d5;
 HEAPF64[i2 >> 3] = d1 * d3;
 d5 = d4 - d5;
 HEAPF64[i6 + 16 >> 3] = d5;
 return +d5;
}

function _fputc(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 if ((HEAP32[i6 + 76 >> 2] | 0) >= 0 ? (___lockfile(i6) | 0) != 0 : 0) {
  if ((HEAP8[i6 + 75 >> 0] | 0) != (i5 | 0) ? (i2 = i6 + 20 | 0, i3 = HEAP32[i2 >> 2] | 0, i3 >>> 0 < (HEAP32[i6 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i2 >> 2] = i3 + 1;
   HEAP8[i3 >> 0] = i5;
   i1 = i5 & 255;
  } else i1 = ___overflow(i6, i5) | 0;
  ___unlockfile(i6);
 } else i7 = 3;
 do if ((i7 | 0) == 3) {
  if ((HEAP8[i6 + 75 >> 0] | 0) != (i5 | 0) ? (i4 = i6 + 20 | 0, i1 = HEAP32[i4 >> 2] | 0, i1 >>> 0 < (HEAP32[i6 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i4 >> 2] = i1 + 1;
   HEAP8[i1 >> 0] = i5;
   i1 = i5 & 255;
   break;
  }
  i1 = ___overflow(i6, i5) | 0;
 } while (0);
 return i1 | 0;
}

function __ZN10maxiFilter5loresEddd(i6, d4, d1, d5) {
 i6 = i6 | 0;
 d4 = +d4;
 d1 = +d1;
 d5 = +d5;
 var i2 = 0, d3 = 0.0, i7 = 0, d8 = 0.0;
 i2 = i6 + 224 | 0;
 d1 = d1 < 10.0 ? 10.0 : d1;
 HEAPF64[i2 >> 3] = d1;
 d3 = +(HEAP32[5083] | 0);
 if (d1 > d3) {
  HEAPF64[i2 >> 3] = d3;
  d1 = d3;
 }
 d8 = +Math_cos(+(d1 * 6.283185307179586 / d3));
 HEAPF64[i6 + 208 >> 3] = d8;
 d1 = 2.0 - d8 * 2.0;
 HEAPF64[i6 + 216 >> 3] = d1;
 d8 = d8 + -1.0;
 d3 = (d5 < 1.0 ? 1.0 : d5) * d8;
 d3 = (d3 + +Math_sqrt(+-+Math_pow(+d8, 3.0)) * 1.4142135623730951) / d3;
 i2 = i6 + 192 | 0;
 i7 = i6 + 200 | 0;
 d5 = +HEAPF64[i7 >> 3];
 d4 = +HEAPF64[i2 >> 3] + d1 * (d4 - d5);
 d5 = d5 + d4;
 HEAPF64[i7 >> 3] = d5;
 HEAPF64[i2 >> 3] = d3 * d4;
 HEAPF64[i6 + 16 >> 3] = d5;
 return +d5;
}

function _fflush(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 do if (i2) {
  if ((HEAP32[i2 + 76 >> 2] | 0) <= -1) {
   i1 = ___fflush_unlocked(i2) | 0;
   break;
  }
  i3 = (___lockfile(i2) | 0) == 0;
  i1 = ___fflush_unlocked(i2) | 0;
  if (!i3) ___unlockfile(i2);
 } else {
  if (!(HEAP32[5948] | 0)) i1 = 0; else i1 = _fflush(HEAP32[5948] | 0) | 0;
  ___lock(23768);
  i2 = HEAP32[5941] | 0;
  if (i2) do {
   if ((HEAP32[i2 + 76 >> 2] | 0) > -1) i3 = ___lockfile(i2) | 0; else i3 = 0;
   if ((HEAP32[i2 + 20 >> 2] | 0) >>> 0 > (HEAP32[i2 + 28 >> 2] | 0) >>> 0) i1 = ___fflush_unlocked(i2) | 0 | i1;
   if (i3) ___unlockfile(i2);
   i2 = HEAP32[i2 + 56 >> 2] | 0;
  } while ((i2 | 0) != 0);
  ___unlock(23768);
 } while (0);
 return i1 | 0;
}

function ___remdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i5 | 0;
 i7 = i2 >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i6 = ((i2 | 0) < 0 ? -1 : 0) >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i10 = i4 >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i9 = ((i4 | 0) < 0 ? -1 : 0) >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i1 = _i64Subtract(i7 ^ i1, i6 ^ i2, i7, i6) | 0;
 i2 = tempRet0;
 ___udivmoddi4(i1, i2, _i64Subtract(i10 ^ i3, i9 ^ i4, i10, i9) | 0, tempRet0, i8) | 0;
 i4 = _i64Subtract(HEAP32[i8 >> 2] ^ i7, HEAP32[i8 + 4 >> 2] ^ i6, i7, i6) | 0;
 i3 = tempRet0;
 STACKTOP = i5;
 return (tempRet0 = i3, i4) | 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEJEE6invokeEPFS7_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEJEE6invokeEPFS7_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEJEE6invokeEPFS7_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEJEE6invokeEPFS6_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function _scalbn(d1, i3) {
 d1 = +d1;
 i3 = i3 | 0;
 var i2 = 0;
 if ((i3 | 0) > 1023) {
  d1 = d1 * 8988465674311579538646525.0e283;
  i2 = i3 + -1023 | 0;
  if ((i2 | 0) > 1023) {
   i2 = i3 + -2046 | 0;
   i2 = (i2 | 0) > 1023 ? 1023 : i2;
   d1 = d1 * 8988465674311579538646525.0e283;
  }
 } else if ((i3 | 0) < -1022) {
  d1 = d1 * 2.2250738585072014e-308;
  i2 = i3 + 1022 | 0;
  if ((i2 | 0) < -1022) {
   i2 = i3 + 2044 | 0;
   i2 = (i2 | 0) < -1022 ? -1022 : i2;
   d1 = d1 * 2.2250738585072014e-308;
  }
 } else i2 = i3;
 i2 = _bitshift64Shl(i2 + 1023 | 0, 0, 52) | 0;
 i3 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = i2;
 HEAP32[tempDoublePtr + 4 >> 2] = i3;
 return +(d1 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI14maxiDistortionEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI13maxiDelaylineEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI13maxiDCBlockerEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI10maxiLagExpIdEEEJEE6invokeEPFS6_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI12maxiEnvelopeEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI11maxiFlangerEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI10maxiSampleEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI10maxiFilterEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI10maxiChorusEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI9maxiSnareEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI9maxiClockEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI8maxiKickEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI8maxiIFFTEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI8maxiHatsEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiSVFEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiOscEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiMixEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiMapEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiFFTEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiEnvEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiDynEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function __ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7convertEEJEE6invokeEPFS5_vE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 FUNCTION_TABLE_vi[i1 & 511](i3);
 __THREW__ = 0;
 i1 = invoke_ii(91, 8) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (!(i4 & 1)) {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  STACKTOP = i2;
  return i1 | 0;
 }
 i2 = ___cxa_find_matching_catch() | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 if (!i1) ___resumeException(i2 | 0);
 __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 ___resumeException(i2 | 0);
 return 0;
}

function _frexp(d1, i5) {
 d1 = +d1;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i4 = _bitshift64Lshr(i2 | 0, i3 | 0, 52) | 0;
 i4 = i4 & 2047;
 switch (i4 | 0) {
 case 0:
  {
   if (d1 != 0.0) {
    d1 = +_frexp(d1 * 18446744073709551616.0, i5);
    i2 = (HEAP32[i5 >> 2] | 0) + -64 | 0;
   } else i2 = 0;
   HEAP32[i5 >> 2] = i2;
   break;
  }
 case 2047:
  break;
 default:
  {
   HEAP32[i5 >> 2] = i4 + -1022;
   HEAP32[tempDoublePtr >> 2] = i2;
   HEAP32[tempDoublePtr + 4 >> 2] = i3 & -2146435073 | 1071644672;
   d1 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +d1;
}

function __ZSt11__terminatePFvvE(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 __THREW__ = 0;
 invoke_v(i1 | 0);
 i1 = __THREW__;
 __THREW__ = 0;
 if (!(i1 & 1)) {
  __THREW__ = 0;
  invoke_vii(69, 39726, i2 | 0);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch(0) | 0;
 ___cxa_begin_catch(i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(69, 39766, i2 + 8 | 0);
 __THREW__ = 0;
 i1 = ___cxa_find_matching_catch(0) | 0;
 __THREW__ = 0;
 invoke_v(3);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else ___clang_call_terminate(i1);
}

function __ZNSt3__111make_sharedI10maxiChorusJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __Znwj(1411584) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22128;
 _memset(i2 + 56 | 0, 0, 705600) | 0;
 _memset(i2 + 705696 | 0, 0, 705600) | 0;
 HEAPF64[i2 + 1411304 >> 3] = 0.0;
 i3 = i2 + 1411536 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN47EmscriptenBindingInitializer_my_module_maxiMFCCC2Ev(i1) {
 i1 = i1 | 0;
 __embind_register_class(15416, 15424, 15440, 0, 26129, 109, 26132, 0, 26132, 0, 35486, 26134, 297);
 __embind_register_smart_ptr(15456, 15416, 35495, 2, 26129, 110, 27044, 30, 26148, 73, 26134, 298);
 __embind_register_class_constructor(15416, 1, 23044, 26129, 111, 299);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 1;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15416, 35516, 8, 23048, 35522, 1, i1 | 0, 0);
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 19;
 HEAP32[i1 + 4 >> 2] = 0;
 __embind_register_class_function(15416, 35532, 4, 23080, 26142, 33, i1 | 0, 0);
 return;
}

function __ZN7maxiFFTD2Ev(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i1 = HEAP32[i5 + 64 >> 2] | 0;
 if (i1) {
  i2 = HEAP32[i1 + 8 >> 2] | 0;
  if (i2) __ZdaPv(i2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i5 + 44 >> 2] | 0;
 if (i1) __ZdaPv(i1);
 i1 = HEAP32[i5 + 16 >> 2] | 0;
 i2 = i1;
 if (i1) {
  i3 = i5 + 20 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) != (i1 | 0)) HEAP32[i3 >> 2] = i4 + (~((i4 + -4 - i2 | 0) >>> 2) << 2);
  __ZdlPv(i1);
 }
 i3 = HEAP32[i5 + 4 >> 2] | 0;
 if (!i3) return;
 i1 = i5 + 8 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (i3 | 0)) HEAP32[i1 >> 2] = i2 + (~((i2 + -4 - i3 | 0) >>> 2) << 2);
 __ZdlPv(i3);
 return;
}

function ___fflush_unlocked(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i1 = i7 + 20 | 0;
 i5 = i7 + 28 | 0;
 if ((HEAP32[i1 >> 2] | 0) >>> 0 > (HEAP32[i5 >> 2] | 0) >>> 0 ? (FUNCTION_TABLE_iiii[HEAP32[i7 + 36 >> 2] & 15](i7, 0, 0) | 0, (HEAP32[i1 >> 2] | 0) == 0) : 0) i1 = -1; else {
  i6 = i7 + 4 | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  i3 = i7 + 8 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if (i2 >>> 0 < i4 >>> 0) FUNCTION_TABLE_iiii[HEAP32[i7 + 40 >> 2] & 15](i7, i2 - i4 | 0, 1) | 0;
  HEAP32[i7 + 16 >> 2] = 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i6 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZN7maxiOsc8sinebuf4Ed(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var d3 = 0.0, d4 = 0.0, d5 = 0.0, d6 = 0.0, i7 = 0;
 i7 = i2 + 8 | 0;
 d1 = 512.0 / (+(HEAP32[5083] | 0) / d1) + +HEAPF64[i7 >> 3];
 d1 = !(d1 >= 511.0) ? d1 : d1 + -512.0;
 HEAPF64[i7 >> 3] = d1;
 d6 = d1 - +Math_floor(+d1);
 i7 = ~~d1;
 d1 = +HEAPF64[(d1 == 0.0 ? 4104 : 8 + (i7 + -1 << 3) | 0) >> 3];
 d5 = +HEAPF64[8 + (i7 << 3) >> 3];
 d4 = +HEAPF64[8 + (i7 + 1 << 3) >> 3];
 d3 = +HEAPF64[8 + (i7 + 2 << 3) >> 3];
 d1 = d5 + d6 * ((d4 - d1) * .5 + d6 * (d1 - d5 * 2.5 + d4 * 2.0 - d3 * .5 + d6 * ((d5 - d4) * 1.5 + (d3 - d1) * .5)));
 HEAPF64[i2 + 32 >> 3] = d1;
 return +d1;
}

function __ZN7maxiSVF4playEddddd(i5, d6, d3, d1, d2, d4) {
 i5 = i5 | 0;
 d6 = +d6;
 d3 = +d3;
 d1 = +d1;
 d2 = +d2;
 d4 = +d4;
 var d7 = 0.0, d8 = 0.0, i9 = 0, d10 = 0.0, d11 = 0.0, i12 = 0;
 i12 = i5 + 8 | 0;
 d7 = +HEAPF64[i12 >> 3];
 i9 = i5 + 16 | 0;
 d11 = +HEAPF64[i9 >> 3];
 d10 = +HEAPF64[i5 >> 3] + d6 - d11 * 2.0;
 d8 = d7 + (+HEAPF64[i5 + 56 >> 3] * d10 - d7 * +HEAPF64[i5 + 64 >> 3]);
 HEAPF64[i12 >> 3] = d8;
 d7 = d11 + (d10 * +HEAPF64[i5 + 72 >> 3] + d7 * +HEAPF64[i5 + 80 >> 3]);
 HEAPF64[i9 >> 3] = d7;
 HEAPF64[i5 >> 3] = d6;
 d6 = d6 - d8 * +HEAPF64[i5 + 40 >> 3];
 return +(d6 * d4 + (d7 * d3 + d8 * d1 + (d6 - d7) * d2));
}

function _memcpy(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i2 | 0) >= 4096) return _emscripten_memcpy_big(i1 | 0, i4 | 0, i2 | 0) | 0;
 i3 = i1 | 0;
 if ((i1 & 3) == (i4 & 3)) {
  while (i1 & 3) {
   if (!i2) return i3 | 0;
   HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
   i1 = i1 + 1 | 0;
   i4 = i4 + 1 | 0;
   i2 = i2 - 1 | 0;
  }
  while ((i2 | 0) >= 4) {
   HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
   i1 = i1 + 4 | 0;
   i4 = i4 + 4 | 0;
   i2 = i2 - 4 | 0;
  }
 }
 while ((i2 | 0) > 0) {
  HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i4 = i4 + 1 | 0;
  i2 = i2 - 1 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(66, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(68, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(67, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function ___divdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = i2 >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i9 = ((i2 | 0) < 0 ? -1 : 0) >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i6 = i4 >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i5 = ((i4 | 0) < 0 ? -1 : 0) >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i8 = _i64Subtract(i10 ^ i1, i9 ^ i2, i10, i9) | 0;
 i7 = tempRet0;
 i1 = i6 ^ i10;
 i2 = i5 ^ i9;
 return _i64Subtract((___udivmoddi4(i8, i7, _i64Subtract(i6 ^ i3, i5 ^ i4, i6, i5) | 0, tempRet0, 0) | 0) ^ i1, tempRet0 ^ i2, i1, i2) | 0;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(i1, i4, i3, i5) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 i1 = i4 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  if ((i2 | 0) != (i3 | 0)) {
   i5 = i4 + 36 | 0;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   HEAP32[i4 + 24 >> 2] = 2;
   HEAP8[i4 + 54 >> 0] = 1;
   break;
  }
  i1 = i4 + 24 | 0;
  if ((HEAP32[i1 >> 2] | 0) == 2) HEAP32[i1 >> 2] = i5;
 } else {
  HEAP32[i1 >> 2] = i3;
  HEAP32[i4 + 24 >> 2] = i5;
  HEAP32[i4 + 36 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(59, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__111make_sharedI7maxiFFTJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __Znwj(84) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22996;
 i3 = i2 + 16 | 0;
 HEAP32[i2 + 76 >> 2] = 0;
 HEAP32[i2 + 60 >> 2] = 0;
 HEAP32[i2 + 56 >> 2] = 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i1 >> 2] = i2 + 12;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN10maxiSample8playOnceEd(i3, d1) {
 i3 = i3 | 0;
 d1 = +d1;
 var i2 = 0, i4 = 0;
 i2 = i3 + 40 | 0;
 d1 = +HEAPF64[i2 >> 3] + +HEAPF32[5082] * d1 / +((HEAP32[5083] | 0) / (HEAP32[i3 + 104 >> 2] | 0) | 0 | 0);
 HEAPF64[i2 >> 3] = d1;
 i2 = ~~d1;
 d1 = d1 - +(i2 | 0);
 if ((i2 | 0) >= (HEAP32[i3 + 108 >> 2] | 0)) {
  d1 = 0.0;
  i3 = i3 + 64 | 0;
  HEAPF64[i3 >> 3] = d1;
  return +d1;
 }
 i4 = HEAP32[i3 + 128 >> 2] | 0;
 d1 = ((1.0 - d1) * +(HEAP16[i4 + (i2 + 1 << 1) >> 1] | 0) + d1 * +(HEAP16[i4 + (i2 + 2 << 1) >> 1] | 0)) / 32767.0;
 i3 = i3 + 64 | 0;
 HEAPF64[i3 >> 3] = d1;
 return +d1;
}

function __ZNSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(62, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZN7maxiMix4quadEdRNSt3__16vectorIdNS0_9allocatorIdEEEEdd(i3, d2, i1, d4, d5) {
 i3 = i3 | 0;
 d2 = +d2;
 i1 = i1 | 0;
 d4 = +d4;
 d5 = +d5;
 var d6 = 0.0, d7 = 0.0;
 d4 = d4 > 1.0 ? 1.0 : d4;
 d4 = d4 < 0.0 ? 0.0 : d4;
 d6 = d5 > 1.0 ? 1.0 : d5;
 d6 = d6 < 0.0 ? 0.0 : d6;
 d7 = 1.0 - d4;
 d5 = +Math_sqrt(+(d7 * d6)) * d2;
 i3 = HEAP32[i1 >> 2] | 0;
 HEAPF64[i3 >> 3] = d5;
 d5 = 1.0 - d6;
 d7 = +Math_sqrt(+(d7 * d5)) * d2;
 HEAPF64[i3 + 8 >> 3] = d7;
 d6 = +Math_sqrt(+(d4 * d6)) * d2;
 HEAPF64[i3 + 16 >> 3] = d6;
 d5 = +Math_sqrt(+(d4 * d5)) * d2;
 HEAPF64[i3 + 24 >> 3] = d5;
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(37, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(28, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(31, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(27, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(38, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(32, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(29, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(39, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(43, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(45, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(42, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(60, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(44, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(41, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(26, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(30, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(33, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(61, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(35, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(34, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function __ZNSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(36, i1 | 0, HEAP32[i2 + 12 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 }
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else return;
}

function _fmt_u(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 if (i3 >>> 0 > 0 | (i3 | 0) == 0 & i2 >>> 0 > 4294967295) while (1) {
  i4 = ___uremdi3(i2 | 0, i3 | 0, 10, 0) | 0;
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = i4 | 48;
  i4 = ___udivdi3(i2 | 0, i3 | 0, 10, 0) | 0;
  if (i3 >>> 0 > 9 | (i3 | 0) == 9 & i2 >>> 0 > 4294967295) {
   i2 = i4;
   i3 = tempRet0;
  } else {
   i2 = i4;
   break;
  }
 }
 if (i2) while (1) {
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = (i2 >>> 0) % 10 | 0 | 48;
  if (i2 >>> 0 < 10) break; else i2 = (i2 >>> 0) / 10 | 0;
 }
 return i1 | 0;
}

function __ZN9maxiClock6tickerEv(i6) {
 i6 = i6 | 0;
 var i1 = 0, d2 = 0.0, d3 = 0.0, i4 = 0, d5 = 0.0;
 i1 = i6 + 84 | 0;
 HEAP8[i1 >> 0] = 0;
 d3 = +HEAPF64[i6 + 64 >> 3];
 i4 = i6 + 8 | 0;
 d5 = +HEAPF64[i4 >> 3];
 HEAPF64[i6 + 32 >> 3] = d5;
 if (!(d5 >= 1.0)) d2 = d5; else {
  d2 = d5 + -1.0;
  HEAPF64[i4 >> 3] = d2;
 }
 HEAPF64[i4 >> 3] = d2 + 1.0 / (+(HEAP32[5083] | 0) / d3);
 i4 = ~~+Math_floor(+d5);
 HEAP32[i6 + 48 >> 2] = i4;
 if ((HEAP32[i6 + 52 >> 2] | 0) == (i4 | 0)) return;
 HEAP8[i1 >> 0] = 1;
 i6 = i6 + 56 | 0;
 HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 1;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIiNS2_9allocatorIiEEEEFvjRKiEvPS6_JjS8_EE6invokeERKSA_SB_ji(i2, i3, i5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i4 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i7;
 i1 = HEAP32[i2 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i8 >> 1) | 0;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 HEAP32[i4 >> 2] = i6;
 FUNCTION_TABLE_viii[i1 & 31](i2, i5, i4);
 STACKTOP = i7;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIcNS2_9allocatorIcEEEEFvjRKcEvPS6_JjS8_EE6invokeERKSA_SB_jc(i2, i3, i5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i4 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i7;
 i1 = HEAP32[i2 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i8 >> 1) | 0;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 HEAP8[i4 >> 0] = i6;
 FUNCTION_TABLE_viii[i1 & 31](i2, i5, i4);
 STACKTOP = i7;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIfNS2_9allocatorIfEEEEFvjRKfEvPS6_JjS8_EE6invokeERKSA_SB_jf(i2, i3, i5, d6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 var i1 = 0, i4 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i7;
 i1 = HEAP32[i2 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i8 >> 1) | 0;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 HEAPF32[i4 >> 2] = d6;
 FUNCTION_TABLE_viii[i1 & 31](i2, i5, i4);
 STACKTOP = i7;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIdNS2_9allocatorIdEEEEFvjRKdEvPS6_JjS8_EE6invokeERKSA_SB_jd(i2, i3, i5, d6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 var i1 = 0, i4 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i7;
 i1 = HEAP32[i2 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i8 >> 1) | 0;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 HEAPF64[i4 >> 3] = d6;
 FUNCTION_TABLE_viii[i1 & 31](i2, i5, i4);
 STACKTOP = i7;
 return;
}

function __ZN7maxiSVF12setResonanceEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var d3 = 0.0, d4 = 0.0;
 d3 = +HEAPF64[i2 + 88 >> 3];
 HEAPF64[i2 + 96 >> 3] = d1;
 d3 = +Math_tan(+(d3 * 3.141592653589793 / +(HEAP32[5083] | 0)));
 HEAPF64[i2 + 24 >> 3] = d3;
 d4 = d1 == 0.0 ? 0.0 : 1.0 / d1;
 HEAPF64[i2 + 32 >> 3] = d4;
 HEAPF64[i2 + 40 >> 3] = d4;
 d4 = d3 + d4;
 d1 = d3 / (d3 * d4 + 1.0);
 HEAPF64[i2 + 48 >> 3] = d1;
 HEAPF64[i2 + 56 >> 3] = d1;
 HEAPF64[i2 + 64 >> 3] = d1 * (d4 * 2.0);
 HEAPF64[i2 + 72 >> 3] = d3 * d1;
 HEAPF64[i2 + 80 >> 3] = d1 * 2.0;
 return i2 | 0;
}

function _strlen(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = i1;
 L1 : do if (!(i4 & 3)) i3 = 4; else {
  i2 = i1;
  i1 = i4;
  while (1) {
   if (!(HEAP8[i2 >> 0] | 0)) break L1;
   i2 = i2 + 1 | 0;
   i1 = i2;
   if (!(i1 & 3)) {
    i1 = i2;
    i3 = 4;
    break;
   }
  }
 } while (0);
 if ((i3 | 0) == 4) {
  while (1) {
   i2 = HEAP32[i1 >> 2] | 0;
   if (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009)) i1 = i1 + 4 | 0; else break;
  }
  if ((i2 & 255) << 24 >> 24) do i1 = i1 + 1 | 0; while ((HEAP8[i1 >> 0] | 0) != 0);
 }
 return i1 - i4 | 0;
}

function __ZN7maxiSVF9setCutoffEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var d3 = 0.0, d4 = 0.0;
 d4 = +HEAPF64[i2 + 96 >> 3];
 HEAPF64[i2 + 88 >> 3] = d1;
 d3 = +Math_tan(+(d1 * 3.141592653589793 / +(HEAP32[5083] | 0)));
 HEAPF64[i2 + 24 >> 3] = d3;
 d4 = d4 == 0.0 ? 0.0 : 1.0 / d4;
 HEAPF64[i2 + 32 >> 3] = d4;
 HEAPF64[i2 + 40 >> 3] = d4;
 d4 = d3 + d4;
 d1 = d3 / (d3 * d4 + 1.0);
 HEAPF64[i2 + 48 >> 3] = d1;
 HEAPF64[i2 + 56 >> 3] = d1;
 HEAPF64[i2 + 64 >> 3] = d1 * (d4 * 2.0);
 HEAPF64[i2 + 72 >> 3] = d3 * d1;
 HEAPF64[i2 + 80 >> 3] = d1 * 2.0;
 return i2 | 0;
}

function __ZN7maxiFFT8magsToDBEv(i6) {
 i6 = i6 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i3 = HEAP32[i6 >> 2] | 0;
 i4 = HEAP32[(HEAP32[i6 + 64 >> 2] | 0) + 4 >> 2] | 0;
 if ((i4 | 0) > 0) i5 = 0; else {
  i6 = i3;
  d1 = +HEAPF32[i6 >> 2];
  return +d1;
 }
 do {
  d1 = +HEAPF32[i2 + (i5 << 2) >> 2];
  if (d1 < 1.0e-06) d1 = 0.0; else d1 = +_log10(d1 + 1.0) * 20.0;
  HEAPF32[i3 + (i5 << 2) >> 2] = d1;
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) != (i4 | 0));
 i6 = HEAP32[i6 >> 2] | 0;
 d1 = +HEAPF32[i6 >> 2];
 return +d1;
}

function __ZNSt3__111make_sharedI10maxiFilterJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __Znwj(256) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21020;
 i3 = i2 + 208 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN7maxiFFT16spectralFlatnessEv(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, d3 = 0.0, d4 = 0.0, i5 = 0, i6 = 0;
 i6 = HEAP32[i1 + 40 >> 2] | 0;
 if ((i6 | 0) > 0) {
  i1 = HEAP32[i1 + 4 >> 2] | 0;
  d2 = 0.0;
  d4 = 0.0;
  i5 = 0;
  do {
   d3 = +HEAPF32[i1 + (i5 << 2) >> 2];
   if (d3 != 0.0) d4 = d4 + +Math_log(+d3);
   d2 = d2 + d3;
   i5 = i5 + 1 | 0;
  } while ((i5 | 0) < (i6 | 0));
 } else {
  d2 = 0.0;
  d4 = 0.0;
 }
 d3 = +(i6 | 0);
 d2 = d2 / d3;
 if (!(d2 != 0.0)) {
  d4 = 0.0;
  return +d4;
 }
 d4 = +Math_exp(+(d4 / d3)) / d2;
 return +d4;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIiNS2_9allocatorIiEEEEFvRKiEvPS6_JS8_EE6invokeERKSA_SB_i(i2, i3, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i6;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 HEAP32[i4 >> 2] = i5;
 FUNCTION_TABLE_vii[i1 & 127](i2, i4);
 STACKTOP = i6;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIcNS2_9allocatorIcEEEEFvRKcEvPS6_JS8_EE6invokeERKSA_SB_c(i2, i3, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i6;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 HEAP8[i4 >> 0] = i5;
 FUNCTION_TABLE_vii[i1 & 127](i2, i4);
 STACKTOP = i6;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIfNS2_9allocatorIfEEEEFvRKfEvPS6_JS8_EE6invokeERKSA_SB_f(i2, i3, d5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d5 = +d5;
 var i1 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i6;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 HEAPF32[i4 >> 2] = d5;
 FUNCTION_TABLE_vii[i1 & 127](i2, i4);
 STACKTOP = i6;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIdNS2_9allocatorIdEEEEFvRKdEvPS6_JS8_EE6invokeERKSA_SB_d(i2, i3, d5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d5 = +d5;
 var i1 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i6;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 HEAPF64[i4 >> 3] = d5;
 FUNCTION_TABLE_vii[i1 & 127](i2, i4);
 STACKTOP = i6;
 return;
}

function __ZN7maxiOsc4sawnEd(i4, d3) {
 i4 = i4 | 0;
 d3 = +d3;
 var d1 = 0.0, i2 = 0, d5 = 0.0;
 i2 = i4 + 8 | 0;
 d1 = +HEAPF64[i2 >> 3];
 if (d1 >= .5) {
  d1 = d1 + -1.0;
  HEAPF64[i2 >> 3] = d1;
 }
 d1 = 1.0 / (+(HEAP32[5083] | 0) / d3) + d1;
 HEAPF64[i2 >> 3] = d1;
 d5 = 8820.22 / d3 * d1;
 d5 = d5 < -.5 ? -.5 : d5;
 d5 = d5 > .5 ? 1.0e3 : d5 * 1.0e3 + 500.0;
 d3 = d5 - +Math_floor(+d5);
 i2 = ~~d5;
 d3 = +HEAPF64[4120 + (i2 + 1 << 3) >> 3] * d3 + +HEAPF64[4120 + (i2 << 3) >> 3] * (1.0 - d3) - d1;
 HEAPF64[i4 + 32 >> 3] = d3;
 return +d3;
}

function __ZN7maxiFFT16spectralCentroidEv(i6) {
 i6 = i6 | 0;
 var d1 = 0.0, d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, d7 = 0.0;
 i3 = HEAP32[i6 + 40 >> 2] | 0;
 if ((i3 | 0) <= 0) {
  d2 = 0.0;
  return +d2;
 }
 i4 = HEAP32[i6 + 4 >> 2] | 0;
 i5 = 0;
 d2 = 0.0;
 d1 = 0.0;
 do {
  d7 = +Math_abs(+(+HEAPF32[i4 + (i5 << 2) >> 2]));
  d2 = d2 + +(i5 | 0) * d7;
  d1 = d1 + d7;
  i5 = i5 + 1 | 0;
 } while ((i5 | 0) < (i3 | 0));
 if (!(d1 != 0.0)) {
  d7 = 0.0;
  return +d7;
 }
 d7 = d2 / d1 * (+(HEAP32[5083] | 0) / +(HEAP32[i6 + 60 >> 2] | 0));
 return +d7;
}

function _memset(i2, i6, i1) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i3 = i2 + i1 | 0;
 if ((i1 | 0) >= 20) {
  i6 = i6 & 255;
  i5 = i2 & 3;
  i7 = i6 | i6 << 8 | i6 << 16 | i6 << 24;
  i4 = i3 & ~3;
  if (i5) {
   i5 = i2 + 4 - i5 | 0;
   while ((i2 | 0) < (i5 | 0)) {
    HEAP8[i2 >> 0] = i6;
    i2 = i2 + 1 | 0;
   }
  }
  while ((i2 | 0) < (i4 | 0)) {
   HEAP32[i2 >> 2] = i7;
   i2 = i2 + 4 | 0;
  }
 }
 while ((i2 | 0) < (i3 | 0)) {
  HEAP8[i2 >> 0] = i6;
  i2 = i2 + 1 | 0;
 }
 return i2 - i1 | 0;
}

function ___stdio_seek(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i6 = i5;
 i3 = i5 + 20 | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 + 60 >> 2];
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = i2;
 HEAP32[i6 + 12 >> 2] = i3;
 HEAP32[i6 + 16 >> 2] = i4;
 if ((___syscall_ret(___syscall140(140, i6 | 0) | 0) | 0) < 0) {
  HEAP32[i3 >> 2] = -1;
  i1 = -1;
 } else i1 = HEAP32[i3 >> 2] | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZN10emscripten8internal13MethodInvokerIM16maxiMFCCAnalyserIdEFvRNSt3__16vectorIfNS4_9allocatorIfEEEERNS5_IdNS6_IdEEEEEvPS3_JS9_SC_EE6invokeERKSE_SF_PS8_PSB_(i1, i2, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i3 = 0, i6 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i6 >> 1) | 0;
 if (!(i6 & 1)) {
  i6 = i3;
  FUNCTION_TABLE_viii[i6 & 31](i1, i4, i5);
  return;
 } else {
  i6 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_viii[i6 & 31](i1, i4, i5);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiSVFFRS2_dES3_PS2_JdEE6invokeERKS5_S6_d(i2, i3, d5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d5 = +d5;
 var i1 = 0, i4 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i4 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i4 >> 1) | 0;
 if (i4 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 i3 = FUNCTION_TABLE_iid[i1 & 3](i2, d5) | 0;
 i1 = __Znwj(104) | 0;
 i2 = i1;
 i4 = i2 + 104 | 0;
 do {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  i2 = i2 + 4 | 0;
  i3 = i3 + 4 | 0;
 } while ((i2 | 0) < (i4 | 0));
 return i1 | 0;
}

function __ZN13maxiDelayline2dlEdidi(i7, d4, i6, d3, i5) {
 i7 = i7 | 0;
 d4 = +d4;
 i6 = i6 | 0;
 d3 = +d3;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i8 = 0;
 i2 = i7 + 8 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if ((i1 | 0) >= (i6 | 0)) {
  HEAP32[i2 >> 2] = 0;
  i1 = 0;
 }
 i8 = i7 + 32 | 0;
 HEAPF64[i8 >> 3] = +HEAPF64[i7 + 40 + (((i5 | 0) < (i6 | 0) ? i5 : 0) << 3) >> 3];
 i7 = i7 + 40 + (i1 << 3) | 0;
 HEAPF64[i7 >> 3] = +HEAPF64[i7 >> 3] * d3 + d4 * d3 * +HEAPF32[5082];
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 return +(+HEAPF64[i8 >> 3]);
}

function __ZSt9terminatev() {
 var i1 = 0, i2 = 0, i3 = 0;
 __THREW__ = 0;
 i1 = invoke_i(34) | 0;
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i3);
 }
 if (((i1 | 0) != 0 ? (i2 = HEAP32[i1 >> 2] | 0, (i2 | 0) != 0) : 0) ? (i3 = i2 + 48 | 0, (HEAP32[i3 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[i3 + 4 >> 2] | 0) == 1129074247 : 0) : 0) __ZSt11__terminatePFvvE(HEAP32[i2 + 12 >> 2] | 0);
 i3 = HEAP32[5881] | 0;
 HEAP32[5881] = i3 + 0;
 __ZSt11__terminatePFvvE(i3);
}

function __ZN10emscripten8internal12VectorAccessINSt3__16vectorIdNS2_9allocatorIdEEEEE3getERKS6_j(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i2 = i5;
 i1 = HEAP32[i4 >> 2] | 0;
 if ((HEAP32[i4 + 4 >> 2] | 0) - i1 >> 3 >>> 0 <= i3 >>> 0) {
  i4 = 1;
  STACKTOP = i5;
  return i4 | 0;
 }
 HEAPF64[i2 >> 3] = +HEAPF64[i1 + (i3 << 3) >> 3];
 i4 = __emval_take_value(16152, i2 | 0) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function _strerror(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = 0;
 while (1) {
  if ((HEAPU8[40064 + i2 >> 0] | 0) == (i1 | 0)) {
   i3 = 2;
   break;
  }
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == 87) {
   i2 = 87;
   i1 = 40152;
   i3 = 5;
   break;
  }
 }
 if ((i3 | 0) == 2) if (!i2) i1 = 40152; else {
  i1 = 40152;
  i3 = 5;
 }
 if ((i3 | 0) == 5) while (1) {
  i3 = i1;
  while (1) {
   i1 = i3 + 1 | 0;
   if (!(HEAP8[i3 >> 0] | 0)) break; else i3 = i1;
  }
  i2 = i2 + -1 | 0;
  if (!i2) break; else i3 = 5;
 }
 return i1 | 0;
}

function __ZN10emscripten8internal12VectorAccessINSt3__16vectorIiNS2_9allocatorIiEEEEE3getERKS6_j(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i2 = i5;
 i1 = HEAP32[i4 >> 2] | 0;
 if ((HEAP32[i4 + 4 >> 2] | 0) - i1 >> 2 >>> 0 <= i3 >>> 0) {
  i4 = 1;
  STACKTOP = i5;
  return i4 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + (i3 << 2) >> 2];
 i4 = __emval_take_value(16112, i2 | 0) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZN10emscripten8internal12VectorAccessINSt3__16vectorIfNS2_9allocatorIfEEEEE3getERKS6_j(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i2 = i5;
 i1 = HEAP32[i4 >> 2] | 0;
 if ((HEAP32[i4 + 4 >> 2] | 0) - i1 >> 2 >>> 0 <= i3 >>> 0) {
  i4 = 1;
  STACKTOP = i5;
  return i4 | 0;
 }
 HEAP32[i2 >> 2] = HEAP32[i1 + (i3 << 2) >> 2];
 i4 = __emval_take_value(16144, i2 | 0) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZN7maxiOsc5pulseEdd(i5, d3, d2) {
 i5 = i5 | 0;
 d3 = +d3;
 d2 = +d2;
 var i1 = 0, d4 = 0.0;
 d4 = d2 < 0.0 ? 0.0 : d2;
 d4 = d4 > 1.0 ? 1.0 : d4;
 i1 = i5 + 8 | 0;
 d2 = +HEAPF64[i1 >> 3];
 if (d2 >= 1.0) {
  d2 = d2 + -1.0;
  HEAPF64[i1 >> 3] = d2;
 }
 d2 = 1.0 / (+(HEAP32[5083] | 0) / d3) + d2;
 HEAPF64[i1 >> 3] = d2;
 if (d2 < d4) HEAPF64[i5 + 32 >> 3] = -1.0;
 i1 = i5 + 32 | 0;
 if (d2 > d4) {
  HEAPF64[i1 >> 3] = 1.0;
  d4 = 1.0;
  return +d4;
 } else {
  d4 = +HEAPF64[i1 >> 3];
  return +d4;
 }
 return 0.0;
}

function __ZNSt3__16vectorIiNS_9allocatorIiEEE6resizeEjRKi(i5, i3, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0;
 i6 = i5 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i2 = i7 - i1 >> 2;
 if (i2 >>> 0 < i3 >>> 0) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEjRKi(i5, i3 - i2 | 0, i4);
  return;
 }
 if (i2 >>> 0 <= i3 >>> 0) return;
 i1 = i1 + (i3 << 2) | 0;
 if ((i7 | 0) == (i1 | 0)) return;
 HEAP32[i6 >> 2] = i7 + (~((i7 + -4 - i1 | 0) >>> 2) << 2);
 return;
}

function __ZNSt3__16vectorIfNS_9allocatorIfEEE6resizeEjRKf(i5, i3, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0;
 i6 = i5 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i2 = i7 - i1 >> 2;
 if (i2 >>> 0 < i3 >>> 0) {
  __ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEjRKf(i5, i3 - i2 | 0, i4);
  return;
 }
 if (i2 >>> 0 <= i3 >>> 0) return;
 i1 = i1 + (i3 << 2) | 0;
 if ((i7 | 0) == (i1 | 0)) return;
 HEAP32[i6 >> 2] = i7 + (~((i7 + -4 - i1 | 0) >>> 2) << 2);
 return;
}

function __ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEjRKd(i5, i3, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0;
 i6 = i5 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i2 = i7 - i1 >> 3;
 if (i2 >>> 0 < i3 >>> 0) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE8__appendEjRKd(i5, i3 - i2 | 0, i4);
  return;
 }
 if (i2 >>> 0 <= i3 >>> 0) return;
 i1 = i1 + (i3 << 3) | 0;
 if ((i7 | 0) == (i1 | 0)) return;
 HEAP32[i6 >> 2] = i7 + (~((i7 + -8 - i1 | 0) >>> 3) << 3);
 return;
}

function __ZN10emscripten8internal12VectorAccessINSt3__16vectorIcNS2_9allocatorIcEEEEE3getERKS6_j(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i2 = i5;
 i1 = HEAP32[i4 >> 2] | 0;
 if (((HEAP32[i4 + 4 >> 2] | 0) - i1 | 0) >>> 0 <= i3 >>> 0) {
  i4 = 1;
  STACKTOP = i5;
  return i4 | 0;
 }
 HEAP32[i2 >> 2] = HEAP8[i1 + i3 >> 0];
 i4 = __emval_take_value(16072, i2 | 0) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i5, i3, i2, i1, i4, i6) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 if ((i5 | 0) == (HEAP32[i3 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i3, i2, i1, i4); else {
  i5 = HEAP32[i5 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 3](i5, i3, i2, i1, i4, i6);
 }
 return;
}

function __ZNSt3__111make_sharedI9maxiClockJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(104) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22656;
 HEAPF64[i2 + 24 >> 3] = 0.0;
 HEAP32[i2 + 72 >> 2] = 0;
 HEAP32[i2 + 64 >> 2] = 0;
 HEAP32[i2 + 68 >> 2] = 0;
 HEAPF64[i2 + 88 >> 3] = 120.0;
 HEAP32[i2 + 96 >> 2] = 1;
 HEAPF64[i2 + 80 >> 3] = 2.0;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiSampleFvRNSt3__16vectorIdNS3_9allocatorIdEEEEiEvPS2_JS8_iEE6invokeERKSA_SB_PS7_i(i1, i2, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i3 = 0, i6 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i6 >> 1) | 0;
 if (!(i6 & 1)) {
  i6 = i3;
  FUNCTION_TABLE_viii[i6 & 31](i1, i4, i5);
  return;
 } else {
  i6 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_viii[i6 & 31](i1, i4, i5);
  return;
 }
}

function ___stdout_write(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i5;
 HEAP32[i2 + 36 >> 2] = 4;
 if ((HEAP32[i2 >> 2] & 64 | 0) == 0 ? (HEAP32[i4 >> 2] = HEAP32[i2 + 60 >> 2], HEAP32[i4 + 4 >> 2] = 21505, HEAP32[i4 + 8 >> 2] = i5 + 12, (___syscall54(54, i4 | 0) | 0) != 0) : 0) HEAP8[i2 + 75 >> 0] = -1;
 i4 = ___stdio_write(i2, i1, i3) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiEnvFddddddliEdPS2_JdddddliEE6invokeERKS4_S5_dddddli(i2, i3, d4, d5, d6, d7, d8, i9, i10) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i1 = 0, i11 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i11 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i11 >> 1) | 0;
 if (i11 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didddddii[i1 & 1](i2, d4, d5, d6, d7, d8, i9, i10));
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i7, i5, i4, i3, i6, i8) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i7 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i7 = HEAP32[i7 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 20 >> 2] & 3](i7, i5, i4, i3 + i1 | 0, (i2 & 2 | 0) != 0 ? i6 : 2, i8);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM21maxiFFTOctaveAnalyzerKFfiEfPKS2_JiEE6invokeERKS4_S6_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, d6 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  d6 = +FUNCTION_TABLE_dii[i5 & 31](i1, i4);
  return +d6;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d6 = +FUNCTION_TABLE_dii[i5 & 31](i1, i4);
  return +d6;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM21maxiFFTOctaveAnalyzerFvRNSt3__16vectorIfNS3_9allocatorIfEEEEEvPS2_JS8_EE6invokeERKSA_SB_PS7_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM16maxiMFCCAnalyserIdEFvjjjddjEvPS3_JjjjddjEE6invokeERKS5_S6_jjjddj(i2, i3, i4, i5, i6, d7, d8, i9) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 d7 = +d7;
 d8 = +d8;
 i9 = i9 | 0;
 var i1 = 0, i10 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i10 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i10 >> 1) | 0;
 if (i10 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_viiiiddi[i1 & 1](i2, i4, i5, i6, d7, d8, i9);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiMixFvdRNSt3__16vectorIdNS3_9allocatorIdEEEEdddEvPS2_JdS8_dddEE6invokeERKSA_SB_dPS7_ddd(i2, i3, d4, i5, d6, d7, d8) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 var i1 = 0, i9 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i9 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i9 >> 1) | 0;
 if (i9 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_vididdd[i1 & 1](i2, d4, i5, d6, d7, d8);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiSampleFvRNSt3__16vectorIdNS3_9allocatorIdEEEEEvPS2_JS8_EE6invokeERKSA_SB_PS7_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM16maxiPitchStretchI14hannWinFunctorEFvP10maxiSampleEvPS4_JS6_EE6invokeERKS8_S9_S6_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIiNS2_9allocatorIiEEEEKFjvEjPKS6_JEE6invokeERKS8_SA_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIfNS2_9allocatorIfEEEEKFjvEjPKS6_JEE6invokeERKS8_SA_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIdNS2_9allocatorIdEEEEKFjvEjPKS6_JEE6invokeERKS8_SA_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIcNS2_9allocatorIcEEEEKFjvEjPKS6_JEE6invokeERKS8_SA_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFvP10maxiSampleEvPS4_JS6_EE6invokeERKS8_S9_S6_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM14maxiPitchShiftI14hannWinFunctorEFvP10maxiSampleEvPS4_JS6_EE6invokeERKS8_S9_S6_(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23392;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiFFTFfiEfPS2_JiEE6invokeERKS4_S5_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, d6 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  d6 = +FUNCTION_TABLE_dii[i5 & 31](i1, i4);
  return +d6;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d6 = +FUNCTION_TABLE_dii[i5 & 31](i1, i4);
  return +d6;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM7convertFdiEdPS2_JiEE6invokeERKS4_S5_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, d6 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  d6 = +FUNCTION_TABLE_dii[i5 & 31](i1, i4);
  return +d6;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d6 = +FUNCTION_TABLE_dii[i5 & 31](i1, i4);
  return +d6;
 }
 return 0.0;
}

function __ZNSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23504;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23448;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM16maxiPitchStretchI14hannWinFunctorEFdvEdPS4_JEE6invokeERKS6_S7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFdvEdPS4_JEE6invokeERKS6_S7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM16maxiPitchStretchI14hannWinFunctorEFddddidEdPS4_JdddidEE6invokeERKS6_S7_dddid(i2, i3, d4, d5, d6, i7, d8) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 d8 = +d8;
 var i1 = 0, i9 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i9 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i9 >> 1) | 0;
 if (i9 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didddid[i1 & 1](i2, d4, d5, d6, i7, d8));
}

function __ZNSt3__16vectorIcNS_9allocatorIcEEE6resizeEjRKc(i5, i3, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i6 = 0, i7 = 0;
 i6 = i5 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 i2 = i7 - i1 | 0;
 if (i2 >>> 0 < i3 >>> 0) {
  __ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEjRKc(i5, i3 - i2 | 0, i4);
  return;
 }
 if (i2 >>> 0 <= i3 >>> 0) return;
 i1 = i1 + i3 | 0;
 if ((i7 | 0) == (i1 | 0)) return;
 HEAP32[i6 >> 2] = i1;
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i6, i4, i3, i5, i7) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 24 >> 2] & 7](i6, i4, i3 + i1 | 0, (i2 & 2 | 0) != 0 ? i5 : 2, i7);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM14maxiDistortionFddEdPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  d4 = +FUNCTION_TABLE_did[i5 & 15](i1, d4);
  return +d4;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d4 = +FUNCTION_TABLE_did[i5 & 15](i1, d4);
  return +d4;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM12maxiEnvelopeFvidEvPS2_JidEE6invokeERKS4_S5_id(i1, i2, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 var i3 = 0, i6 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i6 >> 1) | 0;
 if (!(i6 & 1)) {
  i6 = i3;
  FUNCTION_TABLE_viid[i6 & 31](i1, i4, d5);
  return;
 } else {
  i6 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_viid[i6 & 31](i1, i4, d5);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiSampleFddEdPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  d4 = +FUNCTION_TABLE_did[i5 & 15](i1, d4);
  return +d4;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d4 = +FUNCTION_TABLE_did[i5 & 15](i1, d4);
  return +d4;
 }
 return 0.0;
}

function __ZNSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22912;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiOscFddEdPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  d4 = +FUNCTION_TABLE_did[i5 & 15](i1, d4);
  return +d4;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d4 = +FUNCTION_TABLE_did[i5 & 15](i1, d4);
  return +d4;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiDynFddEdPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  d4 = +FUNCTION_TABLE_did[i5 & 15](i1, d4);
  return +d4;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d4 = +FUNCTION_TABLE_did[i5 & 15](i1, d4);
  return +d4;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiLagExpIdEFvddEvPS3_JddEE6invokeERKS5_S6_dd(i1, i2, d4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 d5 = +d5;
 var i3 = 0, i6 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i6 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i6 >> 1) | 0;
 if (!(i6 & 1)) {
  i6 = i3;
  FUNCTION_TABLE_vidd[i6 & 1](i1, d4, d5);
  return;
 } else {
  i6 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vidd[i6 & 1](i1, d4, d5);
  return;
 }
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 if ((i4 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i1, i3); else {
  i4 = HEAP32[i4 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 63](i4, i2, i1, i3);
 }
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23392;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23132;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23504;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiMixFvdRNSt3__16vectorIdNS3_9allocatorIdEEEEddEvPS2_JdS8_ddEE6invokeERKSA_SB_dPS7_dd(i2, i3, d4, i5, d6, d7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 var i1 = 0, i8 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i8 >> 1) | 0;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_vididd[i1 & 1](i2, d4, i5, d6, d7);
 return;
}

function __ZN10emscripten8internal12GetterPolicyIM21maxiFFTOctaveAnalyzerKFivEE3getIS2_EEiRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZNSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23448;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i6, i4, i3, i5) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 63](i6, i4, i3 + i1 | 0, (i2 & 2 | 0) != 0 ? i5 : 2);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM16maxiPitchStretchI14hannWinFunctorEFvdEvPS4_JdEE6invokeERKS6_S7_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal12GetterPolicyIM21maxiFFTOctaveAnalyzerKFfvEE3getIS2_EEfRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFvdEvPS4_JdEE6invokeERKS6_S7_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function ___towrite(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = i2 + 74 | 0;
 i3 = HEAP8[i1 >> 0] | 0;
 HEAP8[i1 >> 0] = i3 + 255 | i3;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!(i1 & 8)) {
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  i1 = HEAP32[i2 + 44 >> 2] | 0;
  HEAP32[i2 + 28 >> 2] = i1;
  HEAP32[i2 + 20 >> 2] = i1;
  HEAP32[i2 + 16 >> 2] = i1 + (HEAP32[i2 + 48 >> 2] | 0);
  i1 = 0;
 } else {
  HEAP32[i2 >> 2] = i1 | 32;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21920;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 20884;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22184;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21216;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiLagExpIdEKFdvEdPKS3_JEE6invokeERKS5_S7_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZNSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 20792;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22008;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21312;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 20988;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22096;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__16vectorIiNS2_9allocatorIiEEEEjRKiEbS7_JjS9_EE6invokeEPSB_PS6_ji(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i6 = i5;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAP32[i6 >> 2] = i2;
 i4 = FUNCTION_TABLE_iiii[i3 & 15](i4, i1, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiSampleFbvEbPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__16vectorIcNS2_9allocatorIcEEEEjRKcEbS7_JjS9_EE6invokeEPSB_PS6_jc(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i6 = i5;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAP8[i6 >> 0] = i2;
 i4 = FUNCTION_TABLE_iiii[i3 & 15](i4, i1, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZN10emscripten8internal12GetterPolicyIM12maxiSettingsKFivEE3getIS2_EEiRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal12GetterPolicyIM12maxiEnvelopeKFivEE3getIS2_EEiRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function copyTempDouble(i1) {
 i1 = i1 | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[i1 >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[i1 + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[i1 + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[i1 + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[i1 + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[i1 + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[i1 + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[i1 + 7 >> 0];
}

function __ZNSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22448;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22624;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__16vectorIfNS2_9allocatorIfEEEEjRKfEbS7_JjS9_EE6invokeEPSB_PS6_jf(i3, i4, i1, d2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i6 = i5;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAPF32[i6 >> 2] = d2;
 i4 = FUNCTION_TABLE_iiii[i3 & 15](i4, i1, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__16vectorIdNS2_9allocatorIdEEEEjRKdEbS7_JjS9_EE6invokeEPSB_PS6_jd(i3, i4, i1, d2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i6 = i5;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAPF64[i6 >> 3] = d2;
 i4 = FUNCTION_TABLE_iiii[i3 & 15](i4, i1, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZN10emscripten8internal13MethodInvokerIM9maxiClockFbvEbPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiSampleFdvEdPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal12GetterPolicyIM10maxiLagExpIdEKFdvEE3getIS3_EEdRKS5_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22360;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22968;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22536;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZN13maxiDelayline2dlEdid(i6, d5, i2, d4) {
 i6 = i6 | 0;
 d5 = +d5;
 i2 = i2 | 0;
 d4 = +d4;
 var i1 = 0, i3 = 0;
 i3 = i6 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i1 | 0) >= (i2 | 0)) {
  HEAP32[i3 >> 2] = 0;
  i1 = 0;
 }
 i2 = i6 + 40 + (i1 << 3) | 0;
 i6 = i6 + 32 | 0;
 HEAPF64[i6 >> 3] = +HEAPF64[i2 >> 3];
 HEAPF64[i2 >> 3] = d5 * d4 * .5 + +HEAPF64[i2 >> 3] * d4;
 HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 1;
 return +(+HEAPF64[i6 >> 3]);
}

function __ZN10emscripten8internal13MethodInvokerIM11maxiFlangerFddjdddEdPS2_JdjdddEE6invokeERKS4_S5_djddd(i2, i3, d4, i5, d6, d7, d8) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 var i1 = 0, i9 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i9 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i9 >> 1) | 0;
 if (i9 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_dididdd[i1 & 3](i2, d4, i5, d6, d7, d8));
}

function __ZN10emscripten8internal12GetterPolicyIM12maxiEnvelopeKFdvEE3getIS2_EEdRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22260;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 20664;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21084;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21456;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23024;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21696;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21556;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21848;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22912;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM9maxiSnareFdvEdPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFdddidEdPS4_JddidEE6invokeERKS6_S7_ddid(i2, i3, d4, d5, i6, d7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 d7 = +d7;
 var i1 = 0, i8 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i8 >> 1) | 0;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddid[i1 & 3](i2, d4, d5, i6, d7));
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiChorusFddjdddEdPS2_JdjdddEE6invokeERKS4_S5_djddd(i2, i3, d4, i5, d6, d7, d8) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 var i1 = 0, i9 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i9 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i9 >> 1) | 0;
 if (i9 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_dididdd[i1 & 3](i2, d4, i5, d6, d7, d8));
}

function __ZN10emscripten8internal13MethodInvokerIM8maxiKickFdvEdPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM8maxiHatsFdvEdPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiEnvFddddliEdPS2_JdddliEE6invokeERKS4_S5_dddli(i2, i3, d4, d5, d6, i7, i8) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i9 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i9 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i9 >> 1) | 0;
 if (i9 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didddii[i1 & 1](i2, d4, d5, d6, i7, i8));
}

function __ZN10emscripten8internal13MethodInvokerIM14maxiPitchShiftI14hannWinFunctorEFdddidEdPS4_JddidEE6invokeERKS6_S7_ddid(i2, i3, d4, d5, i6, d7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 d7 = +d7;
 var i1 = 0, i8 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i8 >> 1) | 0;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddid[i1 & 3](i2, d4, d5, i6, d7));
}

function __ZN10emscripten8internal12GetterPolicyIM9maxiClockKFivEE3getIS2_EEiRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal12GetterPolicyIM9maxiClockKFbvEE3getIS2_EEbRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal12GetterPolicyIM10maxiFilterKFdvEE3getIS2_EEdRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZNSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23132;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiOscFdvEdPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiFFTFfvEfPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal12GetterPolicyIM9maxiClockKFdvEE3getIS2_EEdRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, d5 = 0.0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  d5 = +FUNCTION_TABLE_di[i4 & 31](i1);
  return +d5;
 }
 return 0.0;
}

function __ZN10emscripten8internal12GetterPolicyIM7maxiFFTKFivEE3getIS2_EEiRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal12GetterPolicyIM7maxiEnvKFivEE3getIS2_EEiRKS4_RKT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  i4 = FUNCTION_TABLE_ii[i4 & 127](i1) | 0;
  return i4 | 0;
 }
 return 0;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiDynFdddlddEdPS2_JddlddEE6invokeERKS4_S5_ddldd(i2, i3, d4, d5, i6, d7, d8) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 d7 = +d7;
 d8 = +d8;
 var i1 = 0, i9 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i9 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i9 >> 1) | 0;
 if (i9 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddidd[i1 & 1](i2, d4, d5, i6, d7, d8));
}

function __ZN10emscripten8internal12SetterPolicyIM21maxiFFTOctaveAnalyzerFviEE3setIS2_EEvRKS4_RT_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21920;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiSVFFddddddEdPS2_JdddddEE6invokeERKS4_S5_ddddd(i2, i3, d4, d5, d6, d7, d8) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 var i1 = 0, i9 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i9 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i9 >> 1) | 0;
 if (i9 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddddd[i1 & 3](i2, d4, d5, d6, d7, d8));
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiDynFddddddEdPS2_JdddddEE6invokeERKS4_S5_ddddd(i2, i3, d4, d5, d6, d7, d8) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 d8 = +d8;
 var i1 = 0, i9 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i9 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i9 >> 1) | 0;
 if (i9 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddddd[i1 & 3](i2, d4, d5, d6, d7, d8));
}

function __ZNSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 20884;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22184;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21216;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 20792;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZN10emscripten8internal12SetterPolicyIM21maxiFFTOctaveAnalyzerFvfEE3setIS2_EEvRKS4_RT_f(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22008;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21312;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 20988;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22096;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__111make_sharedI13maxiDCBlockerJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __Znwj(32) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22216;
 i3 = i2 + 16 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM9maxiClockFviEvPS2_JiEE6invokeERKS4_S5_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiMixFvdRNSt3__16vectorIdNS3_9allocatorIdEEEEdEvPS2_JdS8_dEE6invokeERKSA_SB_dPS7_d(i2, i3, d4, i5, d6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_vidid[i1 & 1](i2, d4, i5, d6);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiLagExpIdEFvdEvPS3_JdEE6invokeERKS5_S6_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22448;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22624;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZN10emscripten8internal12SetterPolicyIM12maxiSettingsFviEE3setIS2_EEvRKS4_RT_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal12SetterPolicyIM12maxiEnvelopeFviEE3setIS2_EEvRKS4_RT_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22360;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22968;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22536;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 22260;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 20664;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21084;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21456;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 23024;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21696;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21556;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 21848;
 __THREW__ = 0;
 invoke_vi(286, HEAP32[i1 + 16 >> 2] | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__114__shared_countD2Ev(i1);
  return;
 }
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiIFFTNS_9allocatorIS1_EEED0Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 >> 2] = 22940;
 i1 = HEAP32[i3 + 48 >> 2] | 0;
 if (i1) {
  i2 = HEAP32[i1 + 8 >> 2] | 0;
  if (i2) __ZdaPv(i2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i3 + 12 >> 2] | 0;
 if (!i1) {
  __ZNSt3__114__shared_countD2Ev(i3);
  __ZdlPv(i3);
  return;
 }
 __ZdaPv(i1);
 __ZNSt3__114__shared_countD2Ev(i3);
 __ZdlPv(i3);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM9maxiSnareFvdEvPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM9maxiClockFvdEvPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM8maxiKickFvdEvPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM8maxiHatsFvdEvPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM13maxiDelaylineFddidiEdPS2_JdidiEE6invokeERKS4_S5_didi(i2, i3, d4, i5, d6, i7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 i7 = i7 | 0;
 var i1 = 0, i8 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i8 >> 1) | 0;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_dididi[i1 & 1](i2, d4, i5, d6, i7));
}

function __ZN10emscripten8internal12SetterPolicyIM9maxiClockFviEE3setIS2_EEvRKS4_RT_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal12SetterPolicyIM10maxiLagExpIdEFvdEE3setIS3_EEvRKS5_RT_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiOscFvdEvPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiEnvFvdEvPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiDynFvdEvPS2_JdEE6invokeERKS4_S5_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal12SetterPolicyIM12maxiEnvelopeFvdEE3setIS2_EEvRKS4_RT_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal12SetterPolicyIM7maxiFFTFviEE3setIS2_EEvRKS4_RT_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal12SetterPolicyIM7maxiEnvFviEE3setIS2_EEvRKS4_RT_i(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vii[i5 & 127](i1, i4);
  return;
 }
}

function __ZN10emscripten8internal12SetterPolicyIM10maxiFilterFvdEE3setIS2_EEvRKS4_RT_d(i1, i2, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d4 = +d4;
 var i3 = 0, i5 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i5 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i5 >> 1) | 0;
 if (!(i5 & 1)) {
  i5 = i3;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 } else {
  i5 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vid[i5 & 63](i1, d4);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM8maxiIFFTFfRNSt3__16vectorIfNS3_9allocatorIfEEEES8_EfPS2_JS8_S8_EE6invokeERKSA_SB_PS7_SF_(i2, i3, i4, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i6 >> 1) | 0;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diii[i1 & 7](i2, i4, i5));
}

function __ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFdddiEdPS4_JddiEE6invokeERKS6_S7_ddi(i2, i3, d4, d5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddi[i1 & 1](i2, d4, d5, i6));
}

function __ZN10emscripten8internal13MethodInvokerIM12maxiEnvelopeFdiRNSt3__16vectorIdNS3_9allocatorIdEEEEEdPS2_JiS8_EE6invokeERKSA_SB_iPS7_(i2, i3, i4, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i6 >> 1) | 0;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diii[i1 & 7](i2, i4, i5));
}

function __ZN7maxiOsc7sinebufEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0, d4 = 0.0;
 i3 = i2 + 8 | 0;
 d4 = 512.0 / (+(HEAP32[5083] | 0) / (+HEAPF32[5082] * d1)) + +HEAPF64[i3 >> 3];
 d4 = !(d4 >= 511.0) ? d4 : d4 + -512.0;
 HEAPF64[i3 >> 3] = d4;
 d1 = d4 - +Math_floor(+d4);
 i3 = ~~d4;
 d1 = +HEAPF64[8 + (i3 + 2 << 3) >> 3] * d1 + +HEAPF64[8 + (i3 + 1 << 3) >> 3] * (1.0 - d1);
 HEAPF64[i2 + 32 >> 3] = d1;
 return +d1;
}

function __ZNSt3__111make_sharedI10maxiLagExpIdEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS4_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __Znwj(40) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21248;
 i3 = i2 + 16 | 0;
 HEAPF64[i3 >> 3] = .5;
 HEAPF64[i2 + 24 >> 3] = .5;
 HEAPF64[i2 + 32 >> 3] = 0.0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__111make_sharedI16maxiMFCCAnalyserIdEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS4_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = __Znwj(64) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 23104;
 i3 = i2 + 16 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i2 + 52 >> 2] = 0;
 HEAP32[i2 + 60 >> 2] = 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM21maxiFFTOctaveAnalyzerFvfiiEvPS2_JfiiEE6invokeERKS4_S5_fii(i2, i3, d4, i5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_vidii[i1 & 1](i2, d4, i5, i6);
 return;
}

function __ZN10maxiSample8playOnceEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, d3 = 0.0;
 i1 = i2 + 40 | 0;
 d3 = +HEAPF64[i1 >> 3] + 1.0;
 HEAPF64[i1 >> 3] = d3;
 i1 = ~~d3;
 if ((i1 | 0) >= (HEAP32[i2 + 108 >> 2] | 0)) {
  d3 = 0.0;
  i2 = i2 + 64 | 0;
  HEAPF64[i2 >> 3] = d3;
  return +d3;
 }
 d3 = +(HEAP16[(HEAP32[i2 + 128 >> 2] | 0) + (i1 << 1) >> 1] | 0) / 32767.0;
 i2 = i2 + 64 | 0;
 HEAPF64[i2 >> 3] = d3;
 return +d3;
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiSampleFvvEvPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM9maxiSnareFvvEvPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM9maxiClockFvvEvPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM8maxiKickFvvEvPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM8maxiHatsFvvEvPS2_JEE6invokeERKS4_S5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i1 = i2 + (i4 >> 1) | 0;
 if (!(i4 & 1)) {
  i4 = i3;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 } else {
  i4 = HEAP32[(HEAP32[i1 >> 2] | 0) + i3 >> 2] | 0;
  FUNCTION_TABLE_vi[i4 & 511](i1);
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM13maxiDelaylineFddidEdPS2_JdidEE6invokeERKS4_S5_did(i2, i3, d4, i5, d6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didid[i1 & 1](i2, d4, i5, d6));
}

function ___cxa_can_catch(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i5;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 i1 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 15](i1, i2, i3) | 0;
 if (i1) HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 STACKTOP = i5;
 return i1 & 1 | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiIFFTNS_9allocatorIS1_EEED2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 HEAP32[i3 >> 2] = 22940;
 i1 = HEAP32[i3 + 48 >> 2] | 0;
 if (i1) {
  i2 = HEAP32[i1 + 8 >> 2] | 0;
  if (i2) __ZdaPv(i2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i3 + 12 >> 2] | 0;
 if (!i1) {
  __ZNSt3__114__shared_countD2Ev(i3);
  return;
 }
 __ZdaPv(i1);
 __ZNSt3__114__shared_countD2Ev(i3);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM8maxiIFFTFviiiEvPS2_JiiiEE6invokeERKS4_S5_iii(i2, i3, i4, i5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_viiii[i1 & 63](i2, i4, i5, i6);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiFFTFviiiEvPS2_JiiiEE6invokeERKS4_S5_iii(i2, i3, i4, i5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_viiii[i1 & 63](i2, i4, i5, i6);
 return;
}

function __ZN7maxiFFT13setMagnitudesENSt3__16vectorIfNS0_9allocatorIfEEEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = i1 + 4 | 0;
 if ((i1 | 0) == (i2 | 0)) return;
 __ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0);
 return;
}

function __Znwj(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (i1 | 0) == 0 ? 1 : i1;
 i1 = _malloc(i2) | 0;
 L1 : do if (!i1) {
  while (1) {
   i1 = __ZSt15get_new_handlerv() | 0;
   if (!i1) break;
   FUNCTION_TABLE_v[i1 & 7]();
   i1 = _malloc(i2) | 0;
   if (i1) break L1;
  }
  i2 = ___cxa_allocate_exception(4) | 0;
  HEAP32[i2 >> 2] = 23536;
  ___cxa_throw(i2 | 0, 15936, 200);
 } while (0);
 return i1 | 0;
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiSampleFddddEdPS2_JdddEE6invokeERKS4_S5_ddd(i2, i3, d4, d5, d6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddd[i1 & 7](i2, d4, d5, d6));
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiFilterFddddEdPS2_JdddEE6invokeERKS4_S5_ddd(i2, i3, d4, d5, d6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddd[i1 & 7](i2, d4, d5, d6));
}

function ___muldsi3(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i1 & 65535;
 i5 = i2 & 65535;
 i3 = Math_imul(i5, i6) | 0;
 i4 = i1 >>> 16;
 i1 = (i3 >>> 16) + (Math_imul(i5, i4) | 0) | 0;
 i5 = i2 >>> 16;
 i2 = Math_imul(i5, i6) | 0;
 return (tempRet0 = (i1 >>> 16) + (Math_imul(i5, i4) | 0) + (((i1 & 65535) + i2 | 0) >>> 16) | 0, i1 + i2 << 16 | i3 & 65535 | 0) | 0;
}

function __ZN7maxiOsc6phasorEddd(i2, d6, d7, d5) {
 i2 = i2 | 0;
 d6 = +d6;
 d7 = +d7;
 d5 = +d5;
 var d1 = 0.0, i3 = 0, d4 = 0.0;
 i3 = i2 + 8 | 0;
 d4 = +HEAPF64[i3 >> 3];
 HEAPF64[i2 + 32 >> 3] = d4;
 if (d4 < d7) {
  HEAPF64[i3 >> 3] = d7;
  d1 = d7;
 } else d1 = d4;
 if (d1 >= d5) {
  HEAPF64[i3 >> 3] = d7;
  d1 = d7;
 }
 HEAPF64[i3 >> 3] = (d5 - d7) / (+(HEAP32[5083] | 0) / d6) + d1;
 return +d4;
}

function __ZN7maxiFFT9setPhasesENSt3__16vectorIfNS0_9allocatorIfEEEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = i1 + 16 | 0;
 if ((i1 | 0) == (i2 | 0)) return;
 __ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPfEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0);
 return;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiOscFddddEdPS2_JdddEE6invokeERKS4_S5_ddd(i2, i3, d4, d5, d6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 var i1 = 0, i7 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i7 >> 1) | 0;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_diddd[i1 & 7](i2, d4, d5, d6));
}

function __ZNSt3__111make_sharedI11maxiFlangerJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(705704) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22040;
 _memset(i2 + 56 | 0, 0, 705600) | 0;
 HEAPF64[i2 + 705664 >> 3] = 0.0;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__16vectorIdNS_9allocatorIdEEE9push_backERKd(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i4 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) {
  __ZNSt3__16vectorIdNS_9allocatorIdEEE21__push_back_slow_pathIRKdEEvOT_(i4, i3);
  return;
 } else {
  HEAPF64[i2 >> 3] = +HEAPF64[i3 >> 3];
  HEAP32[i1 >> 2] = i2 + 8;
  return;
 }
}

function __ZN10emscripten8internal14raw_destructorINSt3__16vectorIiNS2_9allocatorIiEEEEEEvPT_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 if (!i5) return;
 i1 = HEAP32[i5 >> 2] | 0;
 i2 = i1;
 if (i1) {
  i3 = i5 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) != (i1 | 0)) HEAP32[i3 >> 2] = i4 + (~((i4 + -4 - i2 | 0) >>> 2) << 2);
  __ZdlPv(i1);
 }
 __ZdlPv(i5);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__16vectorIfNS2_9allocatorIfEEEEEEvPT_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 if (!i5) return;
 i1 = HEAP32[i5 >> 2] | 0;
 i2 = i1;
 if (i1) {
  i3 = i5 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) != (i1 | 0)) HEAP32[i3 >> 2] = i4 + (~((i4 + -4 - i2 | 0) >>> 2) << 2);
  __ZdlPv(i1);
 }
 __ZdlPv(i5);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__16vectorIdNS2_9allocatorIdEEEEEEvPT_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 if (!i5) return;
 i1 = HEAP32[i5 >> 2] | 0;
 i2 = i1;
 if (i1) {
  i3 = i5 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) != (i1 | 0)) HEAP32[i3 >> 2] = i4 + (~((i4 + -8 - i2 | 0) >>> 3) << 3);
  __ZdlPv(i1);
 }
 __ZdlPv(i5);
 return;
}

function __ZNSt3__16vectorIiNS_9allocatorIiEEE9push_backERKi(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i4 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) {
  __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_(i4, i3);
  return;
 } else {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 >> 2] = i2 + 4;
  return;
 }
}

function __ZNSt3__16vectorIfNS_9allocatorIfEEE9push_backERKf(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i4 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) {
  __ZNSt3__16vectorIfNS_9allocatorIfEEE21__push_back_slow_pathIRKfEEvOT_(i4, i3);
  return;
 } else {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 >> 2] = i2 + 4;
  return;
 }
}

function __ZN10emscripten8internal13MethodInvokerIM14maxiDistortionFdddEdPS2_JddEE6invokeERKS4_S5_dd(i2, i3, d4, d5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 var i1 = 0, i6 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i6 >> 1) | 0;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didd[i1 & 7](i2, d4, d5));
}

function __ZN10emscripten8internal13MethodInvokerIM13maxiDCBlockerFdddEdPS2_JddEE6invokeERKS4_S5_dd(i2, i3, d4, d5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 var i1 = 0, i6 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i6 >> 1) | 0;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didd[i1 & 7](i2, d4, d5));
}

function __ZN10emscripten8internal13MethodInvokerIM10maxiFilterFdddEdPS2_JddEE6invokeERKS4_S5_dd(i2, i3, d4, d5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 var i1 = 0, i6 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i6 >> 1) | 0;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didd[i1 & 7](i2, d4, d5));
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiEnvFddiEdPS2_JdiEE6invokeERKS4_S5_di(i2, i3, d4, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i6 >> 1) | 0;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didi[i1 & 1](i2, d4, i5));
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i5, i3, i2, i1, i4, i6) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 if ((i5 | 0) == (HEAP32[i3 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i3, i2, i1, i4);
 return;
}

function _memmove(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i4 | 0) < (i1 | 0) & (i1 | 0) < (i4 + i2 | 0)) {
  i3 = i1;
  i4 = i4 + i2 | 0;
  i1 = i1 + i2 | 0;
  while ((i2 | 0) > 0) {
   i1 = i1 - 1 | 0;
   i4 = i4 - 1 | 0;
   i2 = i2 - 1 | 0;
   HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  }
  i1 = i3;
 } else _memcpy(i1, i4, i2) | 0;
 return i1 | 0;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiOscFdddEdPS2_JddEE6invokeERKS4_S5_dd(i2, i3, d4, d5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 var i1 = 0, i6 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i6 >> 1) | 0;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return +(+FUNCTION_TABLE_didd[i1 & 7](i2, d4, d5));
}

function __ZN10emscripten8internal13MethodInvokerIM21maxiFFTOctaveAnalyzerKFiiEiPKS2_JiEE6invokeERKS4_S6_i(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i5 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i5 >> 1) | 0;
 if (i5 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return FUNCTION_TABLE_iii[i1 & 127](i2, i4) | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI16maxiMFCCAnalyserIdENS_9allocatorIS2_EEED0Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 23104;
 i1 = HEAP32[i2 + 52 >> 2] | 0;
 if (i1) {
  __ZdaPv(i1);
  i1 = HEAP32[i2 + 16 >> 2] | 0;
  if (i1) __ZdaPv(i1);
  i1 = HEAP32[i2 + 60 >> 2] | 0;
  if (i1) __ZdaPv(i1);
 }
 __ZNSt3__114__shared_countD2Ev(i2);
 __ZdlPv(i2);
 return;
}

function __ZN7maxiOsc6squareEd(i4, d3) {
 i4 = i4 | 0;
 d3 = +d3;
 var d1 = 0.0, i2 = 0;
 i2 = i4 + 8 | 0;
 d1 = +HEAPF64[i2 >> 3];
 if (d1 < .5) HEAPF64[i4 + 32 >> 3] = -1.0;
 if (d1 > .5) HEAPF64[i4 + 32 >> 3] = 1.0;
 if (d1 >= 1.0) {
  d1 = d1 + -1.0;
  HEAPF64[i2 >> 3] = d1;
 }
 HEAPF64[i2 >> 3] = 1.0 / (+(HEAP32[5083] | 0) / d3) + d1;
 return +(+HEAPF64[i4 + 32 >> 3]);
}

function _llvm_cttz_i32(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP8[cttz_i8 + (i2 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 | 0;
 i1 = HEAP8[cttz_i8 + (i2 >> 8 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 + 8 | 0;
 i1 = HEAP8[cttz_i8 + (i2 >> 16 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 + 16 | 0;
 return (HEAP8[cttz_i8 + (i2 >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI16maxiMFCCAnalyserIdENS_9allocatorIS2_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 23104;
 i1 = HEAP32[i2 + 52 >> 2] | 0;
 if (i1) {
  __ZdaPv(i1);
  i1 = HEAP32[i2 + 16 >> 2] | 0;
  if (i1) __ZdaPv(i1);
  i1 = HEAP32[i2 + 60 >> 2] | 0;
  if (i1) __ZdaPv(i1);
 }
 __ZNSt3__114__shared_countD2Ev(i2);
 return;
}

function __ZNSt3__111make_sharedI13maxiDelaylineJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(705656) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 20916;
 _memset(i2 + 56 | 0, 0, 705600) | 0;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN7maxiOsc8triangleEd(i4, d3) {
 i4 = i4 | 0;
 d3 = +d3;
 var d1 = 0.0, i2 = 0;
 i2 = i4 + 8 | 0;
 d1 = +HEAPF64[i2 >> 3];
 if (d1 >= 1.0) {
  d1 = d1 + -1.0;
  HEAPF64[i2 >> 3] = d1;
 }
 d3 = 1.0 / (+(HEAP32[5083] | 0) / d3) + d1;
 HEAPF64[i2 >> 3] = d3;
 d3 = ((!(d3 <= .5) ? 1.0 - d3 : d3) + -.25) * 4.0;
 HEAPF64[i4 + 32 >> 3] = d3;
 return +d3;
}

function __ZN10emscripten8internal13MethodInvokerIM7maxiFFTFbfEbPS2_JfEE6invokeERKS4_S5_f(i2, i3, d4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 var i1 = 0, i5 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 i5 = HEAP32[i2 + 4 >> 2] | 0;
 i2 = i3 + (i5 >> 1) | 0;
 if (i5 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 return FUNCTION_TABLE_iid[i1 & 3](i2, d4) | 0;
}

function __ZN7maxiMix6stereoEdRNSt3__16vectorIdNS0_9allocatorIdEEEEd(i2, d1, i3, d4) {
 i2 = i2 | 0;
 d1 = +d1;
 i3 = i3 | 0;
 d4 = +d4;
 var d5 = 0.0;
 d4 = d4 > 1.0 ? 1.0 : d4;
 d4 = d4 < 0.0 ? 0.0 : d4;
 d5 = +Math_sqrt(+(1.0 - d4)) * d1;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAPF64[i3 >> 3] = d5;
 d4 = +Math_sqrt(+d4) * d1;
 HEAPF64[i3 + 8 >> 3] = d4;
 return;
}

function __ZN7maxiOsc8sinewaveEd(i2, d5) {
 i2 = i2 | 0;
 d5 = +d5;
 var d1 = 0.0, i3 = 0, d4 = 0.0;
 i3 = i2 + 8 | 0;
 d1 = +HEAPF64[i3 >> 3];
 d4 = +Math_sin(+(d1 * 6.283185307179586));
 HEAPF64[i2 + 32 >> 3] = d4;
 if (d1 >= 1.0) {
  d1 = d1 + -1.0;
  HEAPF64[i3 >> 3] = d1;
 }
 HEAPF64[i3 >> 3] = 1.0 / (+(HEAP32[5083] | 0) / d5) + d1;
 return +d4;
}

function __ZN7maxiOsc7coswaveEd(i2, d5) {
 i2 = i2 | 0;
 d5 = +d5;
 var d1 = 0.0, i3 = 0, d4 = 0.0;
 i3 = i2 + 8 | 0;
 d1 = +HEAPF64[i3 >> 3];
 d4 = +Math_cos(+(d1 * 6.283185307179586));
 HEAPF64[i2 + 32 >> 3] = d4;
 if (d1 >= 1.0) {
  d1 = d1 + -1.0;
  HEAPF64[i3 >> 3] = d1;
 }
 HEAPF64[i3 >> 3] = 1.0 / (+(HEAP32[5083] | 0) / d5) + d1;
 return +d4;
}

function __ZNSt3__111make_sharedI7maxiOscJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(64) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 20696;
 HEAPF64[i2 + 24 >> 3] = 0.0;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__111make_sharedI8maxiIFFTJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(52) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22940;
 HEAP32[i2 + 48 >> 2] = 0;
 HEAP32[i1 >> 2] = i2 + 12;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__111make_sharedI7maxiEnvJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(104) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21728;
 HEAP32[i2 + 76 >> 2] = 1;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN16maxiPitchStretchI14hannWinFunctorE11setPositionEd(i3, d1) {
 i3 = i3 | 0;
 d1 = +d1;
 var d2 = 0.0, i4 = 0;
 i4 = HEAP32[(HEAP32[i3 + 8 >> 2] | 0) + 108 >> 2] | 0;
 d1 = +(i4 | 0) * d1;
 HEAPF64[i3 >> 3] = d1;
 d2 = +(i4 + -1 | 0);
 if (!(d1 > d2)) {
  if (d1 < 0.0) d1 = 0.0;
 } else d1 = d2;
 HEAPF64[i3 >> 3] = d1;
 return;
}

function _rand() {
 var i1 = 0, i2 = 0, i3 = 0;
 i2 = 20288;
 i2 = ___muldi3(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
 i2 = _i64Add(i2 | 0, tempRet0 | 0, 1, 0) | 0;
 i1 = tempRet0;
 i3 = 20288;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i3 + 4 >> 2] = i1;
 i1 = _bitshift64Lshr(i2 | 0, i1 | 0, 33) | 0;
 return i1 | 0;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 if ((i4 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i1, i3);
 return;
}

function __ZN15maxiTimestretchI14hannWinFunctorE11setPositionEd(i3, d1) {
 i3 = i3 | 0;
 d1 = +d1;
 var d2 = 0.0, i4 = 0;
 i4 = HEAP32[(HEAP32[i3 + 8 >> 2] | 0) + 108 >> 2] | 0;
 d1 = +(i4 | 0) * d1;
 HEAPF64[i3 >> 3] = d1;
 d2 = +(i4 + -1 | 0);
 if (!(d1 > d2)) {
  if (d1 < 0.0) d1 = 0.0;
 } else d1 = d2;
 HEAPF64[i3 >> 3] = d1;
 return;
}

function __ZNSt3__111make_sharedI21maxiFFTOctaveAnalyzerJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(72) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 22884;
 HEAP32[i1 >> 2] = i2 + 12;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN10maxiSample4playEv(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, i3 = 0;
 i3 = i1 + 40 | 0;
 d2 = +HEAPF64[i3 >> 3] + 1.0;
 d2 = (~~d2 | 0) < (HEAP32[i1 + 108 >> 2] | 0) ? d2 : 0.0;
 HEAPF64[i3 >> 3] = d2;
 d2 = +(HEAP16[(HEAP32[i1 + 128 >> 2] | 0) + (~~d2 << 1) >> 1] | 0) / 32767.0;
 HEAPF64[i1 + 64 >> 3] = d2;
 return +d2;
}

function __ZNSt3__120__shared_ptr_emplaceI16maxiMFCCAnalyserIdENS_9allocatorIS2_EEE16__on_zero_sharedEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 52 >> 2] | 0;
 if (!i1) return;
 __ZdaPv(i1);
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if (i1) __ZdaPv(i1);
 i1 = HEAP32[i2 + 60 >> 2] | 0;
 if (!i1) return;
 __ZdaPv(i1);
 return;
}

function __ZNSt3__111make_sharedI14maxiDistortionJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(16) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21952;
 HEAP32[i1 >> 2] = i2 + 12;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function ___cxa_get_globals_fast() {
 var i1 = 0, i2 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 if (!(_pthread_once(23732, 4) | 0)) {
  i2 = _pthread_getspecific(HEAP32[5932] | 0) | 0;
  STACKTOP = i1;
  return i2 | 0;
 } else _abort_message(39662, i1);
 return 0;
}

function __ZN7maxiOsc6phasorEd(i2, d5) {
 i2 = i2 | 0;
 d5 = +d5;
 var d1 = 0.0, i3 = 0, d4 = 0.0;
 i3 = i2 + 8 | 0;
 d4 = +HEAPF64[i3 >> 3];
 HEAPF64[i2 + 32 >> 3] = d4;
 if (!(d4 >= 1.0)) d1 = d4; else {
  d1 = d4 + -1.0;
  HEAPF64[i3 >> 3] = d1;
 }
 HEAPF64[i3 >> 3] = 1.0 / (+(HEAP32[5083] | 0) / d5) + d1;
 return +d4;
}

function __ZNSt3__111make_sharedI12maxiEnvelopeJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(72) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 20824;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiIFFTNS_9allocatorIS1_EEE16__on_zero_sharedEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP32[i3 + 48 >> 2] | 0;
 if (i1) {
  i2 = HEAP32[i1 + 8 >> 2] | 0;
  if (i2) __ZdaPv(i2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i3 + 12 >> 2] | 0;
 if (!i1) return;
 __ZdaPv(i1);
 return;
}

function __ZN7maxiOsc3sawEd(i2, d5) {
 i2 = i2 | 0;
 d5 = +d5;
 var d1 = 0.0, i3 = 0, d4 = 0.0;
 i3 = i2 + 8 | 0;
 d4 = +HEAPF64[i3 >> 3];
 HEAPF64[i2 + 32 >> 3] = d4;
 if (!(d4 >= 1.0)) d1 = d4; else {
  d1 = d4 + -2.0;
  HEAPF64[i3 >> 3] = d1;
 }
 HEAPF64[i3 >> 3] = 1.0 / (+(HEAP32[5083] | 0) / d5) + d1;
 return +d4;
}

function __ZN10emscripten8internal14raw_destructorI16maxiMFCCAnalyserIdEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 36 >> 2] | 0;
 if (i1) {
  __ZdaPv(i1);
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1) __ZdaPv(i1);
  i1 = HEAP32[i2 + 44 >> 2] | 0;
  if (i1) __ZdaPv(i1);
 }
 __ZdlPv(i2);
 return;
}

function __ZNSt3__111make_sharedI7maxiMixJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(136) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21116;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__111make_sharedI7maxiDynJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(104) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21588;
 HEAP32[i1 >> 2] = i2 + 16;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__111make_sharedI7maxiMapJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(16) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21488;
 HEAP32[i1 >> 2] = i2 + 12;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZNSt3__111make_sharedI7convertJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __Znwj(16) | 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP32[i2 >> 2] = 21880;
 HEAP32[i1 >> 2] = i2 + 12;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__16vectorIcNS2_9allocatorIcEEEEEEvPT_(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 if (!i3) return;
 i1 = HEAP32[i3 >> 2] | 0;
 if (i1) {
  i2 = i3 + 4 | 0;
  if ((HEAP32[i2 >> 2] | 0) != (i1 | 0)) HEAP32[i2 >> 2] = i1;
  __ZdlPv(i1);
 }
 __ZdlPv(i3);
 return;
}

function __ZN10emscripten8internal14raw_destructorI8maxiIFFTEEvPT_(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 if (!i3) return;
 i1 = HEAP32[i3 + 36 >> 2] | 0;
 if (i1) {
  i2 = HEAP32[i1 + 8 >> 2] | 0;
  if (i2) __ZdaPv(i2);
  __ZdlPv(i1);
 }
 i1 = HEAP32[i3 >> 2] | 0;
 if (i1) __ZdaPv(i1);
 __ZdlPv(i3);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 _free(i1);
 if (!(_pthread_setspecific(HEAP32[5932] | 0, 0) | 0)) {
  STACKTOP = i2;
  return;
 } else _abort_message(39866, i2);
}

function __ZNKSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 36339 ? i2 + 16 | 0 : 0) | 0;
}

function ___uremdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i6 | 0;
 ___udivmoddi4(i1, i2, i3, i4, i5) | 0;
 STACKTOP = i6;
 return (tempRet0 = HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 >> 2] | 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 37368 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 36859 ? i2 + 16 | 0 : 0) | 0;
}

function dynCall_diidddddii(i10, i1, i2, d3, d4, d5, d6, d7, i8, i9) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 i8 = i8 | 0;
 i9 = i9 | 0;
 return +FUNCTION_TABLE_diidddddii[i10 & 1](i1 | 0, i2 | 0, +d3, +d4, +d5, +d6, +d7, i8 | 0, i9 | 0);
}

function __ZN11vectorTools16clearVectorFloatERNSt3__16vectorIfNS0_9allocatorIfEEEE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (i3 | 0)) return;
 HEAP32[i1 >> 2] = i2 + (~((i2 + -4 - i3 | 0) >>> 2) << 2);
 return;
}

function ___stdio_close(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i3 = i2;
 HEAP32[i3 >> 2] = HEAP32[i1 + 60 >> 2];
 i1 = ___syscall_ret(___syscall6(6, i3 | 0) | 0) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZN11vectorTools14clearVectorDblERNSt3__16vectorIdNS0_9allocatorIdEEEE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (i3 | 0)) return;
 HEAP32[i1 >> 2] = i2 + (~((i2 + -8 - i3 | 0) >>> 3) << 3);
 return;
}

function _abort_message(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i3;
 HEAP32[i4 >> 2] = i2;
 i3 = HEAP32[5946] | 0;
 _vfprintf(i3, i1, i4) | 0;
 _fputc(10, i3) | 0;
 _abort();
}

function __ZNSt3__114__shared_count16__release_sharedEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 + -1;
 if (!i2) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 511](i1);
  i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 34471 ? i2 + 16 | 0 : 0) | 0;
}

function _fprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vfprintf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 35610 ? i2 + 16 | 0 : 0) | 0;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function _printf(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 i4 = i3;
 HEAP32[i4 >> 2] = i2;
 i2 = _vfprintf(HEAP32[5947] | 0, i1, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 30888 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 27688 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 31990 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 28782 ? i2 + 16 | 0 : 0) | 0;
}

function ___muldi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1;
 i6 = i3;
 i3 = ___muldsi3(i5, i6) | 0;
 i1 = tempRet0;
 return (tempRet0 = (Math_imul(i2, i6) | 0) + (Math_imul(i4, i5) | 0) + i1 | i1 & 0, i3 | 0 | 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 27310 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 31258 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 29151 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 28066 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 31624 ? i2 + 16 | 0 : 0) | 0;
}

function dynCall_viiiiiddi(i9, i1, i2, i3, i4, i5, d6, d7, i8) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 i8 = i8 | 0;
 FUNCTION_TABLE_viiiiiddi[i9 & 1](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6, +d7, i8 | 0);
}

function __ZNKSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 33009 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 33682 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 32672 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 34888 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 33345 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 32337 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 26936 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 28404 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 29489 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 35220 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 30173 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 29829 ? i2 + 16 | 0 : 0) | 0;
}

function __ZNKSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 30525 ? i2 + 16 | 0 : 0) | 0;
}

function __ZN16maxiPitchStretchI14hannWinFunctorE12setLoopStartEd(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0;
 i3 = ~~(+(HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + 108 >> 2] | 0) * d2);
 HEAP32[i1 + 32 >> 2] = i3;
 HEAP32[i1 + 40 >> 2] = (HEAP32[i1 + 36 >> 2] | 0) - i3;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 if (!(_pthread_key_create(23728, 309) | 0)) {
  STACKTOP = i1;
  return;
 } else _abort_message(39816, i1);
}

function __ZN16maxiPitchStretchI14hannWinFunctorE10setLoopEndEd(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 var i3 = 0;
 i3 = ~~(+(HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + 108 >> 2] | 0) * d2);
 HEAP32[i1 + 36 >> 2] = i3;
 HEAP32[i1 + 40 >> 2] = i3 - (HEAP32[i1 + 32 >> 2] | 0);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI16maxiPitchStretchI14hannWinFunctorENS_9allocatorIS3_EEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 23364;
 __ZN16maxiPitchStretchI14hannWinFunctorED2Ev(i1 + 16 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function dynCall_didddddii(i9, i1, d2, d3, d4, d5, d6, i7, i8) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 i8 = i8 | 0;
 return +FUNCTION_TABLE_didddddii[i9 & 1](i1 | 0, +d2, +d3, +d4, +d5, +d6, i7 | 0, i8 | 0);
}

function __ZNSt3__120__shared_ptr_emplaceI15maxiTimestretchI14hannWinFunctorENS_9allocatorIS3_EEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 23476;
 __ZN15maxiTimestretchI14hannWinFunctorED2Ev(i1 + 16 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI14maxiDistortionEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI13maxiDelaylineEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI13maxiDCBlockerEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI10maxiLagExpIdEEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI14maxiPitchShiftI14hannWinFunctorENS_9allocatorIS3_EEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 23420;
 __ZN14maxiPitchShiftI14hannWinFunctorED2Ev(i1 + 16 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI12maxiEnvelopeEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI11maxiFlangerEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI10maxiSampleEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI10maxiFilterEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI10maxiChorusEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZNSt3__119__shared_weak_count14__release_weakEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + 8 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 + -1;
 if (!i2) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 511](i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI9maxiSnareEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI9maxiClockEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI8maxiKickEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI8maxiIFFTEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI8maxiHatsEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10maxiSample5clearEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = HEAP32[i1 + 128 >> 2] | 0;
 i1 = i1 + 132 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (i3 | 0)) return;
 HEAP32[i1 >> 2] = i2 + (~((i2 + -2 - i3 | 0) >>> 1) << 1);
 return;
}

function __ZN10emscripten8internal15FunctionInvokerIPFddddddEddJddddEE6invokeEPS3_ddddd(i5, d6, d1, d2, d3, d4) {
 i5 = i5 | 0;
 d6 = +d6;
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 return +(+FUNCTION_TABLE_dddddd[HEAP32[i5 >> 2] & 3](d6, d1, d2, d3, d4));
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiSVFEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiOscEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiMixEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiMapEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiFFTEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiEnvEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiDynEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7convertEEEEvPT_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 if (!i2) return;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (i1) __ZNSt3__119__shared_weak_count16__release_sharedEv(i1);
 __ZdlPv(i2);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI16maxiPitchStretchI14hannWinFunctorENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 23364;
 __ZN16maxiPitchStretchI14hannWinFunctorED2Ev(i1 + 16 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 return;
}

function __ZN10maxiFilter6hipassEdd(i3, d2, d1) {
 i3 = i3 | 0;
 d2 = +d2;
 d1 = +d1;
 var i4 = 0, d5 = 0.0;
 i4 = i3 + 104 | 0;
 d5 = +HEAPF64[i4 >> 3];
 d2 = d2 - (d5 + (d2 - d5) * d1);
 HEAPF64[i3 + 16 >> 3] = d2;
 HEAPF64[i4 >> 3] = d2;
 return +d2;
}

function __ZNSt3__120__shared_ptr_emplaceI15maxiTimestretchI14hannWinFunctorENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 23476;
 __ZN15maxiTimestretchI14hannWinFunctorED2Ev(i1 + 16 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 return;
}

function dynCall_diidddii(i8, i1, i2, d3, d4, d5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 i7 = i7 | 0;
 return +FUNCTION_TABLE_diidddii[i8 & 1](i1 | 0, i2 | 0, +d3, +d4, +d5, i6 | 0, i7 | 0);
}

function __ZNSt3__120__shared_ptr_emplaceI14maxiPitchShiftI14hannWinFunctorENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 23420;
 __ZN14maxiPitchShiftI14hannWinFunctorED2Ev(i1 + 16 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 return;
}

function dynCall_viiiiddi(i8, i1, i2, i3, i4, d5, d6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 FUNCTION_TABLE_viiiiddi[i8 & 1](i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5, +d6, i7 | 0);
}

function copyTempFloat(i1) {
 i1 = i1 | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[i1 >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[i1 + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[i1 + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[i1 + 3 >> 0];
}

function __ZN10maxiFilter6lopassEdd(i3, d2, d1) {
 i3 = i3 | 0;
 d2 = +d2;
 d1 = +d1;
 var i4 = 0, d5 = 0.0;
 i4 = i3 + 104 | 0;
 d5 = +HEAPF64[i4 >> 3];
 d2 = d5 + (d2 - d5) * d1;
 HEAPF64[i3 + 16 >> 3] = d2;
 HEAPF64[i4 >> 3] = d2;
 return +d2;
}

function dynCall_diididdd(i8, i1, i2, d3, i4, d5, d6, d7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 return +FUNCTION_TABLE_diididdd[i8 & 3](i1 | 0, i2 | 0, +d3, i4 | 0, +d5, +d6, +d7);
}

function dynCall_diiddidd(i8, i1, i2, d3, d4, i5, d6, d7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 return +FUNCTION_TABLE_diiddidd[i8 & 1](i1 | 0, i2 | 0, +d3, +d4, i5 | 0, +d6, +d7);
}

function dynCall_diidddid(i8, i1, i2, d3, d4, d5, i6, d7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 d7 = +d7;
 return +FUNCTION_TABLE_diidddid[i8 & 1](i1 | 0, i2 | 0, +d3, +d4, +d5, i6 | 0, +d7);
}

function _bitshift64Ashr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 >> i1;
  return i3 >>> i1 | (i2 & (1 << i1) - 1) << 32 - i1;
 }
 tempRet0 = (i2 | 0) < 0 ? -1 : 0;
 return i2 >> i1 - 32 | 0;
}

function dynCall_diiddddd(i8, i1, i2, d3, d4, d5, d6, d7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 return +FUNCTION_TABLE_diiddddd[i8 & 3](i1 | 0, i2 | 0, +d3, +d4, +d5, +d6, +d7);
}

function dynCall_viididdd(i8, i1, i2, d3, i4, d5, d6, d7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 FUNCTION_TABLE_viididdd[i8 & 1](i1 | 0, i2 | 0, +d3, i4 | 0, +d5, +d6, +d7);
}

function __ZN10emscripten8internal12VectorAccessINSt3__16vectorIdNS2_9allocatorIdEEEEE3setERS6_jRKd(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 HEAPF64[(HEAP32[i2 >> 2] | 0) + (i1 << 3) >> 3] = +HEAPF64[i3 >> 3];
 return 1;
}

function __ZNSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function dynCall_viiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 FUNCTION_TABLE_viiiiii[i7 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0);
}

function __ZNSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN13maxiDCBlocker4playEdd(i3, d2, d1) {
 i3 = i3 | 0;
 d2 = +d2;
 d1 = +d1;
 var i4 = 0;
 i4 = i3 + 8 | 0;
 d1 = d2 - +HEAPF64[i3 >> 3] + +HEAPF64[i4 >> 3] * d1;
 HEAPF64[i4 >> 3] = d1;
 HEAPF64[i3 >> 3] = d2;
 return +d1;
}

function __ZN10emscripten8internal12VectorAccessINSt3__16vectorIiNS2_9allocatorIiEEEEE3setERS6_jRKi(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 << 2) >> 2] = HEAP32[i3 >> 2];
 return 1;
}

function __ZN10emscripten8internal12VectorAccessINSt3__16vectorIfNS2_9allocatorIfEEEEE3setERS6_jRKf(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 << 2) >> 2] = HEAP32[i3 >> 2];
 return 1;
}

function __ZNSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _bitshift64Shl(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 << i1 | (i3 & (1 << i1) - 1 << 32 - i1) >>> 32 - i1;
  return i3 << i1;
 }
 tempRet0 = i3 << i1 - 32;
 return 0;
}

function __ZN7maxiMap6explinEddddd(d5, d2, d1, d4, d3) {
 d5 = +d5;
 d2 = +d2;
 d1 = +d1;
 d4 = +d4;
 d3 = +d3;
 d5 = d1 < d5 ? d1 : d5;
 return +((d3 - d4) * (+Math_log(+((d5 < d2 ? d2 : d5) / d2)) / +Math_log(+(d1 / d2))) + d4);
}

function dynCall_diididi(i7, i1, i2, d3, i4, d5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 i6 = i6 | 0;
 return +FUNCTION_TABLE_diididi[i7 & 1](i1 | 0, i2 | 0, +d3, i4 | 0, +d5, i6 | 0);
}

function __ZN10emscripten8internal12VectorAccessINSt3__16vectorIcNS2_9allocatorIcEEEEE3setERS6_jRKc(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 HEAP8[(HEAP32[i2 >> 2] | 0) + i1 >> 0] = HEAP8[i3 >> 0] | 0;
 return 1;
}

function __ZN10emscripten8internal12operator_newINSt3__16vectorIiNS2_9allocatorIiEEEEJEEEPT_DpOT0_() {
 var i1 = 0;
 i1 = __Znwj(12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten8internal12operator_newINSt3__16vectorIfNS2_9allocatorIfEEEEJEEEPT_DpOT0_() {
 var i1 = 0;
 i1 = __Znwj(12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten8internal12operator_newINSt3__16vectorIdNS2_9allocatorIdEEEEJEEEPT_DpOT0_() {
 var i1 = 0;
 i1 = __Znwj(12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten8internal12operator_newINSt3__16vectorIcNS2_9allocatorIcEEEEJEEEPT_DpOT0_() {
 var i1 = 0;
 i1 = __Znwj(12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 return i1 | 0;
}

function _bitshift64Lshr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 >>> i1;
  return i3 >>> i1 | (i2 & (1 << i1) - 1) << 32 - i1;
 }
 tempRet0 = 0;
 return i2 >>> i1 - 32 | 0;
}

function dynCall_diiddid(i7, i1, i2, d3, d4, i5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 return +FUNCTION_TABLE_diiddid[i7 & 3](i1 | 0, i2 | 0, +d3, +d4, i5 | 0, +d6);
}

function dynCall_didddii(i7, i1, d2, d3, d4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 return +FUNCTION_TABLE_didddii[i7 & 1](i1 | 0, +d2, +d3, +d4, i5 | 0, i6 | 0);
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZNSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiSampleNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21344;
 __ZN10maxiSampleD2Ev(i1 + 16 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZNSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function runPostSets() {}
function _i64Subtract(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i2 - i4 - (i3 >>> 0 > i1 >>> 0 | 0) >>> 0;
 return (tempRet0 = i4, i1 - i3 >>> 0 | 0) | 0;
}

function __ZN7maxiMap6linexpEddddd(d5, d2, d1, d4, d3) {
 d5 = +d5;
 d2 = +d2;
 d1 = +d1;
 d4 = +d4;
 d3 = +d3;
 d5 = d1 < d5 ? d1 : d5;
 return +(+Math_pow(+(d3 / d4), +(((d5 < d2 ? d2 : d5) - d2) / (d1 - d2))) * d4);
}

function dynCall_dididdd(i7, i1, d2, i3, d4, d5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 return +FUNCTION_TABLE_dididdd[i7 & 3](i1 | 0, +d2, i3 | 0, +d4, +d5, +d6);
}

function dynCall_diddidd(i7, i1, d2, d3, i4, d5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 return +FUNCTION_TABLE_diddidd[i7 & 1](i1 | 0, +d2, +d3, i4 | 0, +d5, +d6);
}

function dynCall_didddid(i7, i1, d2, d3, d4, i5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 return +FUNCTION_TABLE_didddid[i7 & 1](i1 | 0, +d2, +d3, +d4, i5 | 0, +d6);
}

function dynCall_viididd(i7, i1, i2, d3, i4, d5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 FUNCTION_TABLE_viididd[i7 & 1](i1 | 0, i2 | 0, +d3, i4 | 0, +d5, +d6);
}

function __ZNSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiFFTNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 22996;
 __ZN7maxiFFTD2Ev(i1 + 12 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal15FunctionInvokerIPFddddEddJddEE6invokeEPS3_ddd(i3, d4, d1, d2) {
 i3 = i3 | 0;
 d4 = +d4;
 d1 = +d1;
 d2 = +d2;
 return +(+FUNCTION_TABLE_dddd[HEAP32[i3 >> 2] & 1](d4, d1, d2));
}

function dynCall_diddddd(i7, i1, d2, d3, d4, d5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 return +FUNCTION_TABLE_diddddd[i7 & 3](i1 | 0, +d2, +d3, +d4, +d5, +d6);
}

function __ZNSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function dynCall_vididdd(i7, i1, d2, i3, d4, d5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 FUNCTION_TABLE_vididdd[i7 & 1](i1 | 0, +d2, i3 | 0, +d4, +d5, +d6);
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZNSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI16maxiPitchStretchI14hannWinFunctorENS_9allocatorIS3_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 __ZN16maxiPitchStretchI14hannWinFunctorED2Ev(i1 + 16 | 0);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiSampleNS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 21344;
 __ZN10maxiSampleD2Ev(i1 + 16 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 return;
}

function __ZN7maxiMap6linlinEddddd(d5, d2, d1, d4, d3) {
 d5 = +d5;
 d2 = +d2;
 d1 = +d1;
 d4 = +d4;
 d3 = +d3;
 d5 = d1 < d5 ? d1 : d5;
 return +((d3 - d4) * (((d5 < d2 ? d2 : d5) - d2) / (d1 - d2)) + d4);
}

function dynCall_viiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 FUNCTION_TABLE_viiiii[i6 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0);
}

function __ZNSt3__120__shared_ptr_emplaceI15maxiTimestretchI14hannWinFunctorENS_9allocatorIS3_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 __ZN15maxiTimestretchI14hannWinFunctorED2Ev(i1 + 16 | 0);
 return;
}

function __ZNSt3__119__shared_weak_count16__release_sharedEv(i1) {
 i1 = i1 | 0;
 if (__ZNSt3__114__shared_count16__release_sharedEv(i1) | 0) __ZNSt3__119__shared_weak_count14__release_weakEv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI16maxiPitchStretchI14hannWinFunctorEEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZN16maxiPitchStretchI14hannWinFunctorED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10maxiLagExpIdE9addSampleEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 var i3 = 0;
 i3 = i2 + 16 | 0;
 HEAPF64[i3 >> 3] = +HEAPF64[i2 >> 3] * d1 + +HEAPF64[i2 + 8 >> 3] * +HEAPF64[i3 >> 3];
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI14maxiPitchShiftI14hannWinFunctorENS_9allocatorIS3_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 __ZN14maxiPitchShiftI14hannWinFunctorED2Ev(i1 + 16 | 0);
 return;
}

function __ZN10emscripten8internal14raw_destructorI15maxiTimestretchI14hannWinFunctorEEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZN15maxiTimestretchI14hannWinFunctorED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiDistortionEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function dynCall_diidid(i6, i1, i2, d3, i4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 return +FUNCTION_TABLE_diidid[i6 & 1](i1 | 0, i2 | 0, +d3, i4 | 0, +d5);
}

function dynCall_diiddi(i6, i1, i2, d3, d4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 return +FUNCTION_TABLE_diiddi[i6 & 1](i1 | 0, i2 | 0, +d3, +d4, i5 | 0);
}

function dynCall_dididi(i6, i1, d2, i3, d4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 return +FUNCTION_TABLE_dididi[i6 & 1](i1 | 0, +d2, i3 | 0, +d4, i5 | 0);
}

function __ZN10emscripten8internal14raw_destructorI14maxiPitchShiftI14hannWinFunctorEEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZN14maxiPitchShiftI14hannWinFunctorED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDelaylineEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDCBlockerEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiLagExpIdEEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function b44(i1, i2, d3, d4, d5, d6, d7, i8, i9) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 i8 = i8 | 0;
 i9 = i9 | 0;
 nullFunc_diidddddii(44);
 return 0.0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI12maxiEnvelopeEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function dynCall_viidii(i6, i1, i2, d3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 FUNCTION_TABLE_viidii[i6 & 1](i1 | 0, i2 | 0, +d3, i4 | 0, i5 | 0);
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI11maxiFlangerEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiFFTNS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 22996;
 __ZN7maxiFFTD2Ev(i1 + 12 | 0);
 __ZNSt3__114__shared_countD2Ev(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiSampleEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiFilterEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiChorusEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}
function stackAlloc(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + i2 | 0;
 STACKTOP = STACKTOP + 15 & -16;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abort();
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiSnareEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function dynCall_diiddd(i6, i1, i2, d3, d4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 return +FUNCTION_TABLE_diiddd[i6 & 3](i1 | 0, i2 | 0, +d3, +d4, +d5);
}

function dynCall_diddid(i6, i1, d2, d3, i4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 return +FUNCTION_TABLE_diddid[i6 & 3](i1 | 0, +d2, +d3, i4 | 0, +d5);
}
function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiClockEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiKickEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiIFFTEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiHatsEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten8internal7InvokerIvJiiiEE6invokeEPFviiiEiii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 FUNCTION_TABLE_viii[i4 & 31](i1, i2, i3);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiSVFEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiOscEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMixEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMapEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiFFTEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiEnvEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiDynEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7convertEEE14construct_nullEv() {
 var i1 = 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 return i1 | 0;
}

function dynCall_viidid(i6, i1, i2, d3, i4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 FUNCTION_TABLE_viidid[i6 & 1](i1 | 0, i2 | 0, +d3, i4 | 0, +d5);
}

function ___strdup(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i2 = (_strlen(i3) | 0) + 1 | 0;
 i1 = _malloc(i2) | 0;
 if (!i1) i1 = 0; else _memcpy(i1 | 0, i3 | 0, i2 | 0) | 0;
 return i1 | 0;
}

function __ZN14maxiDistortion12fastAtanDistEdd(i3, d1, d2) {
 i3 = i3 | 0;
 d1 = +d1;
 d2 = +d2;
 d1 = d1 * d2;
 return +(1.0 / (d2 / (d2 * d2 * .28 + 1.0)) * (d1 / (d1 * d1 * .28 + 1.0)));
}

function dynCall_iiiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return FUNCTION_TABLE_iiiii[i5 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0) | 0;
}

function dynCall_vididd(i6, i1, d2, i3, d4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 FUNCTION_TABLE_vididd[i6 & 1](i1 | 0, +d2, i3 | 0, +d4, +d5);
}

function _i64Add(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i3 = i1 + i3 >>> 0;
 return (tempRet0 = i2 + i4 + (i3 >>> 0 < i1 >>> 0 | 0) >>> 0, i3 | 0) | 0;
}

function __ZN9maxiClock15setTicksPerBeatEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 80 >> 2] = i2;
 HEAPF64[i1 + 64 >> 3] = +(i2 | 0) * (+HEAPF64[i1 + 72 >> 3] / 60.0);
 return;
}

function dynCall_diiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return +FUNCTION_TABLE_diiii[i5 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0);
}

function __ZN12maxiEnvelope7triggerEid(i3, i2, d1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 d1 = +d1;
 HEAP32[i3 + 40 >> 2] = 1;
 HEAP32[i3 + 44 >> 2] = i2;
 HEAPF64[i3 + 48 >> 3] = d1;
 return;
}

function __ZN10maxiSample7triggerEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 40 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 return;
}

function __ZN10emscripten8internal7InvokerIvJRNSt3__16vectorIfNS2_9allocatorIfEEEEEE6invokeEPFvS7_EPS6_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[i2 & 511](i1);
 return;
}

function __ZN10emscripten8internal7InvokerIvJRNSt3__16vectorIdNS2_9allocatorIdEEEEEE6invokeEPFvS7_EPS6_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[i2 & 511](i1);
 return;
}

function dynCall_dddddd(i6, d1, d2, d3, d4, d5) {
 i6 = i6 | 0;
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 return +FUNCTION_TABLE_dddddd[i6 & 3](+d1, +d2, +d3, +d4, +d5);
}

function dynCall_iiiid(i5, i1, i2, i3, d4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 return FUNCTION_TABLE_iiiid[i5 & 3](i1 | 0, i2 | 0, i3 | 0, +d4) | 0;
}

function __ZN10maxiLagExpIdE4initEdd(i3, d1, d2) {
 i3 = i3 | 0;
 d1 = +d1;
 d2 = +d2;
 HEAPF64[i3 >> 3] = d1;
 HEAPF64[i3 + 8 >> 3] = 1.0 - d1;
 HEAPF64[i3 + 16 >> 3] = d2;
 return;
}

function b14(i1, d2, d3, d4, d5, d6, i7, i8) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 i8 = i8 | 0;
 nullFunc_didddddii(14);
 return 0.0;
}

function dynCall_diidi(i5, i1, i2, d3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 return +FUNCTION_TABLE_diidi[i5 & 1](i1 | 0, i2 | 0, +d3, i4 | 0);
}

function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 return (i2 | 0) == (i3 | 0) | 0;
}

function dynCall_viiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_viiii[i5 & 63](i1 | 0, i2 | 0, i3 | 0, i4 | 0);
}

function __ZN7maxiEnv9setAttackEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 d1 = 1.0 - +Math_pow(.01, +(1.0 / (+(HEAP32[5083] | 0) * d1 * .001)));
 HEAPF64[i2 + 16 >> 3] = d1;
 return;
}

function __ZN16maxiPitchStretchI14hannWinFunctorE21getNormalisedPositionEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 >> 3] / +(HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + 108 >> 2] | 0));
}

function __ZN9maxiSnare10setReleaseEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 d1 = +Math_pow(.01, +(1.0 / (+(HEAP32[5083] | 0) * d1 * .001)));
 HEAPF64[i2 + 216 >> 3] = d1;
 return;
}

function __ZN15maxiTimestretchI14hannWinFunctorE21getNormalisedPositionEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 >> 3] / +(HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + 108 >> 2] | 0));
}

function ___syscall_ret(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (i1 >>> 0 > 4294963200) {
  i2 = ___errno_location() | 0;
  HEAP32[i2 >> 2] = 0 - i1;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZN8maxiKick10setReleaseEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 d1 = +Math_pow(.01, +(1.0 / (+(HEAP32[5083] | 0) * d1 * .001)));
 HEAPF64[i2 + 168 >> 3] = d1;
 return;
}

function __ZN8maxiHats10setReleaseEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 d1 = +Math_pow(.01, +(1.0 / (+(HEAP32[5083] | 0) * d1 * .001)));
 HEAPF64[i2 + 216 >> 3] = d1;
 return;
}

function b2(i1, i2, i3, i4, i5, d6, d7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 i8 = i8 | 0;
 nullFunc_viiiiiddi(2);
}

function ___errno_location() {
 var i1 = 0;
 if (!(HEAP32[5935] | 0)) i1 = 23796; else {
  i1 = (_pthread_self() | 0) + 60 | 0;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZN7maxiEnv10setReleaseEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 d1 = +Math_pow(.01, +(1.0 / (+(HEAP32[5083] | 0) * d1 * .001)));
 HEAPF64[i2 + 40 >> 3] = d1;
 return;
}

function __ZN7maxiDyn10setReleaseEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 d1 = +Math_pow(.01, +(1.0 / (+(HEAP32[5083] | 0) * d1 * .001)));
 HEAPF64[i2 + 48 >> 3] = d1;
 return;
}

function dynCall_diidd(i5, i1, i2, d3, d4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 return +FUNCTION_TABLE_diidd[i5 & 7](i1 | 0, i2 | 0, +d3, +d4);
}

function dynCall_didid(i5, i1, d2, i3, d4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 return +FUNCTION_TABLE_didid[i5 & 1](i1 | 0, +d2, i3 | 0, +d4);
}

function dynCall_diddi(i5, i1, d2, d3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 return +FUNCTION_TABLE_diddi[i5 & 1](i1 | 0, +d2, +d3, i4 | 0);
}

function __ZN9maxiClock8setTempoEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 + 72 >> 3] = d1;
 HEAPF64[i2 + 64 >> 3] = d1 / 60.0 * +(HEAP32[i2 + 80 >> 2] | 0);
 return;
}

function __ZN7maxiDyn9setAttackEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 d1 = +Math_pow(.01, +(1.0 / (+(HEAP32[5083] | 0) * d1 * .001)));
 HEAPF64[i2 + 40 >> 3] = d1;
 return;
}

function dynCall_viiid(i5, i1, i2, i3, d4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 FUNCTION_TABLE_viiid[i5 & 3](i1 | 0, i2 | 0, i3 | 0, +d4);
}

function dynCall_vidii(i5, i1, d2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_vidii[i5 & 1](i1 | 0, +d2, i3 | 0, i4 | 0);
}

function __ZN7maxiEnv8setDecayEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 d1 = +Math_pow(.01, +(1.0 / (+(HEAP32[5083] | 0) * d1 * .001)));
 HEAPF64[i2 + 24 >> 3] = d1;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI21maxiFFTOctaveAnalyzerNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10maxiSample4playEddd(i4, d2, d3, d1) {
 i4 = i4 | 0;
 d2 = +d2;
 d3 = +d3;
 d1 = +d1;
 return +(+__ZN10maxiSample4playEdddRd(i4, d2, d3, d1, i4 + 40 | 0));
}

function b42(i1, i2, d3, d4, d5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 i7 = i7 | 0;
 nullFunc_diidddii(42);
 return 0.0;
}

function dynCall_diddd(i5, i1, d2, d3, d4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 return +FUNCTION_TABLE_diddd[i5 & 7](i1 | 0, +d2, +d3, +d4);
}

function __ZNSt3__120__shared_ptr_emplaceI16maxiPitchStretchI14hannWinFunctorENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function dynCall_viidd(i5, i1, i2, d3, d4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 FUNCTION_TABLE_viidd[i5 & 1](i1 | 0, i2 | 0, +d3, +d4);
}

function dynCall_vidid(i5, i1, d2, i3, d4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 FUNCTION_TABLE_vidid[i5 & 1](i1 | 0, +d2, i3 | 0, +d4);
}

function b50(i1, i2, d3, d4, d5, i6, d7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 i6 = i6 | 0;
 d7 = +d7;
 nullFunc_diidddid(50);
 return 0.0;
}

function b19(i1, i2, d3, d4, i5, d6, d7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 d7 = +d7;
 nullFunc_diiddidd(19);
 return 0.0;
}

function __ZNSt3__120__shared_ptr_emplaceI15maxiTimestretchI14hannWinFunctorENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if (HEAP8[i1 >> 0] & 1) __ZdlPv(HEAP32[i1 + 8 >> 2] | 0);
 return;
}

function __ZN7maxiOsc5noiseEv(i1) {
 i1 = i1 | 0;
 var d2 = 0.0;
 d2 = +(_rand() | 0) * 4.656612873077393e-10 * 2.0 + -1.0;
 HEAPF64[i1 + 32 >> 3] = d2;
 return +d2;
}

function __ZNSt3__120__shared_ptr_emplaceI14maxiPitchShiftI14hannWinFunctorENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function b7(i1, i2, d3, i4, d5, d6, d7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 nullFunc_diididdd(7);
 return 0.0;
}

function b40(i1, i2, d3, d4, d5, d6, d7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 nullFunc_diiddddd(40);
 return 0.0;
}

function __ZNSt3__120__shared_ptr_emplaceI14maxiDistortionNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN12maxiSettings5setupEiii(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[5083] = i3;
 HEAP32[5084] = i2;
 HEAP32[5085] = i1;
 return;
}

function dynCall_iiii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return FUNCTION_TABLE_iiii[i4 & 15](i1 | 0, i2 | 0, i3 | 0) | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI13maxiDelaylineNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI13maxiDCBlockerNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiLagExpIdENS_9allocatorIS2_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEE3getERKS6_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI12maxiEnvelopeNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEE3getERKS6_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI11maxiFlangerNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiSampleNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 __ZN10maxiSampleD2Ev(i1 + 16 | 0);
 return;
}

function __ZNK21maxiFFTOctaveAnalyzer15getPeakHoldTimeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return HEAP32[(HEAP32[i2 + 36 >> 2] | 0) + (i1 << 2) >> 2] | 0;
}

function __ZN10emscripten8internal7InvokerIPNSt3__16vectorIiNS2_9allocatorIiEEEEJEE6invokeEPFS7_vE(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 63]() | 0;
}

function __ZN10emscripten8internal7InvokerIPNSt3__16vectorIfNS2_9allocatorIfEEEEJEE6invokeEPFS7_vE(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 63]() | 0;
}

function __ZN10emscripten8internal7InvokerIPNSt3__16vectorIdNS2_9allocatorIdEEEEJEE6invokeEPFS7_vE(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 63]() | 0;
}

function __ZN10emscripten8internal7InvokerIPNSt3__16vectorIcNS2_9allocatorIcEEEEJEE6invokeEPFS7_vE(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 63]() | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEE3getERKS6_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiFilterNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiChorusNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function dynCall_diii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +FUNCTION_TABLE_diii[i4 & 7](i1 | 0, i2 | 0, i3 | 0);
}

function __ZN10emscripten8internal14raw_destructorI10maxiSampleEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZN10maxiSampleD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function b9(i1, i2, i3, i4, d5, d6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 i7 = i7 | 0;
 nullFunc_viiiiddi(9);
}

function __ZNSt3__120__shared_ptr_emplaceI9maxiSnareNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI9maxiClockNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiKickNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiHatsNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNK21maxiFFTOctaveAnalyzer10getAverageEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+HEAPF32[(HEAP32[i2 + 28 >> 2] | 0) + (i1 << 2) >> 2]);
}

function __ZN7maxiMap5clampIdEET_S1_S1_S1_(d3, d2, d1) {
 d3 = +d3;
 d2 = +d2;
 d1 = +d1;
 if (!(d3 > d1)) if (d3 < d2) d1 = d2; else d1 = d3;
 return +d1;
}

function dynCall_iiid(i4, i1, i2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 return FUNCTION_TABLE_iiid[i4 & 3](i1 | 0, i2 | 0, +d3) | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiSVFNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiOscNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiMixNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiMapNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiEnvNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiDynNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7convertNS_9allocatorIS1_EEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_countD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNK21maxiFFTOctaveAnalyzer10getSpe2AvgEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return HEAP32[(HEAP32[i2 + 48 >> 2] | 0) + (i1 << 2) >> 2] | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI21maxiFFTOctaveAnalyzerNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function b37(i1, i2, d3, i4, d5, d6, d7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 d7 = +d7;
 nullFunc_viididdd(37);
}

function dynCall_diid(i4, i1, i2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 return +FUNCTION_TABLE_diid[i4 & 7](i1 | 0, i2 | 0, +d3);
}

function dynCall_didi(i4, i1, d2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 return +FUNCTION_TABLE_didi[i4 & 1](i1 | 0, +d2, i3 | 0);
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiFFTNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 __ZN7maxiFFTD2Ev(i1 + 12 | 0);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI16maxiMFCCAnalyserIdENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNK21maxiFFTOctaveAnalyzer7getPeakEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+HEAPF32[(HEAP32[i2 + 32 >> 2] | 0) + (i1 << 2) >> 2]);
}

function dynCall_viii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 FUNCTION_TABLE_viii[i4 & 31](i1 | 0, i2 | 0, i3 | 0);
}

function b4(i1, i2, d3, i4, d5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 i6 = i6 | 0;
 nullFunc_diididi(4);
 return 0.0;
}

function __ZNK7maxiFFT13getMagnitudesEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__16vectorIfNS_9allocatorIfEEEC2ERKS3_(i1, i2 + 4 | 0);
 return;
}

function __ZN14maxiDistortion8atanDistEdd(i3, d1, d2) {
 i3 = i3 | 0;
 d1 = +d1;
 d2 = +d2;
 return +(1.0 / +Math_atan(+d2) * +Math_atan(+(d1 * d2)));
}

function b57(i1, d2, d3, d4, i5, i6) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 i6 = i6 | 0;
 nullFunc_didddii(57);
 return 0.0;
}

function b23(i1, i2, d3, d4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 nullFunc_diiddid(23);
 return 0.0;
}

function __ZN10emscripten8internal14raw_destructorI7maxiFFTEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZN7maxiFFTD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function ___cxa_is_pointer_type(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 0; else i1 = (___dynamic_cast(i1, 15968, 16016, 0) | 0) != 0;
 return i1 & 1 | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function b45(i1, d2, d3, d4, i5, d6) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 d6 = +d6;
 nullFunc_didddid(45);
 return 0.0;
}

function b24(i1, d2, i3, d4, d5, d6) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 nullFunc_dididdd(24);
 return 0.0;
}

function __ZNSt3__120__shared_ptr_emplaceI14maxiDistortionNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNK7maxiFFT9getPhasesEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__16vectorIfNS_9allocatorIfEEEC2ERKS3_(i1, i2 + 16 | 0);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEE3getERKS5_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function dynCall_didd(i4, i1, d2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 return +FUNCTION_TABLE_didd[i4 & 7](i1 | 0, +d2, +d3);
}

function b26(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 nullFunc_viiiiii(26);
}

function __ZNSt3__120__shared_ptr_emplaceI13maxiDelaylineNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI13maxiDCBlockerNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiLagExpIdENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function dynCall_viid(i4, i1, i2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 FUNCTION_TABLE_viid[i4 & 31](i1 | 0, i2 | 0, +d3);
}

function b0(i1, d2, d3, i4, d5, d6) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 nullFunc_diddidd(0);
 return 0.0;
}

function __ZNSt3__120__shared_ptr_emplaceI12maxiEnvelopeNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function b20(i1, d2, d3, d4, d5, d6) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 nullFunc_diddddd(20);
 return 0.0;
}

function __ZNSt3__120__shared_ptr_emplaceI11maxiFlangerNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiSampleNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiFilterNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiChorusNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 2 | 0;
}

function __ZNKSt3__16vectorIfNS_9allocatorIfEEE4sizeEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 2 | 0;
}

function __ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 3 | 0;
}

function __ZN10emscripten8internal14raw_destructorI21maxiFFTOctaveAnalyzerEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiDistortionEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI9maxiSnareNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI9maxiClockNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN7maxiFFT12getMagnitudeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+HEAPF32[(HEAP32[i2 + 4 >> 2] | 0) + (i1 << 2) >> 2]);
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDelaylineEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDCBlockerEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiLagExpIdEEEE3getERKS5_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function dynCall_dddd(i4, d1, d2, d3) {
 i4 = i4 | 0;
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 return +FUNCTION_TABLE_dddd[i4 & 1](+d1, +d2, +d3);
}

function ___udivdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return ___udivmoddi4(i1, i2, i3, i4, 0) | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiKickNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiIFFTNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiHatsNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI12maxiEnvelopeEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiSVFNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiOscNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiMixNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiMapNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiFFTNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiEnvNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiDynNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7convertNS_9allocatorIS1_EEE21__on_zero_shared_weakEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN7maxiFFT14getMagnitudeDBEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+HEAPF32[(HEAP32[i2 >> 2] | 0) + (i1 << 2) >> 2]);
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI11maxiFlangerEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function dynCall_vidd(i4, i1, d2, d3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 FUNCTION_TABLE_vidd[i4 & 1](i1 | 0, +d2, +d3);
}

function __ZNKSt3__16vectorIcNS_9allocatorIcEEE4sizeEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0;
}

function __ZN10emscripten8internal7InvokerIP12maxiSettingsJEE6invokeEPFS3_vE(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 63]() | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiSampleEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiFilterEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiChorusEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function b60(i1, i2, d3, i4, d5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 d6 = +d6;
 nullFunc_viididd(60);
}

function __ZN7maxiFFT8getPhaseEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+HEAPF32[(HEAP32[i2 + 16 >> 2] | 0) + (i1 << 2) >> 2]);
}

function __ZN10emscripten8internal7InvokerIP11vectorToolsJEE6invokeEPFS3_vE(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 63]() | 0;
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 ___assert_fail(39512, 39535, 303, 39641);
}

function __ZN21maxiFFTOctaveAnalyzer20setPeakHoldTimeTotalEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 40 >> 2] = i2;
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiSnareEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiClockEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function dynCall_iii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return FUNCTION_TABLE_iii[i3 & 127](i1 | 0, i2 | 0) | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI21maxiFFTOctaveAnalyzerNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN10emscripten8internal14raw_destructorI14maxiDistortionEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiKickEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiIFFTEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiHatsEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function b61(i1, d2, i3, d4, i5) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 i5 = i5 | 0;
 nullFunc_dididi(61);
 return 0.0;
}

function b54(i1, i2, d3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 nullFunc_diidid(54);
 return 0.0;
}

function b39(i1, i2, d3, d4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 i5 = i5 | 0;
 nullFunc_diiddi(39);
 return 0.0;
}

function b11(i1, d2, i3, d4, d5, d6) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 d6 = +d6;
 nullFunc_vididdd(11);
}

function __ZN21maxiFFTOctaveAnalyzer18setNAveragesPerOctEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 12 >> 2] = i1;
 return;
}

function __ZN21maxiFFTOctaveAnalyzer15setSamplingRateEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAPF32[i2 >> 2] = +(i1 | 0);
 return;
}

function __ZN10emscripten8internal14raw_destructorI13maxiDelaylineEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI13maxiDCBlockerEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI10maxiLagExpIdEEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiSVFEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiOscEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMixEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMapEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiFFTEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiEnvEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiDynEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7convertEEE3getERKS4_(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN10emscripten8internal14raw_destructorI12maxiSettingsEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI12maxiEnvelopeEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI11vectorToolsEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI11maxiFlangerEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function dynCall_dii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return +FUNCTION_TABLE_dii[i3 & 31](i1 | 0, i2 | 0);
}

function b53(i1, d2, d3, i4, d5) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 nullFunc_diddid(53);
 return 0.0;
}

function b31(i1, i2, d3, d4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 nullFunc_diiddd(31);
 return 0.0;
}

function __ZN21maxiFFTOctaveAnalyzer17setLinEQInterceptEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF32[i2 + 56 >> 2] = d1;
 return;
}

function __ZN10emscripten8internal14raw_destructorI10maxiFilterEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI10maxiChorusEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN21maxiFFTOctaveAnalyzer16setPeakDecayRateEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF32[i2 + 44 >> 2] = d1;
 return;
}

function __ZN10maxiSample9getLengthEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 108 >> 2] = ~~(+(HEAP32[i1 + 96 >> 2] | 0) * .5);
 return;
}

function __ZN10emscripten8internal13getActualTypeINSt3__16vectorIiNS2_9allocatorIiEEEEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13192;
}

function __ZN10emscripten8internal13getActualTypeINSt3__16vectorIfNS2_9allocatorIfEEEEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13440;
}

function __ZN10emscripten8internal13getActualTypeINSt3__16vectorIdNS2_9allocatorIdEEEEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13280;
}

function __ZN10emscripten8internal13getActualTypeINSt3__16vectorIcNS2_9allocatorIcEEEEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13360;
}

function __ZN10emscripten8internal13getActualTypeI16maxiPitchStretchI14hannWinFunctorEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15592;
}

function __ZN21maxiFFTOctaveAnalyzer15setSpecFreqSpanEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF32[i2 + 16 >> 2] = d1;
 return;
}

function __ZN21maxiFFTOctaveAnalyzer15setFirstOctFreqEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF32[i2 + 20 >> 2] = d1;
 return;
}

function __ZN10emscripten8internal14raw_destructorI9maxiSnareEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI9maxiClockEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal13getActualTypeI15maxiTimestretchI14hannWinFunctorEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15496;
}

function __ZNSt3__120__shared_ptr_emplaceI14maxiDistortionNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN21maxiFFTOctaveAnalyzer14setAvgFreqIncrEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF32[i2 + 24 >> 2] = d1;
 return;
}

function __ZN10emscripten8internal14raw_destructorI8maxiKickEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI8maxiHatsEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal13getActualTypeI14maxiPitchShiftI14hannWinFunctorEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15544;
}

function dynCall_iid(i3, i1, d2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 return FUNCTION_TABLE_iid[i3 & 3](i1 | 0, +d2) | 0;
}

function b15(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 nullFunc_viiiii(15);
}

function __ZNSt3__120__shared_ptr_emplaceI13maxiDelaylineNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI13maxiDCBlockerNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiLagExpIdENS_9allocatorIS2_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN21maxiFFTOctaveAnalyzer13setLinEQSlopeEf(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF32[i2 + 52 >> 2] = d1;
 return;
}

function __ZN21maxiFFTOctaveAnalyzer12setNSpectrumEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 4 >> 2] = i1;
 return;
}

function __ZN21maxiFFTOctaveAnalyzer12setNAveragesEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 8 >> 2] = i1;
 return;
}

function __ZN10emscripten8internal14raw_destructorI7maxiSVFEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI7maxiOscEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI7maxiMixEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI7maxiMapEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI7maxiEnvEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI7maxiDynEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZN10emscripten8internal14raw_destructorI7convertEEvPT_(i1) {
 i1 = i1 | 0;
 if (!i1) return;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI12maxiEnvelopeNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function dynCall_did(i3, i1, d2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 return +FUNCTION_TABLE_did[i3 & 15](i1 | 0, +d2);
}

function b25(d1, d2, d3, d4, d5) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 d5 = +d5;
 nullFunc_dddddd(25);
 return 0.0;
}

function __ZNSt3__120__shared_ptr_emplaceI11maxiFlangerNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function dynCall_vii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_vii[i3 & 127](i1 | 0, i2 | 0);
}

function b30(i1, i2, d3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 i5 = i5 | 0;
 nullFunc_viidii(30);
}

function _wctomb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = 0; else i1 = _wcrtomb(i1, i2, 0) | 0;
 return i1 | 0;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiFilterNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI10maxiChorusNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __emval_take_value__wrapper(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __emval_take_value(i1 | 0, i2 | 0) | 0;
}

function __ZN9maxiClock7setTickEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 + 84 >> 0] = (i2 | 0) != 0 & 1;
 return;
}

function __ZN10maxiLagExpIdE18setAlphaReciprocalEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 + 8 >> 3] = d1;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI9maxiSnareNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI9maxiClockNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function b56(i1, i2, d3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 d5 = +d5;
 nullFunc_viidid(56);
}

function b27(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 nullFunc_diiii(27);
 return 0.0;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiKickNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI8maxiHatsNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiSVFNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiOscNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiMixNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiMapNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiEnvNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7maxiDynNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__120__shared_ptr_emplaceI7convertNS_9allocatorIS1_EEE16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 return;
}

function b18(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 nullFunc_iiiii(18);
 return 0;
}

function b51(i1, i2, d3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 i4 = i4 | 0;
 nullFunc_diidi(51);
 return 0.0;
}

function b17(i1, d2, i3, d4, d5) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 d5 = +d5;
 nullFunc_vididd(17);
}

function __ZN9maxiClock15setCurrentCountEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 48 >> 2] = i1;
 return;
}

function __ZN12maxiEnvelope11setValindexEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 44 >> 2] = i1;
 return;
}

function __GLOBAL__sub_I_maxiGrains_cpp() {
 __ZN49EmscriptenBindingInitializer_my_module_maxiGrainsC2Ev(0);
 return;
}

function dynCall_vid(i3, i1, d2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 d2 = +d2;
 FUNCTION_TABLE_vid[i3 & 63](i1 | 0, +d2);
}

function __ZN12maxiEnvelope12setAmplitudeEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 + 48 >> 3] = d1;
 return;
}

function __ZN10emscripten8internal13getActualTypeI21maxiFFTOctaveAnalyzerEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15272;
}

function b62(i1, i2, i3, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 nullFunc_iiiid(62);
 return 0;
}

function __ZNK21maxiFFTOctaveAnalyzer20getPeakHoldTimeTotalEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 40 >> 2] | 0;
}

function __ZN9maxiClock6setBpsEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAPF64[i2 + 64 >> 3] = +(i1 | 0);
 return;
}

function __ZN9maxiClock6setBpmEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAPF64[i2 + 72 >> 3] = +(i1 | 0);
 return;
}

function __ZN10maxiFilter12setResonanceEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 + 232 >> 3] = d1;
 return;
}

function __GLOBAL__sub_I_bind_cpp() {
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(0);
 return;
}

function setThrew(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!__THREW__) {
  __THREW__ = i1;
  threwValue = i2;
 }
}

function b36(i1, d2, i3, d4) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 nullFunc_didid(36);
 return 0.0;
}

function b34(i1, i2, d3, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 nullFunc_diidd(34);
 return 0.0;
}

function __ZN9maxiClock12setLastCountEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 52 >> 2] = i1;
 return;
}

function __ZN7maxiOsc4rectEdd(i3, d2, d1) {
 i3 = i3 | 0;
 d2 = +d2;
 d1 = +d1;
 return +(+HEAPF64[i3 + 32 >> 3]);
}

function __ZN16maxiPitchStretchI14hannWinFunctorE11getPositionEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 >> 3]);
}

function __ZN14maxiDistortion8fastatanEd(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 return +(d2 / (d2 * d2 * .28 + 1.0));
}

function __ZN10emscripten8internal13getActualTypeI16maxiMFCCAnalyserIdEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15416;
}

function __ZSt15get_new_handlerv() {
 var i1 = 0;
 i1 = HEAP32[5887] | 0;
 HEAP32[5887] = i1 + 0;
 return i1 | 0;
}

function __ZNK21maxiFFTOctaveAnalyzer18getNAveragesPerOctEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 12 >> 2] | 0;
}

function __ZNK21maxiFFTOctaveAnalyzer17getLinEQInterceptEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF32[i1 + 56 >> 2]);
}

function __ZN9maxiClock11setPlayHeadEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 56 >> 2] = i1;
 return;
}

function __ZN7maxiFFT13setWindowSizeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 32 >> 2] = i1;
 return;
}

function __ZN15maxiTimestretchI14hannWinFunctorE11getPositionEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 >> 3]);
}

function __GLOBAL__sub_I_maxiMFCC_cpp() {
 __ZN47EmscriptenBindingInitializer_my_module_maxiMFCCC2Ev(0);
 return;
}

function b1(i1, d2, d3, i4) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 i4 = i4 | 0;
 nullFunc_diddi(1);
 return 0.0;
}

function __ZNK21maxiFFTOctaveAnalyzer16getPeakDecayRateEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF32[i1 + 44 >> 2]);
}

function __ZN12maxiSettings14setNumChannelsEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[5084] = i1;
 return;
}

function __ZNK21maxiFFTOctaveAnalyzer15getSpecFreqSpanEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF32[i1 + 16 >> 2]);
}

function __ZNK21maxiFFTOctaveAnalyzer15getFirstOctFreqEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF32[i1 + 20 >> 2]);
}

function __ZN7convert4mtofEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+HEAPF64[12128 + (i1 << 3) >> 3]);
}

function __ZN12maxiSettings13setSampleRateEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[5083] = i1;
 return;
}

function __ZN12maxiSettings13setBufferSizeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[5085] = i1;
 return;
}

function __ZN10maxiFilter9setCutoffEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 + 224 >> 3] = d1;
 return;
}

function __GLOBAL__sub_I_maxiFFT_cpp() {
 __ZN46EmscriptenBindingInitializer_my_module_maxiFFTC2Ev(0);
 return;
}

function __ZNK21maxiFFTOctaveAnalyzer14getAvgFreqIncrEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF32[i1 + 24 >> 2]);
}

function __ZN7maxiFFT10setNumBinsEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 40 >> 2] = i1;
 return;
}

function __ZN7maxiFFT10setHopSizeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 36 >> 2] = i1;
 return;
}

function __ZN7maxiEnv10setTriggerEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 56 >> 2] = i2;
 return;
}

function __ZN7maxiDyn12setThresholdEd(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 HEAPF64[i1 + 24 >> 3] = d2;
 return;
}

function __ZN10maxiLagExpIdE6setValEd(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 HEAPF64[i1 + 16 >> 3] = d2;
 return;
}

function __GLOBAL__sub_I_maxi_emscr_new_cpp() {
 __ZN38EmscriptenBindingInitializer_my_moduleC2Ev(0);
 return;
}

function b8(i1, d2, d3, d4) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 d4 = +d4;
 nullFunc_diddd(8);
 return 0.0;
}

function __ZNK21maxiFFTOctaveAnalyzer15getSamplingRateEv(i1) {
 i1 = i1 | 0;
 return ~~+HEAPF32[i1 >> 2] | 0;
}

function __ZNK21maxiFFTOctaveAnalyzer13getLinEQSlopeEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF32[i1 + 52 >> 2]);
}

function __ZN9maxiClock8setTicksEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 80 >> 2] = i2;
 return;
}

function __ZN10emscripten8internal13getActualTypeI14maxiDistortionEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14456;
}

function __ZN7maxiEnv10setSustainEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 + 32 >> 3] = d1;
 return;
}

function __ZN10emscripten8internal13getActualTypeI13maxiDelaylineEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13736;
}

function __ZN10emscripten8internal13getActualTypeI13maxiDCBlockerEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14696;
}

function __ZN10emscripten8internal13getActualTypeI10maxiLagExpIdEEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13976;
}

function b63(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 nullFunc_viiii(63);
}

function __ZN7maxiOsc10phaseResetEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 + 8 >> 3] = d1;
 return;
}

function __ZN10maxiLagExpIdE8setAlphaEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 >> 3] = d1;
 return;
}

function __ZN10emscripten8internal13getActualTypeI12maxiSettingsEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13536;
}

function __ZN10emscripten8internal13getActualTypeI12maxiEnvelopeEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13656;
}

function dynCall_ii(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return FUNCTION_TABLE_ii[i2 & 127](i1 | 0) | 0;
}

function ___clang_call_terminate(i1) {
 i1 = i1 | 0;
 ___cxa_begin_catch(i1 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNK21maxiFFTOctaveAnalyzer12getNSpectrumEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function __ZNK21maxiFFTOctaveAnalyzer12getNAveragesEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 8 >> 2] | 0;
}

function __ZN10emscripten8internal13getActualTypeI11vectorToolsEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13496;
}

function __ZN10emscripten8internal13getActualTypeI11maxiFlangerEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14536;
}

function __ZNK10maxiLagExpIdE18getAlphaReciprocalEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 + 8 >> 3]);
}

function __ZN10emscripten8internal13getActualTypeI10maxiSampleEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14056;
}

function __ZN10emscripten8internal13getActualTypeI10maxiFilterEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13816;
}

function __ZN10emscripten8internal13getActualTypeI10maxiChorusEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14616;
}

function b55(i1, i2, i3, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 d4 = +d4;
 nullFunc_viiid(55);
}

function b16(i1, d2, i3, i4) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 i4 = i4 | 0;
 nullFunc_vidii(16);
}

function __ZN7maxiDyn8setRatioEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 + 8 >> 3] = d1;
 return;
}

function __ZN10emscripten8internal13getActualTypeI9maxiSnareEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14936;
}

function __ZN10emscripten8internal13getActualTypeI9maxiClockEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15096;
}

function __ZN10emscripten8internal12operator_newI12maxiSettingsJEEEPT_DpOT0_() {
 return __Znwj(1) | 0;
}

function dynCall_di(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +FUNCTION_TABLE_di[i2 & 31](i1 | 0);
}

function _cleanup392(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 68 >> 2] | 0)) ___unlockfile(i1);
 return;
}

function __ZN9maxiSnare8setPitchEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 >> 3] = d1;
 return;
}

function __ZN10emscripten8internal13getActualTypeI8maxiKickEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14856;
}

function __ZN10emscripten8internal13getActualTypeI8maxiIFFTEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15224;
}

function __ZN10emscripten8internal13getActualTypeI8maxiHatsEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15016;
}

function __ZN10emscripten8internal12operator_newI11vectorToolsJEEEPT_DpOT0_() {
 return __Znwj(1) | 0;
}

function b41(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 nullFunc_diii(41);
 return 0.0;
}

function b13(i1, i2, d3, d4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 d4 = +d4;
 nullFunc_viidd(13);
}

function b12(i1, d2, i3, d4) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 d4 = +d4;
 nullFunc_vidid(12);
}

function __ZN8maxiKick8setPitchEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 >> 3] = d1;
 return;
}

function __ZN8maxiHats8setPitchEd(i2, d1) {
 i2 = i2 | 0;
 d1 = +d1;
 HEAPF64[i2 >> 3] = d1;
 return;
}

function __ZN10emscripten8internal13getActualTypeI7maxiSVFEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14776;
}

function __ZN10emscripten8internal13getActualTypeI7maxiOscEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13576;
}

function __ZN10emscripten8internal13getActualTypeI7maxiMixEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 13896;
}

function __ZN10emscripten8internal13getActualTypeI7maxiMapEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14136;
}

function __ZN10emscripten8internal13getActualTypeI7maxiFFTEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 15176;
}

function __ZN10emscripten8internal13getActualTypeI7maxiEnvEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14296;
}

function __ZN10emscripten8internal13getActualTypeI7maxiDynEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14216;
}

function __ZN10emscripten8internal13getActualTypeI7convertEEPKvPT_(i1) {
 i1 = i1 | 0;
 return 14376;
}

function __ZN10maxiSample7isReadyEv(i1) {
 i1 = i1 | 0;
 return (HEAP32[i1 + 108 >> 2] | 0) > 0 | 0;
}

function establishStackSpace(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 STACKTOP = i1;
 STACK_MAX = i2;
}

function b22(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 nullFunc_iiii(22);
 return 0;
}

function __ZNK12maxiEnvelope12getAmplitudeEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 + 48 >> 3]);
}

function b49(i1, d2, i3) {
 i1 = i1 | 0;
 d2 = +d2;
 i3 = i3 | 0;
 nullFunc_didi(49);
 return 0.0;
}

function b33(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 nullFunc_diid(33);
 return 0.0;
}

function __ZNK9maxiClock7getTickEv(i1) {
 i1 = i1 | 0;
 return (HEAP8[i1 + 84 >> 0] | 0) != 0 | 0;
}

function __ZNK10maxiFilter12getResonanceEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 + 232 >> 3]);
}

function __ZNK9maxiClock15getCurrentCountEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 48 >> 2] | 0;
}

function __ZNK12maxiEnvelope11getValindexEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 44 >> 2] | 0;
}

function __ZN10__cxxabiv123__fundamental_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function b52(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 nullFunc_iiid(52);
 return 0;
}

function __ZN9maxiClock6isTickEv(i1) {
 i1 = i1 | 0;
 return (HEAP8[i1 + 84 >> 0] | 0) != 0 | 0;
}

function dynCall_vi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[i2 & 511](i1 | 0);
}

function b43(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 nullFunc_didd(43);
 return 0.0;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNK9maxiClock12getLastCountEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 52 >> 2] | 0;
}

function __ZNK10maxiFilter9getCutoffEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 + 224 >> 3]);
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNK9maxiClock11getPlayHeadEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 56 >> 2] | 0;
}

function __ZNK7maxiFFT13getWindowSizeEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 32 >> 2] | 0;
}

function __ZN10__cxxabiv119__pointer_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function b35(d1, d2, d3) {
 d1 = +d1;
 d2 = +d2;
 d3 = +d3;
 nullFunc_dddd(35);
 return 0.0;
}

function __ZNK12maxiSettings14getNumChannelsEv(i1) {
 i1 = i1 | 0;
 return HEAP32[5084] | 0;
}

function __ZNK10maxiLagExpIdE5valueEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 + 16 >> 3]);
}

function ___getTypeName(i1) {
 i1 = i1 | 0;
 return ___strdup(HEAP32[i1 + 4 >> 2] | 0) | 0;
}

function __ZNK12maxiSettings13getSampleRateEv(i1) {
 i1 = i1 | 0;
 return HEAP32[5083] | 0;
}

function __ZNK12maxiSettings13getBufferSizeEv(i1) {
 i1 = i1 | 0;
 return HEAP32[5085] | 0;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNK7maxiFFT10getNumBinsEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 36 >> 2] | 0;
}

function __ZNK7maxiFFT10getHopSizeEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 36 >> 2] | 0;
}

function __ZNK7maxiEnv10getTriggerEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 56 >> 2] | 0;
}

function __ZNK10maxiLagExpIdE8getAlphaEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 >> 3]);
}

function __ZN9maxiSnare7triggerEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 232 >> 2] = 1;
 return;
}

function __ZNK9maxiClock8getTicksEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 80 >> 2] | 0;
}

function __ZN8maxiKick7triggerEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 184 >> 2] = 1;
 return;
}

function __ZN8maxiHats7triggerEv(i1) {
 i1 = i1 | 0;
 HEAP32[i1 + 232 >> 2] = 1;
 return;
}

function b28(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 nullFunc_viii(28);
}

function __ZNK9maxiClock6getBpsEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 + 64 >> 3]);
}

function __ZNK9maxiClock6getBpmEv(i1) {
 i1 = i1 | 0;
 return +(+HEAPF64[i1 + 72 >> 3]);
}

function __ZN9maxiGrainI14hannWinFunctorED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function b59(i1, i2, d3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 d3 = +d3;
 nullFunc_viid(59);
}

function b46(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_dii(46);
 return 0.0;
}

function b21(i1, d2, d3) {
 i1 = i1 | 0;
 d2 = +d2;
 d3 = +d3;
 nullFunc_vidd(21);
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b38(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_iii(38);
 return 0;
}

function dynCall_i(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 63]() | 0;
}

function b47(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 nullFunc_did(47);
 return 0.0;
}

function _frexpl(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 return +(+_frexp(d2, i1));
}

function b32(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 nullFunc_iid(32);
 return 0;
}

function __emval_incref__wrapper(i1) {
 i1 = i1 | 0;
 __emval_incref(i1 | 0);
}

function __emval_decref__wrapper(i1) {
 i1 = i1 | 0;
 __emval_decref(i1 | 0);
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9bad_allocD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__114__shared_countD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt9bad_alloc4whatEv(i1) {
 i1 = i1 | 0;
 return 39711;
}

function dynCall_v(i1) {
 i1 = i1 | 0;
 FUNCTION_TABLE_v[i1 & 7]();
}

function b6(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 nullFunc_vii(6);
}

function b3(i1, d2) {
 i1 = i1 | 0;
 d2 = +d2;
 nullFunc_vid(3);
}

function b29(i1) {
 i1 = i1 | 0;
 nullFunc_di(29);
 return 0.0;
}

function b10(i1) {
 i1 = i1 | 0;
 nullFunc_ii(10);
 return 0;
}

function __ZN13maxiGrainBaseD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function ___cxa_end_catch__wrapper() {
 ___cxa_end_catch();
}

function __Znaj(i1) {
 i1 = i1 | 0;
 return __Znwj(i1) | 0;
}

function __ZdaPv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt9type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9exceptionD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9bad_allocD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function stackRestore(i1) {
 i1 = i1 | 0;
 STACKTOP = i1;
}

function __ZdlPv(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function setTempRet0(i1) {
 i1 = i1 | 0;
 tempRet0 = i1;
}

function ___cxa_rethrow__wrapper() {
 ___cxa_rethrow();
}

function ___unlockfile(i1) {
 i1 = i1 | 0;
 return;
}

function ___lockfile(i1) {
 i1 = i1 | 0;
 return 0;
}

function b5(i1) {
 i1 = i1 | 0;
 nullFunc_vi(5);
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b48() {
 nullFunc_i(48);
 return 0;
}

function b58() {
 nullFunc_v(58);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_diddidd = [b0,__ZN7maxiDyn4gateEddldd];
var FUNCTION_TABLE_diddi = [b1,__ZN15maxiTimestretchI14hannWinFunctorE5play2Eddi];
var FUNCTION_TABLE_viiiiiddi = [b2,__ZN10emscripten8internal13MethodInvokerIM16maxiMFCCAnalyserIdEFvjjjddjEvPS3_JjjjddjEE6invokeERKS5_S6_jjjddj];
var FUNCTION_TABLE_vid = [b3,__ZN7maxiOsc10phaseResetEd,__ZN12maxiEnvelope12setAmplitudeEd,__ZN10maxiFilter9setCutoffEd,__ZN10maxiFilter12setResonanceEd,__ZN10maxiLagExpIdE9addSampleEd,__ZN10maxiLagExpIdE8setAlphaEd,__ZN10maxiLagExpIdE18setAlphaReciprocalEd,__ZN10maxiLagExpIdE6setValEd,__ZN7maxiDyn9setAttackEd,__ZN7maxiDyn10setReleaseEd,__ZN7maxiDyn12setThresholdEd,__ZN7maxiDyn8setRatioEd,__ZN7maxiEnv9setAttackEd,__ZN7maxiEnv10setReleaseEd,__ZN7maxiEnv8setDecayEd,__ZN7maxiEnv10setSustainEd,__ZN8maxiKick8setPitchEd,__ZN8maxiKick10setReleaseEd,__ZN9maxiSnare8setPitchEd,__ZN9maxiSnare10setReleaseEd,__ZN8maxiHats8setPitchEd,__ZN8maxiHats10setReleaseEd,__ZN9maxiClock8setTempoEd,__ZN21maxiFFTOctaveAnalyzer15setSpecFreqSpanEf,__ZN21maxiFFTOctaveAnalyzer15setFirstOctFreqEf,__ZN21maxiFFTOctaveAnalyzer14setAvgFreqIncrEf,__ZN21maxiFFTOctaveAnalyzer16setPeakDecayRateEf,__ZN21maxiFFTOctaveAnalyzer13setLinEQSlopeEf
,__ZN21maxiFFTOctaveAnalyzer17setLinEQInterceptEf,__ZN15maxiTimestretchI14hannWinFunctorE11setPositionEd,__ZN16maxiPitchStretchI14hannWinFunctorE11setPositionEd,__ZN16maxiPitchStretchI14hannWinFunctorE12setLoopStartEd,__ZN16maxiPitchStretchI14hannWinFunctorE10setLoopEndEd,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_diididi = [b4,__ZN10emscripten8internal13MethodInvokerIM13maxiDelaylineFddidiEdPS2_JdidiEE6invokeERKS4_S5_didi];
var FUNCTION_TABLE_vi = [b5,__ZNSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__114__shared_countD2Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiOscNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiOscNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI7maxiOscNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI12maxiEnvelopeNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI12maxiEnvelopeNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI12maxiEnvelopeNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI13maxiDelaylineNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI13maxiDelaylineNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI13maxiDelaylineNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI10maxiFilterNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI10maxiFilterNS_9allocatorIS1_EEE16__on_zero_sharedEv
,__ZNSt3__120__shared_ptr_emplaceI10maxiFilterNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI7maxiMixNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiMixNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI7maxiMixNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI10maxiLagExpIdENS_9allocatorIS2_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI10maxiLagExpIdENS_9allocatorIS2_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI10maxiLagExpIdENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI10maxiSampleNS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_emplaceI10maxiSampleNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI10maxiSampleNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI10maxiSampleNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI7maxiMapNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiMapNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI7maxiMapNS_9allocatorIS1_EEE21__on_zero_shared_weakEv
,__ZNSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI7maxiDynNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiDynNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI7maxiDynNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI7maxiEnvNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiEnvNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI7maxiEnvNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI7convertNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI7convertNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI7convertNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI14maxiDistortionNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI14maxiDistortionNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI14maxiDistortionNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev
,__ZNSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI11maxiFlangerNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI11maxiFlangerNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI11maxiFlangerNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI10maxiChorusNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI10maxiChorusNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI10maxiChorusNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI13maxiDCBlockerNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI13maxiDCBlockerNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI13maxiDCBlockerNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI7maxiSVFNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiSVFNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI7maxiSVFNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv
,__ZNSt3__120__shared_ptr_emplaceI8maxiKickNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI8maxiKickNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI8maxiKickNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI9maxiSnareNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI9maxiSnareNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI9maxiSnareNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI8maxiHatsNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI8maxiHatsNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI8maxiHatsNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI9maxiClockNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI9maxiClockNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI9maxiClockNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI21maxiFFTOctaveAnalyzerNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI21maxiFFTOctaveAnalyzerNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI21maxiFFTOctaveAnalyzerNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv
,__ZNSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI8maxiIFFTNS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_emplaceI8maxiIFFTNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI8maxiIFFTNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI8maxiIFFTNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI7maxiFFTNS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiFFTNS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI7maxiFFTNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI7maxiFFTNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI16maxiMFCCAnalyserIdENS_9allocatorIS2_EEED2Ev,__ZNSt3__120__shared_ptr_emplaceI16maxiMFCCAnalyserIdENS_9allocatorIS2_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI16maxiMFCCAnalyserIdENS_9allocatorIS2_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI16maxiMFCCAnalyserIdENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZN13maxiGrainBaseD2Ev,__ZN9maxiGrainI14hannWinFunctorED0Ev,__ZNSt3__120__shared_ptr_emplaceI16maxiPitchStretchI14hannWinFunctorENS_9allocatorIS3_EEED2Ev,__ZNSt3__120__shared_ptr_emplaceI16maxiPitchStretchI14hannWinFunctorENS_9allocatorIS3_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI16maxiPitchStretchI14hannWinFunctorENS_9allocatorIS3_EEE16__on_zero_sharedEv
,__ZNSt3__120__shared_ptr_emplaceI16maxiPitchStretchI14hannWinFunctorENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI14maxiPitchShiftI14hannWinFunctorENS_9allocatorIS3_EEED2Ev,__ZNSt3__120__shared_ptr_emplaceI14maxiPitchShiftI14hannWinFunctorENS_9allocatorIS3_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI14maxiPitchShiftI14hannWinFunctorENS_9allocatorIS3_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI14maxiPitchShiftI14hannWinFunctorENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_emplaceI15maxiTimestretchI14hannWinFunctorENS_9allocatorIS3_EEED2Ev,__ZNSt3__120__shared_ptr_emplaceI15maxiTimestretchI14hannWinFunctorENS_9allocatorIS3_EEED0Ev,__ZNSt3__120__shared_ptr_emplaceI15maxiTimestretchI14hannWinFunctorENS_9allocatorIS3_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_emplaceI15maxiTimestretchI14hannWinFunctorENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED2Ev,__ZNSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEED0Ev,__ZNSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE16__on_zero_sharedEv,__ZNSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev
,__ZN10__cxxabiv119__pointer_type_infoD0Ev,__ZN10emscripten8internal14raw_destructorI11vectorToolsEEvPT_,__ZN11vectorTools14clearVectorDblERNSt3__16vectorIdNS0_9allocatorIdEEEE,__ZN11vectorTools16clearVectorFloatERNSt3__16vectorIfNS0_9allocatorIfEEEE,__ZN10emscripten8internal14raw_destructorI12maxiSettingsEEvPT_,__ZN10emscripten8internal14raw_destructorI7maxiOscEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiOscEEEEvPT_,__ZNSt3__111make_sharedI7maxiOscJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI12maxiEnvelopeEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI12maxiEnvelopeEEEEvPT_,__ZNSt3__111make_sharedI12maxiEnvelopeJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI13maxiDelaylineEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI13maxiDelaylineEEEEvPT_,__ZNSt3__111make_sharedI13maxiDelaylineJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI10maxiFilterEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI10maxiFilterEEEEvPT_,__ZNSt3__111make_sharedI10maxiFilterJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI7maxiMixEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiMixEEEEvPT_,__ZNSt3__111make_sharedI7maxiMixJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI10maxiLagExpIdEEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI10maxiLagExpIdEEEEEvPT_,__ZNSt3__111make_sharedI10maxiLagExpIdEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS4_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI10maxiSampleEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI10maxiSampleEEEEvPT_,__ZNSt3__111make_sharedI10maxiSampleJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10maxiSample9getLengthEv,__ZN10maxiSample7triggerEv,__ZN10maxiSample5clearEv,__ZN10emscripten8internal14raw_destructorI7maxiMapEEvPT_
,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiMapEEEEvPT_,__ZNSt3__111make_sharedI7maxiMapJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI7maxiDynEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiDynEEEEvPT_,__ZNSt3__111make_sharedI7maxiDynJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI7maxiEnvEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiEnvEEEEvPT_,__ZNSt3__111make_sharedI7maxiEnvJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI7convertEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7convertEEEEvPT_,__ZNSt3__111make_sharedI7convertJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI14maxiDistortionEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI14maxiDistortionEEEEvPT_,__ZNSt3__111make_sharedI14maxiDistortionJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI11maxiFlangerEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI11maxiFlangerEEEEvPT_,__ZNSt3__111make_sharedI11maxiFlangerJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI10maxiChorusEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI10maxiChorusEEEEvPT_,__ZNSt3__111make_sharedI10maxiChorusJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI13maxiDCBlockerEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI13maxiDCBlockerEEEEvPT_,__ZNSt3__111make_sharedI13maxiDCBlockerJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI7maxiSVFEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiSVFEEEEvPT_,__ZNSt3__111make_sharedI7maxiSVFJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI8maxiKickEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI8maxiKickEEEEvPT_,__ZNSt3__111make_sharedI8maxiKickJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN8maxiKick7triggerEv
,__ZN10emscripten8internal14raw_destructorI9maxiSnareEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI9maxiSnareEEEEvPT_,__ZNSt3__111make_sharedI9maxiSnareJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN9maxiSnare7triggerEv,__ZN10emscripten8internal14raw_destructorI8maxiHatsEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI8maxiHatsEEEEvPT_,__ZNSt3__111make_sharedI8maxiHatsJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN8maxiHats7triggerEv,__ZN10emscripten8internal14raw_destructorI9maxiClockEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI9maxiClockEEEEvPT_,__ZNSt3__111make_sharedI9maxiClockJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN9maxiClock6tickerEv,__ZN10emscripten8internal14raw_destructorINSt3__16vectorIiNS2_9allocatorIiEEEEEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__16vectorIdNS2_9allocatorIdEEEEEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__16vectorIcNS2_9allocatorIcEEEEEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__16vectorIfNS2_9allocatorIfEEEEEEvPT_,__emval_incref__wrapper,__emval_decref__wrapper,__ZN10emscripten8internal14raw_destructorI7maxiFFTEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI7maxiFFTEEEEvPT_,__ZNSt3__111make_sharedI7maxiFFTJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI8maxiIFFTEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI8maxiIFFTEEEEvPT_,__ZNSt3__111make_sharedI8maxiIFFTJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI21maxiFFTOctaveAnalyzerEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEEEvPT_,__ZNSt3__111make_sharedI21maxiFFTOctaveAnalyzerJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS3_EEE4typeEDpOT0_,__ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,__ZN10emscripten8internal14raw_destructorI16maxiMFCCAnalyserIdEEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEEEvPT_
,__ZNSt3__111make_sharedI16maxiMFCCAnalyserIdEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS4_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI15maxiTimestretchI14hannWinFunctorEEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEEEvPT_,__ZNSt3__111make_sharedI15maxiTimestretchI14hannWinFunctorEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS5_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI14maxiPitchShiftI14hannWinFunctorEEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEEEvPT_,__ZNSt3__111make_sharedI14maxiPitchShiftI14hannWinFunctorEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS5_EEE4typeEDpOT0_,__ZN10emscripten8internal14raw_destructorI16maxiPitchStretchI14hannWinFunctorEEEvPT_,__ZN10emscripten8internal14raw_destructorINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEEEvPT_,__ZNSt3__111make_sharedI16maxiPitchStretchI14hannWinFunctorEJEEENS_9enable_ifIXntsr8is_arrayIT_EE5valueENS_10shared_ptrIS5_EEE4typeEDpOT0_,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,_cleanup392,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_vii = [b6,__ZN10emscripten8internal7InvokerIvJRNSt3__16vectorIdNS2_9allocatorIdEEEEEE6invokeEPFvS7_EPS6_,__ZN10emscripten8internal7InvokerIvJRNSt3__16vectorIfNS2_9allocatorIfEEEEEE6invokeEPFvS7_EPS6_,__ZN12maxiSettings13setSampleRateEi,__ZN12maxiSettings14setNumChannelsEi,__ZN12maxiSettings13setBufferSizeEi,__ZN12maxiEnvelope11setValindexEi,__ZN10emscripten8internal13MethodInvokerIM10maxiSampleFvvEvPS2_JEE6invokeERKS4_S5_,__ZN10maxiSample9setSampleERNSt3__16vectorIdNS0_9allocatorIdEEEE,__ZN7maxiEnv10setTriggerEi,__ZN10emscripten8internal13MethodInvokerIM8maxiKickFvvEvPS2_JEE6invokeERKS4_S5_,__ZN10emscripten8internal13MethodInvokerIM9maxiSnareFvvEvPS2_JEE6invokeERKS4_S5_,__ZN10emscripten8internal13MethodInvokerIM8maxiHatsFvvEvPS2_JEE6invokeERKS4_S5_,__ZN10emscripten8internal13MethodInvokerIM9maxiClockFvvEvPS2_JEE6invokeERKS4_S5_,__ZN9maxiClock15setTicksPerBeatEi,__ZN9maxiClock15setCurrentCountEi,__ZN9maxiClock12setLastCountEi,__ZN9maxiClock11setPlayHeadEi,__ZN9maxiClock6setBpsEi,__ZN9maxiClock6setBpmEi,__ZN9maxiClock7setTickEi,__ZN9maxiClock8setTicksEi,__ZNSt3__16vectorIiNS_9allocatorIiEEE9push_backERKi,__ZNSt3__16vectorIdNS_9allocatorIdEEE9push_backERKd,__ZNSt3__16vectorIcNS_9allocatorIcEEE9push_backERKc,__ZNSt3__16vectorIfNS_9allocatorIfEEE9push_backERKf,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiOscEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI12maxiEnvelopeEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDelaylineEEE11val_deleterclEPKv
,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiFilterEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMixEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiLagExpIdEEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiSampleEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMapEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiDynEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiEnvEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7convertEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiDistortionEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI11maxiFlangerEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiChorusEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDCBlockerEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiSVFEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiKickEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiSnareEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiHatsEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiClockEEE11val_deleterclEPKv,__ZN7maxiFFT13setWindowSizeEi,__ZN7maxiFFT10setHopSizeEi,__ZN7maxiFFT10setNumBinsEi,__ZNK7maxiFFT13getMagnitudesEv,__ZN7maxiFFT13setMagnitudesENSt3__16vectorIfNS0_9allocatorIfEEEE,__ZNK7maxiFFT9getPhasesEv,__ZN7maxiFFT9setPhasesENSt3__16vectorIfNS0_9allocatorIfEEEE,__ZN21maxiFFTOctaveAnalyzer9calculateERNSt3__16vectorIfNS0_9allocatorIfEEEE,__ZN21maxiFFTOctaveAnalyzer15setSamplingRateEi,__ZN21maxiFFTOctaveAnalyzer12setNSpectrumEi,__ZN21maxiFFTOctaveAnalyzer12setNAveragesEi,__ZN21maxiFFTOctaveAnalyzer18setNAveragesPerOctEi,__ZN21maxiFFTOctaveAnalyzer20setPeakHoldTimeTotalEi
,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiIFFTEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiFFTEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEE11val_deleterclEPKv,__ZN15maxiTimestretchI14hannWinFunctorE9setSampleEP10maxiSample,__ZN14maxiPitchShiftI14hannWinFunctorE9setSampleEP10maxiSample,__ZN16maxiPitchStretchI14hannWinFunctorE9setSampleEP10maxiSample,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEE11val_deleterclEPKv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEE11val_deleterclEPKv,_abort_message,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_diididdd = [b7,__ZN10emscripten8internal13MethodInvokerIM11maxiFlangerFddjdddEdPS2_JdjdddEE6invokeERKS4_S5_djddd,__ZN10emscripten8internal13MethodInvokerIM10maxiChorusFddjdddEdPS2_JdjdddEE6invokeERKS4_S5_djddd,b7];
var FUNCTION_TABLE_diddd = [b8,__ZN7maxiOsc6phasorEddd,__ZN10maxiFilter5loresEddd,__ZN10maxiFilter5hiresEddd,__ZN10maxiFilter8bandpassEddd,__ZN10maxiSample4playEddd,__ZN10maxiSample5play4Eddd,__ZN10emscripten8internal15FunctionInvokerIPFddddEddJddEE6invokeEPS3_ddd];
var FUNCTION_TABLE_viiiiddi = [b9,__ZN16maxiMFCCAnalyserIdE5setupEjjjddj];
var FUNCTION_TABLE_ii = [b10,__ZNKSt9bad_alloc4whatEv,___stdio_close,__ZN10emscripten8internal13getActualTypeI11vectorToolsEEPKvPT_,__ZN10emscripten8internal7InvokerIP11vectorToolsJEE6invokeEPFS3_vE,__ZN10emscripten8internal13getActualTypeI12maxiSettingsEEPKvPT_,__ZN10emscripten8internal7InvokerIP12maxiSettingsJEE6invokeEPFS3_vE,__ZNK12maxiSettings13getSampleRateEv,__ZNK12maxiSettings14getNumChannelsEv,__ZNK12maxiSettings13getBufferSizeEv,__ZN10emscripten8internal13getActualTypeI7maxiOscEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiOscEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiOscEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI12maxiEnvelopeEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI12maxiEnvelopeEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI12maxiEnvelopeEEJEE6invokeEPFS5_vE,__ZNK12maxiEnvelope11getValindexEv,__ZN10emscripten8internal13getActualTypeI13maxiDelaylineEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDelaylineEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI13maxiDelaylineEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI10maxiFilterEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiFilterEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI10maxiFilterEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI7maxiMixEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMixEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiMixEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI10maxiLagExpIdEEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiLagExpIdEEEE3getERKS5_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI10maxiLagExpIdEEEJEE6invokeEPFS6_vE
,__ZN10emscripten8internal13getActualTypeI10maxiSampleEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiSampleEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI10maxiSampleEEJEE6invokeEPFS5_vE,__ZN10maxiSample7isReadyEv,__ZN10emscripten8internal13getActualTypeI7maxiMapEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMapEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiMapEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI7maxiDynEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiDynEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiDynEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI7maxiEnvEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiEnvEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiEnvEEJEE6invokeEPFS5_vE,__ZNK7maxiEnv10getTriggerEv,__ZN10emscripten8internal13getActualTypeI7convertEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7convertEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7convertEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI14maxiDistortionEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiDistortionEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI14maxiDistortionEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI11maxiFlangerEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI11maxiFlangerEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI11maxiFlangerEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI10maxiChorusEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiChorusEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI10maxiChorusEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI13maxiDCBlockerEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDCBlockerEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI13maxiDCBlockerEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI7maxiSVFEEPKvPT_
,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiSVFEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiSVFEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI8maxiKickEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiKickEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI8maxiKickEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI9maxiSnareEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiSnareEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI9maxiSnareEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI8maxiHatsEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiHatsEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI8maxiHatsEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI9maxiClockEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiClockEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI9maxiClockEEJEE6invokeEPFS5_vE,__ZN9maxiClock6isTickEv,__ZNK9maxiClock15getCurrentCountEv,__ZNK9maxiClock12getLastCountEv,__ZNK9maxiClock11getPlayHeadEv,__ZNK9maxiClock7getTickEv,__ZNK9maxiClock8getTicksEv,__ZN10emscripten8internal13getActualTypeINSt3__16vectorIiNS2_9allocatorIiEEEEEEPKvPT_,__ZN10emscripten8internal7InvokerIPNSt3__16vectorIiNS2_9allocatorIiEEEEJEE6invokeEPFS7_vE,__ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv,__ZN10emscripten8internal13getActualTypeINSt3__16vectorIdNS2_9allocatorIdEEEEEEPKvPT_,__ZN10emscripten8internal7InvokerIPNSt3__16vectorIdNS2_9allocatorIdEEEEJEE6invokeEPFS7_vE,__ZNKSt3__16vectorIdNS_9allocatorIdEEE4sizeEv,__ZN10emscripten8internal13getActualTypeINSt3__16vectorIcNS2_9allocatorIcEEEEEEPKvPT_,__ZN10emscripten8internal7InvokerIPNSt3__16vectorIcNS2_9allocatorIcEEEEJEE6invokeEPFS7_vE,__ZNKSt3__16vectorIcNS_9allocatorIcEEE4sizeEv,__ZN10emscripten8internal13getActualTypeINSt3__16vectorIfNS2_9allocatorIfEEEEEEPKvPT_
,__ZN10emscripten8internal7InvokerIPNSt3__16vectorIfNS2_9allocatorIfEEEEJEE6invokeEPFS7_vE,__ZNKSt3__16vectorIfNS_9allocatorIfEEE4sizeEv,__Znwj,__ZN10emscripten8internal13getActualTypeI7maxiFFTEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiFFTEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI7maxiFFTEEJEE6invokeEPFS5_vE,__ZNK7maxiFFT13getWindowSizeEv,__ZNK7maxiFFT10getHopSizeEv,__ZNK7maxiFFT10getNumBinsEv,__ZN10emscripten8internal13getActualTypeI8maxiIFFTEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiIFFTEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI8maxiIFFTEEJEE6invokeEPFS5_vE,__ZN10emscripten8internal13getActualTypeI21maxiFFTOctaveAnalyzerEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEE3getERKS4_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEJEE6invokeEPFS5_vE,__ZNK21maxiFFTOctaveAnalyzer15getSamplingRateEv,__ZNK21maxiFFTOctaveAnalyzer12getNSpectrumEv,__ZNK21maxiFFTOctaveAnalyzer12getNAveragesEv,__ZNK21maxiFFTOctaveAnalyzer18getNAveragesPerOctEv,__ZNK21maxiFFTOctaveAnalyzer20getPeakHoldTimeTotalEv,__ZN10emscripten8internal13getActualTypeI16maxiMFCCAnalyserIdEEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEE3getERKS5_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEJEE6invokeEPFS6_vE,__ZN10emscripten8internal13getActualTypeI15maxiTimestretchI14hannWinFunctorEEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEE3getERKS6_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEJEE6invokeEPFS7_vE,__ZN10emscripten8internal13getActualTypeI14maxiPitchShiftI14hannWinFunctorEEEPKvPT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEE3getERKS6_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEJEE6invokeEPFS7_vE,__ZN10emscripten8internal13getActualTypeI16maxiPitchStretchI14hannWinFunctorEEEPKvPT_
,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEE3getERKS6_,__ZN10emscripten8internal7InvokerINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEJEE6invokeEPFS7_vE,b10,b10,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_vididdd = [b11,__ZN7maxiMix9ambisonicEdRNSt3__16vectorIdNS0_9allocatorIdEEEEddd];
var FUNCTION_TABLE_vidid = [b12,__ZN7maxiMix6stereoEdRNSt3__16vectorIdNS0_9allocatorIdEEEEd];
var FUNCTION_TABLE_viidd = [b13,__ZN10emscripten8internal13MethodInvokerIM10maxiLagExpIdEFvddEvPS3_JddEE6invokeERKS5_S6_dd];
var FUNCTION_TABLE_didddddii = [b14,__ZN7maxiEnv4adsrEdddddli];
var FUNCTION_TABLE_viiiii = [b15,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZN10emscripten8internal13MethodInvokerIM7maxiFFTFviiiEvPS2_JiiiEE6invokeERKS4_S5_iii,__ZN10emscripten8internal13MethodInvokerIM8maxiIFFTFviiiEvPS2_JiiiEE6invokeERKS4_S5_iii,b15,b15];
var FUNCTION_TABLE_vidii = [b16,__ZN21maxiFFTOctaveAnalyzer5setupEfii];
var FUNCTION_TABLE_vididd = [b17,__ZN7maxiMix4quadEdRNSt3__16vectorIdNS0_9allocatorIdEEEEdd];
var FUNCTION_TABLE_iiiii = [b18,__ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__16vectorIiNS2_9allocatorIiEEEEjRKiEbS7_JjS9_EE6invokeEPSB_PS6_ji,__ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__16vectorIcNS2_9allocatorIcEEEEjRKcEbS7_JjS9_EE6invokeEPSB_PS6_jc,b18];
var FUNCTION_TABLE_diiddidd = [b19,__ZN10emscripten8internal13MethodInvokerIM7maxiDynFdddlddEdPS2_JddlddEE6invokeERKS4_S5_ddldd];
var FUNCTION_TABLE_diddddd = [b20,__ZN10emscripten8internal15FunctionInvokerIPFddddddEddJddddEE6invokeEPS3_ddddd,__ZN7maxiDyn10compressorEddddd,__ZN7maxiSVF4playEddddd];
var FUNCTION_TABLE_vidd = [b21,__ZN10maxiLagExpIdE4initEdd];
var FUNCTION_TABLE_iiii = [b22,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv,___stdio_write,___stdio_seek,___stdout_write,__ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__16vectorIiNS3_9allocatorIiEEEEjES2_S9_JjEE6invokeEPSB_PS7_j,__ZN10emscripten8internal12VectorAccessINSt3__16vectorIiNS2_9allocatorIiEEEEE3setERS6_jRKi,__ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__16vectorIdNS3_9allocatorIdEEEEjES2_S9_JjEE6invokeEPSB_PS7_j,__ZN10emscripten8internal12VectorAccessINSt3__16vectorIdNS2_9allocatorIdEEEEE3setERS6_jRKd,__ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__16vectorIcNS3_9allocatorIcEEEEjES2_S9_JjEE6invokeEPSB_PS7_j,__ZN10emscripten8internal12VectorAccessINSt3__16vectorIcNS2_9allocatorIcEEEEE3setERS6_jRKc,__ZN10emscripten8internal15FunctionInvokerIPFNS_3valERKNSt3__16vectorIfNS3_9allocatorIfEEEEjES2_S9_JjEE6invokeEPSB_PS7_j,__ZN10emscripten8internal12VectorAccessINSt3__16vectorIfNS2_9allocatorIfEEEEE3setERS6_jRKf,__ZN10emscripten8internal13MethodInvokerIM21maxiFFTOctaveAnalyzerKFiiEiPKS2_JiEE6invokeERKS4_S6_i];
var FUNCTION_TABLE_diiddid = [b23,__ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFdddidEdPS4_JddidEE6invokeERKS6_S7_ddid,__ZN10emscripten8internal13MethodInvokerIM14maxiPitchShiftI14hannWinFunctorEFdddidEdPS4_JddidEE6invokeERKS6_S7_ddid,b23];
var FUNCTION_TABLE_dididdd = [b24,__ZN11maxiFlanger6flangeEdjddd,__ZN10maxiChorus6chorusEdjddd,b24];
var FUNCTION_TABLE_dddddd = [b25,__ZN7maxiMap6linlinEddddd,__ZN7maxiMap6linexpEddddd,__ZN7maxiMap6explinEddddd];
var FUNCTION_TABLE_viiiiii = [b26,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib];
var FUNCTION_TABLE_diiii = [b27,__ZN10emscripten8internal13MethodInvokerIM12maxiEnvelopeFdiRNSt3__16vectorIdNS3_9allocatorIdEEEEEdPS2_JiS8_EE6invokeERKSA_SB_iPS7_,__ZN10emscripten8internal13MethodInvokerIM8maxiIFFTFfRNSt3__16vectorIfNS3_9allocatorIfEEEES8_EfPS2_JS8_S8_EE6invokeERKSA_SB_PS7_SF_,b27];
var FUNCTION_TABLE_viii = [b28,__ZN12maxiSettings5setupEiii,__ZN10emscripten8internal12SetterPolicyIM12maxiSettingsFviEE3setIS2_EEvRKS4_RT_i,__ZN10emscripten8internal12SetterPolicyIM12maxiEnvelopeFviEE3setIS2_EEvRKS4_RT_i,__ZN10emscripten8internal13MethodInvokerIM10maxiSampleFvRNSt3__16vectorIdNS3_9allocatorIdEEEEEvPS2_JS8_EE6invokeERKSA_SB_PS7_,__ZN10maxiSample9setSampleERNSt3__16vectorIdNS0_9allocatorIdEEEEi,__ZN10emscripten8internal12SetterPolicyIM7maxiEnvFviEE3setIS2_EEvRKS4_RT_i,__ZN10emscripten8internal13MethodInvokerIM9maxiClockFviEvPS2_JiEE6invokeERKS4_S5_i,__ZN10emscripten8internal12SetterPolicyIM9maxiClockFviEE3setIS2_EEvRKS4_RT_i,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIiNS2_9allocatorIiEEEEFvRKiEvPS6_JS8_EE6invokeERKSA_SB_i,__ZNSt3__16vectorIiNS_9allocatorIiEEE6resizeEjRKi,__ZNSt3__16vectorIdNS_9allocatorIdEEE6resizeEjRKd,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIcNS2_9allocatorIcEEEEFvRKcEvPS6_JS8_EE6invokeERKSA_SB_c,__ZNSt3__16vectorIcNS_9allocatorIcEEE6resizeEjRKc,__ZNSt3__16vectorIfNS_9allocatorIfEEE6resizeEjRKf,__ZN10emscripten8internal12SetterPolicyIM7maxiFFTFviEE3setIS2_EEvRKS4_RT_i,__ZN10emscripten8internal12SetterPolicyIM7maxiFFTFvNSt3__16vectorIfNS3_9allocatorIfEEEEEE3setIS2_EEvRKS9_RT_PS7_,__ZN10emscripten8internal13MethodInvokerIM21maxiFFTOctaveAnalyzerFvRNSt3__16vectorIfNS3_9allocatorIfEEEEEvPS2_JS8_EE6invokeERKSA_SB_PS7_,__ZN10emscripten8internal12SetterPolicyIM21maxiFFTOctaveAnalyzerFviEE3setIS2_EEvRKS4_RT_i,__ZN16maxiMFCCAnalyserIdE4mfccERNSt3__16vectorIfNS1_9allocatorIfEEEERNS2_IdNS3_IdEEEE,__ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFvP10maxiSampleEvPS4_JS6_EE6invokeERKS8_S9_S6_,__ZN10emscripten8internal13MethodInvokerIM14maxiPitchShiftI14hannWinFunctorEFvP10maxiSampleEvPS4_JS6_EE6invokeERKS8_S9_S6_,__ZN10emscripten8internal13MethodInvokerIM16maxiPitchStretchI14hannWinFunctorEFvP10maxiSampleEvPS4_JS6_EE6invokeERKS8_S9_S6_,b28,b28,b28,b28,b28,b28
,b28,b28,b28];
var FUNCTION_TABLE_di = [b29,__ZN9maxiGrainI14hannWinFunctorE4playEv,__ZN7maxiOsc5noiseEv,__ZNK12maxiEnvelope12getAmplitudeEv,__ZNK10maxiFilter9getCutoffEv,__ZNK10maxiFilter12getResonanceEv,__ZNK10maxiLagExpIdE5valueEv,__ZNK10maxiLagExpIdE8getAlphaEv,__ZNK10maxiLagExpIdE18getAlphaReciprocalEv,__ZN10maxiSample8playOnceEv,__ZN10maxiSample4playEv,__ZN8maxiKick4playEv,__ZN9maxiSnare4playEv,__ZN8maxiHats4playEv,__ZNK9maxiClock6getBpsEv,__ZNK9maxiClock6getBpmEv,__ZN7maxiFFT8magsToDBEv,__ZN7maxiFFT16spectralFlatnessEv,__ZN7maxiFFT16spectralCentroidEv,__ZNK21maxiFFTOctaveAnalyzer15getSpecFreqSpanEv,__ZNK21maxiFFTOctaveAnalyzer15getFirstOctFreqEv,__ZNK21maxiFFTOctaveAnalyzer14getAvgFreqIncrEv,__ZNK21maxiFFTOctaveAnalyzer16getPeakDecayRateEv,__ZNK21maxiFFTOctaveAnalyzer13getLinEQSlopeEv,__ZNK21maxiFFTOctaveAnalyzer17getLinEQInterceptEv,__ZN15maxiTimestretchI14hannWinFunctorE21getNormalisedPositionEv,__ZN15maxiTimestretchI14hannWinFunctorE11getPositionEv,__ZN16maxiPitchStretchI14hannWinFunctorE21getNormalisedPositionEv,__ZN16maxiPitchStretchI14hannWinFunctorE11getPositionEv
,b29,b29,b29];
var FUNCTION_TABLE_viidii = [b30,__ZN10emscripten8internal13MethodInvokerIM21maxiFFTOctaveAnalyzerFvfiiEvPS2_JfiiEE6invokeERKS4_S5_fii];
var FUNCTION_TABLE_diiddd = [b31,__ZN10emscripten8internal13MethodInvokerIM7maxiOscFddddEdPS2_JdddEE6invokeERKS4_S5_ddd,__ZN10emscripten8internal13MethodInvokerIM10maxiFilterFddddEdPS2_JdddEE6invokeERKS4_S5_ddd,__ZN10emscripten8internal13MethodInvokerIM10maxiSampleFddddEdPS2_JdddEE6invokeERKS4_S5_ddd];
var FUNCTION_TABLE_iid = [b32,__ZN7maxiSVF9setCutoffEd,__ZN7maxiSVF12setResonanceEd,__ZN7maxiFFT7processEf];
var FUNCTION_TABLE_diid = [b33,__ZN10emscripten8internal13MethodInvokerIM7maxiOscFddEdPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIM10maxiSampleFddEdPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIM7maxiDynFddEdPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIM14maxiDistortionFddEdPS2_JdEE6invokeERKS4_S5_d,b33,b33,b33];
var FUNCTION_TABLE_diidd = [b34,__ZN10emscripten8internal13MethodInvokerIM7maxiOscFdddEdPS2_JddEE6invokeERKS4_S5_dd,__ZN10emscripten8internal13MethodInvokerIM10maxiFilterFdddEdPS2_JddEE6invokeERKS4_S5_dd,__ZN10emscripten8internal13MethodInvokerIM14maxiDistortionFdddEdPS2_JddEE6invokeERKS4_S5_dd,__ZN10emscripten8internal13MethodInvokerIM13maxiDCBlockerFdddEdPS2_JddEE6invokeERKS4_S5_dd,b34,b34,b34];
var FUNCTION_TABLE_dddd = [b35,__ZN7maxiMap5clampIdEET_S1_S1_S1_];
var FUNCTION_TABLE_didid = [b36,__ZN13maxiDelayline2dlEdid];
var FUNCTION_TABLE_viididdd = [b37,__ZN10emscripten8internal13MethodInvokerIM7maxiMixFvdRNSt3__16vectorIdNS3_9allocatorIdEEEEdddEvPS2_JdS8_dddEE6invokeERKSA_SB_dPS7_ddd];
var FUNCTION_TABLE_iii = [b38,__ZNKSt3__120__shared_ptr_pointerIP7maxiOscN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP12maxiEnvelopeN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP13maxiDelaylineN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP10maxiFilterN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP7maxiMixN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP10maxiLagExpIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP10maxiSampleN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP7maxiMapN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP7maxiDynN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP7maxiEnvN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP7convertN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP14maxiDistortionN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP11maxiFlangerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP10maxiChorusN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP13maxiDCBlockerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP7maxiSVFN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP8maxiKickN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP9maxiSnareN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP8maxiHatsN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP9maxiClockN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP21maxiFFTOctaveAnalyzerN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP8maxiIFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP7maxiFFTN10emscripten15smart_ptr_traitINS_10shared_ptrIS1_EEE11val_deleterENS_9allocatorIS1_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP16maxiMFCCAnalyserIdEN10emscripten15smart_ptr_traitINS_10shared_ptrIS2_EEE11val_deleterENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP16maxiPitchStretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP14maxiPitchShiftI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info,__ZNKSt3__120__shared_ptr_pointerIP15maxiTimestretchI14hannWinFunctorEN10emscripten15smart_ptr_traitINS_10shared_ptrIS3_EEE11val_deleterENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info
,__ZN10emscripten8internal12GetterPolicyIM12maxiSettingsKFivEE3getIS2_EEiRKS4_RKT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiOscEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI12maxiEnvelopeEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten8internal12GetterPolicyIM12maxiEnvelopeKFivEE3getIS2_EEiRKS4_RKT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDelaylineEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiFilterEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMixEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiLagExpIdEEEE5shareEPS4_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiSampleEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten8internal13MethodInvokerIM10maxiSampleFbvEbPS2_JEE6invokeERKS4_S5_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMapEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiDynEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiEnvEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten8internal12GetterPolicyIM7maxiEnvKFivEE3getIS2_EEiRKS4_RKT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7convertEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiDistortionEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI11maxiFlangerEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiChorusEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDCBlockerEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiSVFEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiKickEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiSnareEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiHatsEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiClockEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten8internal13MethodInvokerIM9maxiClockFbvEbPS2_JEE6invokeERKS4_S5_,__ZN10emscripten8internal12GetterPolicyIM9maxiClockKFivEE3getIS2_EEiRKS4_RKT_,__ZN10emscripten8internal12GetterPolicyIM9maxiClockKFbvEE3getIS2_EEbRKS4_RKT_,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIiNS2_9allocatorIiEEEEKFjvEjPKS6_JEE6invokeERKS8_SA_,__ZN10emscripten8internal12VectorAccessINSt3__16vectorIiNS2_9allocatorIiEEEEE3getERKS6_j,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIdNS2_9allocatorIdEEEEKFjvEjPKS6_JEE6invokeERKS8_SA_
,__ZN10emscripten8internal12VectorAccessINSt3__16vectorIdNS2_9allocatorIdEEEEE3getERKS6_j,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIcNS2_9allocatorIcEEEEKFjvEjPKS6_JEE6invokeERKS8_SA_,__ZN10emscripten8internal12VectorAccessINSt3__16vectorIcNS2_9allocatorIcEEEEE3getERKS6_j,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIfNS2_9allocatorIfEEEEKFjvEjPKS6_JEE6invokeERKS8_SA_,__ZN10emscripten8internal12VectorAccessINSt3__16vectorIfNS2_9allocatorIfEEEEE3getERKS6_j,__emval_take_value__wrapper,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiFFTEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten8internal12GetterPolicyIM7maxiFFTKFivEE3getIS2_EEiRKS4_RKT_,__ZN10emscripten8internal12GetterPolicyIM7maxiFFTKFNSt3__16vectorIfNS3_9allocatorIfEEEEvEE3getIS2_EEPS7_RKS9_RKT_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiIFFTEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEE5shareEPS3_PNS_8internal7_EM_VALE,__ZN10emscripten8internal12GetterPolicyIM21maxiFFTOctaveAnalyzerKFivEE3getIS2_EEiRKS4_RKT_,__ZNK21maxiFFTOctaveAnalyzer15getPeakHoldTimeEi,__ZNK21maxiFFTOctaveAnalyzer10getSpe2AvgEi,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEE5shareEPS4_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEE5shareEPS5_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEE5shareEPS5_PNS_8internal7_EM_VALE,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEE5shareEPS5_PNS_8internal7_EM_VALE,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38
,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38,b38
,b38,b38,b38,b38,b38,b38,b38,b38,b38];
var FUNCTION_TABLE_diiddi = [b39,__ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFdddiEdPS4_JddiEE6invokeERKS6_S7_ddi];
var FUNCTION_TABLE_diiddddd = [b40,__ZN10emscripten8internal13MethodInvokerIM7maxiDynFddddddEdPS2_JdddddEE6invokeERKS4_S5_ddddd,__ZN10emscripten8internal13MethodInvokerIM7maxiSVFFddddddEdPS2_JdddddEE6invokeERKS4_S5_ddddd,b40];
var FUNCTION_TABLE_diii = [b41,__ZN12maxiEnvelope4lineEiRNSt3__16vectorIdNS0_9allocatorIdEEEE,__ZN10emscripten8internal13MethodInvokerIM7convertFdiEdPS2_JiEE6invokeERKS4_S5_i,__ZN10emscripten8internal13MethodInvokerIM7maxiFFTFfiEfPS2_JiEE6invokeERKS4_S5_i,__ZN8maxiIFFT7processERNSt3__16vectorIfNS0_9allocatorIfEEEES5_,__ZN10emscripten8internal13MethodInvokerIM21maxiFFTOctaveAnalyzerKFfiEfPKS2_JiEE6invokeERKS4_S6_i,b41,b41];
var FUNCTION_TABLE_diidddii = [b42,__ZN10emscripten8internal13MethodInvokerIM7maxiEnvFddddliEdPS2_JdddliEE6invokeERKS4_S5_dddli];
var FUNCTION_TABLE_didd = [b43,__ZN7maxiOsc5pulseEdd,__ZN7maxiOsc4rectEdd,__ZN10maxiFilter6lopassEdd,__ZN10maxiFilter6hipassEdd,__ZN14maxiDistortion8atanDistEdd,__ZN14maxiDistortion12fastAtanDistEdd,__ZN13maxiDCBlocker4playEdd];
var FUNCTION_TABLE_diidddddii = [b44,__ZN10emscripten8internal13MethodInvokerIM7maxiEnvFddddddliEdPS2_JdddddliEE6invokeERKS4_S5_dddddli];
var FUNCTION_TABLE_didddid = [b45,__ZN16maxiPitchStretchI14hannWinFunctorE4playEdddid];
var FUNCTION_TABLE_dii = [b46,__ZN10emscripten8internal13MethodInvokerIM7maxiOscFdvEdPS2_JEE6invokeERKS4_S5_,__ZN10emscripten8internal12GetterPolicyIM12maxiEnvelopeKFdvEE3getIS2_EEdRKS4_RKT_,__ZN10emscripten8internal12GetterPolicyIM10maxiFilterKFdvEE3getIS2_EEdRKS4_RKT_,__ZN10emscripten8internal13MethodInvokerIM10maxiLagExpIdEKFdvEdPKS3_JEE6invokeERKS5_S7_,__ZN10emscripten8internal12GetterPolicyIM10maxiLagExpIdEKFdvEE3getIS3_EEdRKS5_RKT_,__ZN10emscripten8internal13MethodInvokerIM10maxiSampleFdvEdPS2_JEE6invokeERKS4_S5_,__ZN7convert4mtofEi,__ZN10emscripten8internal13MethodInvokerIM8maxiKickFdvEdPS2_JEE6invokeERKS4_S5_,__ZN10emscripten8internal13MethodInvokerIM9maxiSnareFdvEdPS2_JEE6invokeERKS4_S5_,__ZN10emscripten8internal13MethodInvokerIM8maxiHatsFdvEdPS2_JEE6invokeERKS4_S5_,__ZN10emscripten8internal12GetterPolicyIM9maxiClockKFdvEE3getIS2_EEdRKS4_RKT_,__ZN10emscripten8internal13MethodInvokerIM7maxiFFTFfvEfPS2_JEE6invokeERKS4_S5_,__ZN7maxiFFT12getMagnitudeEi,__ZN7maxiFFT14getMagnitudeDBEi,__ZN7maxiFFT8getPhaseEi,__ZN10emscripten8internal12GetterPolicyIM21maxiFFTOctaveAnalyzerKFfvEE3getIS2_EEfRKS4_RKT_,__ZNK21maxiFFTOctaveAnalyzer10getAverageEi,__ZNK21maxiFFTOctaveAnalyzer7getPeakEi,__ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFdvEdPS4_JEE6invokeERKS6_S7_,__ZN10emscripten8internal13MethodInvokerIM16maxiPitchStretchI14hannWinFunctorEFdvEdPS4_JEE6invokeERKS6_S7_,b46,b46,b46,b46,b46,b46,b46,b46
,b46,b46,b46];
var FUNCTION_TABLE_did = [b47,__ZN7maxiOsc8sinewaveEd,__ZN7maxiOsc7coswaveEd,__ZN7maxiOsc6phasorEd,__ZN7maxiOsc3sawEd,__ZN7maxiOsc8triangleEd,__ZN7maxiOsc6squareEd,__ZN7maxiOsc7sinebufEd,__ZN7maxiOsc8sinebuf4Ed,__ZN7maxiOsc4sawnEd,__ZN10maxiSample8playOnceEd,__ZN10maxiSample4playEd,__ZN7maxiDyn8compressEd,__ZN14maxiDistortion8fastatanEd,b47,b47];
var FUNCTION_TABLE_i = [b48,__ZN10emscripten8internal12operator_newI11vectorToolsJEEEPT_DpOT0_,__ZN10emscripten8internal12operator_newI12maxiSettingsJEEEPT_DpOT0_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiOscEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI12maxiEnvelopeEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDelaylineEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiFilterEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMixEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiLagExpIdEEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiSampleEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiMapEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiDynEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiEnvEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7convertEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiDistortionEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI11maxiFlangerEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI10maxiChorusEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI13maxiDCBlockerEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiSVFEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiKickEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiSnareEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiHatsEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI9maxiClockEEE14construct_nullEv,__ZN10emscripten8internal12operator_newINSt3__16vectorIiNS2_9allocatorIiEEEEJEEEPT_DpOT0_,__ZN10emscripten8internal12operator_newINSt3__16vectorIdNS2_9allocatorIdEEEEJEEEPT_DpOT0_,__ZN10emscripten8internal12operator_newINSt3__16vectorIcNS2_9allocatorIcEEEEJEEEPT_DpOT0_,__ZN10emscripten8internal12operator_newINSt3__16vectorIfNS2_9allocatorIfEEEEJEEEPT_DpOT0_,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI7maxiFFTEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI8maxiIFFTEEE14construct_nullEv
,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiMFCCAnalyserIdEEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEEE14construct_nullEv,__ZN10emscripten15smart_ptr_traitINSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEEE14construct_nullEv,___cxa_get_globals_fast,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48,b48
,b48,b48,b48,b48,b48];
var FUNCTION_TABLE_didi = [b49,__ZN7maxiEnv4adsrEdi];
var FUNCTION_TABLE_diidddid = [b50,__ZN10emscripten8internal13MethodInvokerIM16maxiPitchStretchI14hannWinFunctorEFddddidEdPS4_JdddidEE6invokeERKS6_S7_dddid];
var FUNCTION_TABLE_diidi = [b51,__ZN10emscripten8internal13MethodInvokerIM7maxiEnvFddiEdPS2_JdiEE6invokeERKS4_S5_di];
var FUNCTION_TABLE_iiid = [b52,__ZN10emscripten8internal13MethodInvokerIM7maxiSVFFRS2_dES3_PS2_JdEE6invokeERKS5_S6_d,__ZN10emscripten8internal13MethodInvokerIM7maxiFFTFbfEbPS2_JfEE6invokeERKS4_S5_f,b52];
var FUNCTION_TABLE_diddid = [b53,__ZN15maxiTimestretchI14hannWinFunctorE4playEddid,__ZN14maxiPitchShiftI14hannWinFunctorE4playEddid,b53];
var FUNCTION_TABLE_diidid = [b54,__ZN10emscripten8internal13MethodInvokerIM13maxiDelaylineFddidEdPS2_JdidEE6invokeERKS4_S5_did];
var FUNCTION_TABLE_viiid = [b55,__ZN10emscripten8internal13MethodInvokerIM12maxiEnvelopeFvidEvPS2_JidEE6invokeERKS4_S5_id,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIdNS2_9allocatorIdEEEEFvjRKdEvPS6_JjS8_EE6invokeERKSA_SB_jd,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIfNS2_9allocatorIfEEEEFvjRKfEvPS6_JjS8_EE6invokeERKSA_SB_jf];
var FUNCTION_TABLE_viidid = [b56,__ZN10emscripten8internal13MethodInvokerIM7maxiMixFvdRNSt3__16vectorIdNS3_9allocatorIdEEEEdEvPS2_JdS8_dEE6invokeERKSA_SB_dPS7_d];
var FUNCTION_TABLE_didddii = [b57,__ZN7maxiEnv2arEdddli];
var FUNCTION_TABLE_v = [b58,__ZL25default_terminate_handlerv,___cxa_rethrow__wrapper,___cxa_end_catch__wrapper,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b58,b58,b58];
var FUNCTION_TABLE_viid = [b59,__ZN10emscripten8internal13MethodInvokerIM7maxiOscFvdEvPS2_JdEE6invokeERKS4_S5_d,__ZN12maxiEnvelope7triggerEid,__ZN10emscripten8internal12SetterPolicyIM12maxiEnvelopeFvdEE3setIS2_EEvRKS4_RT_d,__ZN10emscripten8internal12SetterPolicyIM10maxiFilterFvdEE3setIS2_EEvRKS4_RT_d,__ZN10emscripten8internal13MethodInvokerIM10maxiLagExpIdEFvdEvPS3_JdEE6invokeERKS5_S6_d,__ZN10emscripten8internal12SetterPolicyIM10maxiLagExpIdEFvdEE3setIS3_EEvRKS5_RT_d,__ZN10emscripten8internal13MethodInvokerIM7maxiDynFvdEvPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIM7maxiEnvFvdEvPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIM8maxiKickFvdEvPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIM9maxiSnareFvdEvPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIM8maxiHatsFvdEvPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIM9maxiClockFvdEvPS2_JdEE6invokeERKS4_S5_d,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIdNS2_9allocatorIdEEEEFvRKdEvPS6_JS8_EE6invokeERKSA_SB_d,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIfNS2_9allocatorIfEEEEFvRKfEvPS6_JS8_EE6invokeERKSA_SB_f,__ZN10emscripten8internal12SetterPolicyIM21maxiFFTOctaveAnalyzerFvfEE3setIS2_EEvRKS4_RT_f,__ZN10emscripten8internal13MethodInvokerIM15maxiTimestretchI14hannWinFunctorEFvdEvPS4_JdEE6invokeERKS6_S7_d,__ZN10emscripten8internal13MethodInvokerIM16maxiPitchStretchI14hannWinFunctorEFvdEvPS4_JdEE6invokeERKS6_S7_d,b59,b59,b59,b59,b59,b59,b59,b59,b59,b59,b59
,b59,b59,b59];
var FUNCTION_TABLE_viididd = [b60,__ZN10emscripten8internal13MethodInvokerIM7maxiMixFvdRNSt3__16vectorIdNS3_9allocatorIdEEEEddEvPS2_JdS8_ddEE6invokeERKSA_SB_dPS7_dd];
var FUNCTION_TABLE_dididi = [b61,__ZN13maxiDelayline2dlEdidi];
var FUNCTION_TABLE_iiiid = [b62,__ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__16vectorIdNS2_9allocatorIdEEEEjRKdEbS7_JjS9_EE6invokeEPSB_PS6_jd,__ZN10emscripten8internal15FunctionInvokerIPFbRNSt3__16vectorIfNS2_9allocatorIfEEEEjRKfEbS7_JjS9_EE6invokeEPSB_PS6_jf,b62];
var FUNCTION_TABLE_viiii = [b63,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZN10emscripten8internal7InvokerIvJiiiEE6invokeEPFviiiEiii,__ZN10emscripten8internal13MethodInvokerIM10maxiSampleFvRNSt3__16vectorIdNS3_9allocatorIdEEEEiEvPS2_JS8_iEE6invokeERKSA_SB_PS7_i,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIiNS2_9allocatorIiEEEEFvjRKiEvPS6_JjS8_EE6invokeERKSA_SB_ji,__ZN10emscripten8internal13MethodInvokerIMNSt3__16vectorIcNS2_9allocatorIcEEEEFvjRKcEvPS6_JjS8_EE6invokeERKSA_SB_jc,__ZNSt3__110shared_ptrI7maxiOscEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI12maxiEnvelopeEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI13maxiDelaylineEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI10maxiFilterEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI7maxiMixEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI10maxiLagExpIdEEC2IS2_N10emscripten15smart_ptr_traitIS3_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISA_PS2_EE5valueENS3_5__natEE4typeE,__ZNSt3__110shared_ptrI10maxiSampleEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI7maxiMapEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI7maxiDynEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI7maxiEnvEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI7convertEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI14maxiDistortionEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI11maxiFlangerEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI10maxiChorusEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI13maxiDCBlockerEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI7maxiSVFEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI8maxiKickEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI9maxiSnareEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI8maxiHatsEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI9maxiClockEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZN7maxiFFT5setupEiii
,__ZN8maxiIFFT5setupEiii,__ZNSt3__110shared_ptrI7maxiFFTEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI8maxiIFFTEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZNSt3__110shared_ptrI21maxiFFTOctaveAnalyzerEC2IS1_N10emscripten15smart_ptr_traitIS2_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS9_PS1_EE5valueENS2_5__natEE4typeE,__ZN10emscripten8internal13MethodInvokerIM16maxiMFCCAnalyserIdEFvRNSt3__16vectorIfNS4_9allocatorIfEEEERNS5_IdNS6_IdEEEEEvPS3_JS9_SC_EE6invokeERKSE_SF_PS8_PSB_,__ZNSt3__110shared_ptrI16maxiMFCCAnalyserIdEEC2IS2_N10emscripten15smart_ptr_traitIS3_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISA_PS2_EE5valueENS3_5__natEE4typeE,__ZNSt3__110shared_ptrI15maxiTimestretchI14hannWinFunctorEEC2IS3_N10emscripten15smart_ptr_traitIS4_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISB_PS3_EE5valueENS4_5__natEE4typeE,__ZNSt3__110shared_ptrI14maxiPitchShiftI14hannWinFunctorEEC2IS3_N10emscripten15smart_ptr_traitIS4_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISB_PS3_EE5valueENS4_5__natEE4typeE,__ZNSt3__110shared_ptrI16maxiPitchStretchI14hannWinFunctorEEC2IS3_N10emscripten15smart_ptr_traitIS4_E11val_deleterEEEPT_T0_NS_9enable_ifIXsr14is_convertibleISB_PS3_EE5valueENS4_5__natEE4typeE,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63,b63
,b63,b63,b63,b63,b63];

  return { ___cxa_can_catch: ___cxa_can_catch, _fflush: _fflush, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, ___getTypeName: ___getTypeName, _bitshift64Lshr: _bitshift64Lshr, _free: _free, ___errno_location: ___errno_location, _bitshift64Shl: _bitshift64Shl, __GLOBAL__sub_I_maxi_emscr_new_cpp: __GLOBAL__sub_I_maxi_emscr_new_cpp, __GLOBAL__sub_I_maxiFFT_cpp: __GLOBAL__sub_I_maxiFFT_cpp, __GLOBAL__sub_I_maxiMFCC_cpp: __GLOBAL__sub_I_maxiMFCC_cpp, __GLOBAL__sub_I_maxiGrains_cpp: __GLOBAL__sub_I_maxiGrains_cpp, __GLOBAL__sub_I_bind_cpp: __GLOBAL__sub_I_bind_cpp, runPostSets: runPostSets, _emscripten_replace_memory: _emscripten_replace_memory, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_diddidd: dynCall_diddidd, dynCall_diddi: dynCall_diddi, dynCall_viiiiiddi: dynCall_viiiiiddi, dynCall_vid: dynCall_vid, dynCall_diididi: dynCall_diididi, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_diididdd: dynCall_diididdd, dynCall_diddd: dynCall_diddd, dynCall_viiiiddi: dynCall_viiiiddi, dynCall_ii: dynCall_ii, dynCall_vididdd: dynCall_vididdd, dynCall_vidid: dynCall_vidid, dynCall_viidd: dynCall_viidd, dynCall_didddddii: dynCall_didddddii, dynCall_viiiii: dynCall_viiiii, dynCall_vidii: dynCall_vidii, dynCall_vididd: dynCall_vididd, dynCall_iiiii: dynCall_iiiii, dynCall_diiddidd: dynCall_diiddidd, dynCall_diddddd: dynCall_diddddd, dynCall_vidd: dynCall_vidd, dynCall_iiii: dynCall_iiii, dynCall_diiddid: dynCall_diiddid, dynCall_dididdd: dynCall_dididdd, dynCall_dddddd: dynCall_dddddd, dynCall_viiiiii: dynCall_viiiiii, dynCall_diiii: dynCall_diiii, dynCall_viii: dynCall_viii, dynCall_di: dynCall_di, dynCall_viidii: dynCall_viidii, dynCall_diiddd: dynCall_diiddd, dynCall_iid: dynCall_iid, dynCall_diid: dynCall_diid, dynCall_diidd: dynCall_diidd, dynCall_dddd: dynCall_dddd, dynCall_didid: dynCall_didid, dynCall_viididdd: dynCall_viididdd, dynCall_iii: dynCall_iii, dynCall_diiddi: dynCall_diiddi, dynCall_diiddddd: dynCall_diiddddd, dynCall_diii: dynCall_diii, dynCall_diidddii: dynCall_diidddii, dynCall_didd: dynCall_didd, dynCall_diidddddii: dynCall_diidddddii, dynCall_didddid: dynCall_didddid, dynCall_dii: dynCall_dii, dynCall_did: dynCall_did, dynCall_i: dynCall_i, dynCall_didi: dynCall_didi, dynCall_diidddid: dynCall_diidddid, dynCall_diidi: dynCall_diidi, dynCall_iiid: dynCall_iiid, dynCall_diddid: dynCall_diddid, dynCall_diidid: dynCall_diidid, dynCall_viiid: dynCall_viiid, dynCall_viidid: dynCall_viidid, dynCall_didddii: dynCall_didddii, dynCall_v: dynCall_v, dynCall_viid: dynCall_viid, dynCall_viididd: dynCall_viididd, dynCall_dididi: dynCall_dididi, dynCall_iiiid: dynCall_iiiid, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real___GLOBAL__sub_I_maxi_emscr_new_cpp = asm["__GLOBAL__sub_I_maxi_emscr_new_cpp"];
asm["__GLOBAL__sub_I_maxi_emscr_new_cpp"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__sub_I_maxi_emscr_new_cpp.apply(null, arguments);
});
var real____cxa_can_catch = asm["___cxa_can_catch"];
asm["___cxa_can_catch"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____cxa_can_catch.apply(null, arguments);
});
var real___GLOBAL__sub_I_bind_cpp = asm["__GLOBAL__sub_I_bind_cpp"];
asm["__GLOBAL__sub_I_bind_cpp"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__sub_I_bind_cpp.apply(null, arguments);
});
var real__fflush = asm["_fflush"];
asm["_fflush"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__fflush.apply(null, arguments);
});
var real___GLOBAL__sub_I_maxiMFCC_cpp = asm["__GLOBAL__sub_I_maxiMFCC_cpp"];
asm["__GLOBAL__sub_I_maxiMFCC_cpp"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__sub_I_maxiMFCC_cpp.apply(null, arguments);
});
var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"];
asm["___cxa_is_pointer_type"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____cxa_is_pointer_type.apply(null, arguments);
});
var real__i64Add = asm["_i64Add"];
asm["_i64Add"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__i64Add.apply(null, arguments);
});
var real__memmove = asm["_memmove"];
asm["_memmove"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__memmove.apply(null, arguments);
});
var real___GLOBAL__sub_I_maxiFFT_cpp = asm["__GLOBAL__sub_I_maxiFFT_cpp"];
asm["__GLOBAL__sub_I_maxiFFT_cpp"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__sub_I_maxiFFT_cpp.apply(null, arguments);
});
var real__i64Subtract = asm["_i64Subtract"];
asm["_i64Subtract"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__i64Subtract.apply(null, arguments);
});
var real__malloc = asm["_malloc"];
asm["_malloc"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__malloc.apply(null, arguments);
});
var real____getTypeName = asm["___getTypeName"];
asm["___getTypeName"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____getTypeName.apply(null, arguments);
});
var real__bitshift64Lshr = asm["_bitshift64Lshr"];
asm["_bitshift64Lshr"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__bitshift64Lshr.apply(null, arguments);
});
var real__free = asm["_free"];
asm["_free"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__free.apply(null, arguments);
});
var real___GLOBAL__sub_I_maxiGrains_cpp = asm["__GLOBAL__sub_I_maxiGrains_cpp"];
asm["__GLOBAL__sub_I_maxiGrains_cpp"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real___GLOBAL__sub_I_maxiGrains_cpp.apply(null, arguments);
});
var real____errno_location = asm["___errno_location"];
asm["___errno_location"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real____errno_location.apply(null, arguments);
});
var real__bitshift64Shl = asm["_bitshift64Shl"];
asm["_bitshift64Shl"] = (function() {
 assert(runtimeInitialized, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)");
 assert(!runtimeExited, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
 return real__bitshift64Shl.apply(null, arguments);
});
var __GLOBAL__sub_I_maxi_emscr_new_cpp = Module["__GLOBAL__sub_I_maxi_emscr_new_cpp"] = asm["__GLOBAL__sub_I_maxi_emscr_new_cpp"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var __GLOBAL__sub_I_maxiMFCC_cpp = Module["__GLOBAL__sub_I_maxiMFCC_cpp"] = asm["__GLOBAL__sub_I_maxiMFCC_cpp"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__sub_I_maxiFFT_cpp = Module["__GLOBAL__sub_I_maxiFFT_cpp"] = asm["__GLOBAL__sub_I_maxiFFT_cpp"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _free = Module["_free"] = asm["_free"];
var __GLOBAL__sub_I_maxiGrains_cpp = Module["__GLOBAL__sub_I_maxiGrains_cpp"] = asm["__GLOBAL__sub_I_maxiGrains_cpp"];
var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_diddidd = Module["dynCall_diddidd"] = asm["dynCall_diddidd"];
var dynCall_diddi = Module["dynCall_diddi"] = asm["dynCall_diddi"];
var dynCall_viiiiiddi = Module["dynCall_viiiiiddi"] = asm["dynCall_viiiiiddi"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_diididi = Module["dynCall_diididi"] = asm["dynCall_diididi"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_diididdd = Module["dynCall_diididdd"] = asm["dynCall_diididdd"];
var dynCall_diddd = Module["dynCall_diddd"] = asm["dynCall_diddd"];
var dynCall_viiiiddi = Module["dynCall_viiiiddi"] = asm["dynCall_viiiiddi"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_vididdd = Module["dynCall_vididdd"] = asm["dynCall_vididdd"];
var dynCall_vidid = Module["dynCall_vidid"] = asm["dynCall_vidid"];
var dynCall_viidd = Module["dynCall_viidd"] = asm["dynCall_viidd"];
var dynCall_didddddii = Module["dynCall_didddddii"] = asm["dynCall_didddddii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vidii = Module["dynCall_vidii"] = asm["dynCall_vidii"];
var dynCall_vididd = Module["dynCall_vididd"] = asm["dynCall_vididd"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_diiddidd = Module["dynCall_diiddidd"] = asm["dynCall_diiddidd"];
var dynCall_diddddd = Module["dynCall_diddddd"] = asm["dynCall_diddddd"];
var dynCall_vidd = Module["dynCall_vidd"] = asm["dynCall_vidd"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_diiddid = Module["dynCall_diiddid"] = asm["dynCall_diiddid"];
var dynCall_dididdd = Module["dynCall_dididdd"] = asm["dynCall_dididdd"];
var dynCall_dddddd = Module["dynCall_dddddd"] = asm["dynCall_dddddd"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_diiii = Module["dynCall_diiii"] = asm["dynCall_diiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_viidii = Module["dynCall_viidii"] = asm["dynCall_viidii"];
var dynCall_diiddd = Module["dynCall_diiddd"] = asm["dynCall_diiddd"];
var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
var dynCall_diid = Module["dynCall_diid"] = asm["dynCall_diid"];
var dynCall_diidd = Module["dynCall_diidd"] = asm["dynCall_diidd"];
var dynCall_dddd = Module["dynCall_dddd"] = asm["dynCall_dddd"];
var dynCall_didid = Module["dynCall_didid"] = asm["dynCall_didid"];
var dynCall_viididdd = Module["dynCall_viididdd"] = asm["dynCall_viididdd"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_diiddi = Module["dynCall_diiddi"] = asm["dynCall_diiddi"];
var dynCall_diiddddd = Module["dynCall_diiddddd"] = asm["dynCall_diiddddd"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_diidddii = Module["dynCall_diidddii"] = asm["dynCall_diidddii"];
var dynCall_didd = Module["dynCall_didd"] = asm["dynCall_didd"];
var dynCall_diidddddii = Module["dynCall_diidddddii"] = asm["dynCall_diidddddii"];
var dynCall_didddid = Module["dynCall_didddid"] = asm["dynCall_didddid"];
var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
var dynCall_did = Module["dynCall_did"] = asm["dynCall_did"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_didi = Module["dynCall_didi"] = asm["dynCall_didi"];
var dynCall_diidddid = Module["dynCall_diidddid"] = asm["dynCall_diidddid"];
var dynCall_diidi = Module["dynCall_diidi"] = asm["dynCall_diidi"];
var dynCall_iiid = Module["dynCall_iiid"] = asm["dynCall_iiid"];
var dynCall_diddid = Module["dynCall_diddid"] = asm["dynCall_diddid"];
var dynCall_diidid = Module["dynCall_diidid"] = asm["dynCall_diidid"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viidid = Module["dynCall_viidid"] = asm["dynCall_viidid"];
var dynCall_didddii = Module["dynCall_didddii"] = asm["dynCall_didddii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_viididd = Module["dynCall_viididd"] = asm["dynCall_viididd"];
var dynCall_dididi = Module["dynCall_dididi"] = asm["dynCall_dididi"];
var dynCall_iiiid = Module["dynCall_iiiid"] = asm["dynCall_iiiid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = asm["stackAlloc"];
Runtime.stackSave = asm["stackSave"];
Runtime.stackRestore = asm["stackRestore"];
Runtime.establishStackSpace = asm["establishStackSpace"];
Runtime.setTempRet0 = asm["setTempRet0"];
Runtime.getTempRet0 = asm["getTempRet0"];
function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}
ExitStatus.prototype = new Error;
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
 if (!Module["calledRun"]) run();
 if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
};
Module["callMain"] = Module.callMain = function callMain(args) {
 assert(runDependencies == 0, "cannot call main when async dependencies remain! (listen on __ATMAIN__)");
 assert(__ATPRERUN__.length == 0, "cannot call main when preRun functions remain to be called");
 args = args || [];
 ensureInitRuntime();
 var argc = args.length + 1;
 function pad() {
  for (var i = 0; i < 4 - 1; i++) {
   argv.push(0);
  }
 }
 var argv = [ allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL) ];
 pad();
 for (var i = 0; i < argc - 1; i = i + 1) {
  argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));
  pad();
 }
 argv.push(0);
 argv = allocate(argv, "i32", ALLOC_NORMAL);
 try {
  var ret = Module["_main"](argc, argv, 0);
  exit(ret, true);
 } catch (e) {
  if (e instanceof ExitStatus) {
   return;
  } else if (e == "SimulateInfiniteLoop") {
   Module["noExitRuntime"] = true;
   return;
  } else {
   if (e && typeof e === "object" && e.stack) Module.printErr("exception thrown: " + [ e, e.stack ]);
   throw e;
  }
 } finally {
  calledMain = true;
 }
};
function run(args) {
 args = args || Module["arguments"];
 if (preloadStartTime === null) preloadStartTime = Date.now();
 if (runDependencies > 0) {
  Module.printErr("run() called, but dependencies remain, so not running");
  return;
 }
 preRun();
 if (runDependencies > 0) return;
 if (Module["calledRun"]) return;
 function doRun() {
  if (Module["calledRun"]) return;
  Module["calledRun"] = true;
  if (ABORT) return;
  ensureInitRuntime();
  preMain();
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
   Module.printErr("pre-main prep time: " + (Date.now() - preloadStartTime) + " ms");
  }
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  if (Module["_main"] && shouldRunNow) Module["callMain"](args);
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout((function() {
   setTimeout((function() {
    Module["setStatus"]("");
   }), 1);
   doRun();
  }), 1);
 } else {
  doRun();
 }
}
Module["run"] = Module.run = run;
function exit(status, implicit) {
 if (implicit && Module["noExitRuntime"]) {
  Module.printErr("exit(" + status + ") implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)");
  return;
 }
 if (Module["noExitRuntime"]) {
  Module.printErr("exit(" + status + ") called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)");
 } else {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 if (ENVIRONMENT_IS_NODE) {
  process["stdout"]["once"]("drain", (function() {
   process["exit"](status);
  }));
  console.log(" ");
  setTimeout((function() {
   process["exit"](status);
  }), 500);
 } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
  quit(status);
 }
 throw new ExitStatus(status);
}
Module["exit"] = Module.exit = exit;
var abortDecorators = [];
function abort(what) {
 if (what !== undefined) {
  Module.print(what);
  Module.printErr(what);
  what = JSON.stringify(what);
 } else {
  what = "";
 }
 ABORT = true;
 EXITSTATUS = 1;
 var extra = "";
 var output = "abort(" + what + ") at " + stackTrace() + extra;
 if (abortDecorators) {
  abortDecorators.forEach((function(decorator) {
   output = decorator(output, what);
  }));
 }
 throw output;
}
Module["abort"] = Module.abort = abort;
if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}
var shouldRunNow = true;
if (Module["noInitialRun"]) {
 shouldRunNow = false;
}
run();
var maximJs = {};
maximJs.maxiSettings = Module.maxiSettings;
maximJs.maxiOsc = Module.maxiOsc;
maximJs.maxiEnvelope = Module.maxiEnvelope;
maximJs.maxiDelayline = Module.maxiDelayline;
maximJs.maxiFilter = Module.maxiFilter;
maximJs.maxiMix = Module.maxiMix;
maximJs.maxiLagExp = Module.maxiLagExp;
maximJs.maxiSample = Module.maxiSample;
maximJs.maxiMap = Module.maxiMap;
maximJs.maxiDyn = Module.maxiDyn;
maximJs.maxiEnv = Module.maxiEnv;
maximJs.convert = Module.convert;
maximJs.maxiDistortion = Module.maxiDistortion;
maximJs.maxiFlanger = Module.maxiFlanger;
maximJs.maxiChorus = Module.maxiChorus;
maximJs.maxiDCBlocker = Module.maxiDCBlocker;
maximJs.maxiSVF = Module.maxiSVF;
maximJs.maxiEnvelopeFollower = Module.maxiEnvelopeFollower;
maximJs.maxiKick = Module.maxiKick;
maximJs.maxiSnare = Module.maxiSnare;
maximJs.maxiHats = Module.maxiHats;
maximJs.maxiClock = Module.maxiClock;
maximJs.maxiFFT = Module.maxiFFT;
maximJs.maxiIFFT = Module.maxiIFFT;
maximJs.maxiMFCC = Module.maxiMFCC;
maximJs.maxiFFTOctaveAnalyzer = Module.maxiFFTOctaveAnalyzer;
maximJs.maxiTimestretch = Module.maxiTimestretch;
maximJs.maxiPitchShift = Module.maxiPitchShift;
maximJs.maxiPitchStretch = Module.maxiPitchStretch;
maximJs.maxiArray = function maxiArray() {
 this.length = 0;
 var vec = new Module.VectorDouble;
};
maximJs.maxiArray.prototype.asVector = (function(arrayIn) {
 return this.vec;
});
maximJs.maxiArray.prototype.asJsArray = (function(arrayIn) {
 var arrayOut = [];
 for (var i = 0; i < this.length; i++) {
  array.push(this.vec.get(i));
 }
 return arrayOut;
});
maximJs.maxiArray.prototype.set = (function(arrayIn) {
 this.clear();
 this.vec = GetArrayAsVectorDbl(arrayIn);
 this.length = this.vec.size();
 this.SetSqBrackets(true);
});
maximJs.maxiArray.prototype.push = (function(num) {
 this.vec.push_back(num);
 this[this.length] = num;
 this.length++;
});
maximJs.maxiArray.prototype.SetSqBrackets = (function(useSq) {
 for (var i = 0; i < this.length; i++) {
  if (useSq) {
   this[i] = this.vec.get(i);
  } else {
   delete this[i];
  }
 }
});
maximJs.maxiArray.prototype.clear = (function(useSq) {
 for (var i = 0; i < this.length; i++) {
  delete this[i];
 }
 Module.vectorTools.clearVectorDbl(this.vec);
 this.length = 0;
});
maximJs.maxiTools = (function() {});
maximJs.maxiTools.getArrayAsVectorDbl = (function(arrayIn) {
 var vecOut = new Module.VectorDouble;
 for (var i = 0; i < arrayIn.length; i++) {
  vecOut.push_back(arrayIn[i]);
 }
 return vecOut;
});
maximJs.maxiTools.getBase64 = (function(str) {
 if (str.indexOf(";base64,") != -1) {
  var dataStart = str.indexOf(";base64,") + 8;
  return str.slice(dataStart).match(/^([A-Za-z0-9+\/]{4})*([A-Za-z0-9+\/]{4}|[A-Za-z0-9+\/]{3}=|[A-Za-z0-9+\/]{2}==)$/) ? str.slice(dataStart) : false;
 } else return false;
});
maximJs.maxiTools._keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
maximJs.maxiTools.removePaddingFromBase64 = (function(input) {
 var lkey = maximJs.maxiTools._keyStr.indexOf(input.charAt(input.length - 1));
 if (lkey == 64) {
  return input.substring(0, input.length - 1);
 }
 return input;
});
maximJs.maxiAudio = (function() {
 this.numChannels = 2;
 this.output = 0;
 this.context = null;
 this.source = null;
 this.analyser = null;
 this.jsProcessor = null;
 this.bufferSize = 1024;
 this.initDone = false;
});
maximJs.maxiAudio.play = (function() {});
maximJs.maxiAudio.setup = (function() {
 console.log("non-overrided setup");
});
maximJs.maxiAudio.prototype.getNumChannels = (function() {
 return this.numChannels;
});
maximJs.maxiAudio.prototype.setNumChannels = (function(isArray, numChannels_) {
 this.numChannels = numChannels_;
 this.outputIsArray(isArray, numChannels_);
 this.resetAudio();
});
maximJs.maxiAudio.prototype.setBufferSize = (function(newBufferSize) {
 this.bufferSize = newBufferSize;
 this.resetAudio();
});
maximJs.maxiAudio.prototype.outputIsArray = (function(isArray) {
 if (isArray) {
  this.output = new Array(this.numChannels);
  for (var i = 0; i < this.numChannels; i++) {
   this.output[i] = 0;
  }
 } else {
  this.output = 0;
 }
});
maximJs.maxiAudio.prototype.init = (function() {
 this.context = new (window.AudioContext || window.webkitAudioContext);
 this.source = this.context.createBufferSource();
 this.jsProcessor = this.context.createScriptProcessor(this.bufferSize, this.numChannels, this.numChannels);
 this.jsProcessor.onaudioprocess = (function(event) {
  var numChannels = event.outputBuffer.numberOfChannels;
  var outputLength = event.outputBuffer.getChannelData(0).length;
  for (var i = 0; i < outputLength; ++i) {
   this.play();
   if (this.output instanceof Array) {
    for (var channel = 0; channel < numChannels; channel++) {
     event.outputBuffer.getChannelData(channel)[i] = this.output[channel];
    }
   } else {
    for (var channel = 0; channel < numChannels; channel++) {
     event.outputBuffer.getChannelData(channel)[i] = this.output;
    }
   }
  }
 }).bind(this);
 this.analyser = this.context.createAnalyser();
 this.analyser.fftSize = 2048;
 this.source.connect(this.jsProcessor);
 this.jsProcessor.connect(this.analyser);
 this.analyser.connect(this.context.destination);
 this.initDone = true;
});
maximJs.maxiAudio.prototype.resetAudio = (function() {
 if (this.initDone) {
  this.source.disconnect();
  this.jsProcessor.disconnect();
  this.analyser.disconnect();
 }
 this.init();
});
maximJs.maxiAudio.prototype.loadSample = (function(url, samplePlayer, contextIn) {
 var data = [];
 var context;
 if (!contextIn) {
  context = this.context;
 } else {
  context = contextIn;
 }
 samplePlayer.clear();
 var b64 = maximJs.maxiTools.getBase64(url);
 if (b64) {
  var ab_bytes = b64.length / 4 * 3;
  var arrayBuffer = new ArrayBuffer(ab_bytes);
  b64 = maximJs.maxiTools.removePaddingFromBase64(maximJs.maxiTools.removePaddingFromBase64(b64));
  var bytes = parseInt(b64.length / 4 * 3, 10);
  var uarray;
  var chr1, chr2, chr3;
  var enc1, enc2, enc3, enc4;
  var i = 0;
  var j = 0;
  uarray = new Uint8Array(arrayBuffer);
  b64 = b64.replace(/[^A-Za-z0-9\+\/\=]/g, "");
  for (i = 0; i < bytes; i += 3) {
   enc1 = maximJs.maxiTools._keyStr.indexOf(b64.charAt(j++));
   enc2 = maximJs.maxiTools._keyStr.indexOf(b64.charAt(j++));
   enc3 = maximJs.maxiTools._keyStr.indexOf(b64.charAt(j++));
   enc4 = maximJs.maxiTools._keyStr.indexOf(b64.charAt(j++));
   chr1 = enc1 << 2 | enc2 >> 4;
   chr2 = (enc2 & 15) << 4 | enc3 >> 2;
   chr3 = (enc3 & 3) << 6 | enc4;
   uarray[i] = chr1;
   if (enc3 != 64) uarray[i + 1] = chr2;
   if (enc4 != 64) uarray[i + 2] = chr3;
  }
  context.decodeAudioData(arrayBuffer, (function(buffer) {
   data = buffer.getChannelData(0);
   if (data) {
    var myBufferData = new Module.VectorDouble;
    for (var n = 0; n < data.length; n++) {
     myBufferData.push_back(data[n]);
    }
    samplePlayer.setSample(myBufferData);
   }
  }), (function(buffer) {
   console.log("Error decoding source!");
  }));
 } else {
  var request = new XMLHttpRequest;
  request.addEventListener("load", (function(evt) {
   console.log("The transfer is complete.");
  }));
  request.open("GET", url, true);
  request.responseType = "arraybuffer";
  request.onload = (function() {
   context.decodeAudioData(request.response, (function(buffer) {
    data = buffer.getChannelData(0);
    if (data) {
     var myBufferData = new Module.VectorDouble;
     for (var n = 0; n < data.length; n++) {
      myBufferData.push_back(data[n]);
     }
     samplePlayer.setSample(myBufferData);
    }
   }), (function(buffer) {
    console.log("Error decoding source!");
   }));
  });
  request.send();
 }
});




"></script>
	 <canvas id="myCanvas" width="800" height="600"></canvas>
</body>
<script type="text/javascript">
	//fft (FORKED)
	var fft = new maximJs.maxiFFT();
	var fftSize = 1024;
    var magMult = 6;
    var count = 0;
    var barsBottom = 600;
    var barsLeft = 0;
    var output = [];
    // This gets the window in the browser
    var canvas = document.getElementById("myCanvas");
    // This creates a 2d drawing context in it.
    var context = canvas.getContext("2d");
    fft.setup(fftSize, 512, 256);
    //END forkage/forkitude
	//audio
	var maxiAudio = new maximJs.maxiAudio();
    //oscillators
	var Osc = new maximJs.maxiOsc();
	var Osc2 = new maximJs.maxiOsc();
	var myFilter = new maximJs.maxiFilter();
	var myFilter2 = new maximJs.maxiFilter();
	var myPhasor = new maximJs.maxiOsc();
	var myPhasor2 = new maximJs.maxiOsc();
	
	//time
	var myTime = new maximJs.maxiClock ();
	var myTime2 = new maximJs.maxiClock ();
	var counter = 0, counter2 = 0;
	
	//Sequence Frequencies
	//initial values array = 4200,150,2350,4365,240,1770,80
	var fndArray = [420,150,235,436,100,177,80];
	var fndArray2 = [110, 111, 112, 120, 90, 80, 95];
	var fnd = 0, fnd2 = 0;
	var iA, oA, ooA = 0; // input/output sound for low-pass filter
	var lpAFactor = 0.7, lpFFactor = 0.001;
	var ranFactor;
	var iF, oF, ooF = 0;
	var oF2, oA2;
	
    // time init/set
	myTime.setTicksPerBeat(3);
	myTime.setTempo(100);
	myTime2.setTicksPerBeat(6);
	myTime2.setTempo(200);
	
	maxiAudio.init();
	var volOn = 1;
	var vol = 0.2;
	maxiAudio.play = function () {
	    myTime.ticker();
	    myTime2.ticker();
	    if (myTime.tick){
	        counter++;
	        fnd = fndArray[counter%7];
	    }
	    if (myTime2.tick){
	        counter2++;
	        fnd2 = fndArray2[counter2%7];
	    }
        ranFactor = Math.random();
        iF = fnd*ranFactor;
        oF = ooF + lpFFactor*(iF-ooF);
        ooF = oF;
        oF2 = myFilter.lopass(oF, 0.003);
        iA = Osc.sinewave(oF2)*(0.5+0.5*Osc2.sinewave(fnd2));
	    oA = ooA + lpAFactor*(iA-ooA);
	    ooA = oA;
	    oA2 = myFilter2.lores(oA, 100+myPhasor.phasor(5)*5000, 1+(0.5+0.5*myPhasor2.sinewave(0.5))*500);
	    
	    //Volume Control
		this.output = oA2*vol*volOn;
		
		
		  if (fft.process(oA)) {
            fft.magsToDB();
        }
            //count++; // increment counter

    };

    function draw() {

        context.clearRect(0, 0, 700, 700);

        for (var i = 0; i < fftSize / 2; i++) {
            context.beginPath();
            context.fillStyle = "#FF0000";
            context.rect(barsLeft + i, barsBottom-200, 1, -(fft.getMagnitude(i) * magMult));
            context.fill();
            // context.stroke();
            context.closePath();
        }
        //console.log(count/44100);
    }

    setInterval(draw, 10);
	
	
</script>
</html>